<?xml version="1.0" encoding="utf-8"?>
<DemeanorReport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.wiseowl.com/Schemas/DemeanorReport.xsd">
  <ObfuscationOptions xmlns="">
    <InputAssembly>Output\Bin\Release\TestAutomationFX.Core.dll</InputAssembly>
    <OutputDirectory>C:\TeamCity\buildAgent\work\1304883d19c637cf\Output\Bin\Release\Demeanor</OutputDirectory>
    <ReportFile>Output\Bin\Release\TestAutomationFX.Core.xml</ReportFile>
    <NamespacePrefix xsi:nil="true" />
    <All>false</All>
    <InSitu>false</InSitu>
    <NoLogo>true</NoLogo>
    <NoTypes>false</NoTypes>
    <NoFields>false</NoFields>
    <NoMethods>false</NoMethods>
    <NoParameters>false</NoParameters>
    <NoEnumerations>false</NoEnumerations>
    <NoProperties>false</NoProperties>
    <NoEvents>false</NoEvents>
    <NoResources>false</NoResources>
    <NoSerializable>false</NoSerializable>
    <ForceParameters>false</ForceParameters>
    <SatelliteAssemblies>false</SatelliteAssemblies>
    <EntireApplication>false</EntireApplication>
    <Verbose>false</Verbose>
    <EncryptStrings>false</EncryptStrings>
    <DoReport>true</DoReport>
    <ControlFlow>None</ControlFlow>
    <OverloadOnStatic>false</OverloadOnStatic>
    <TypeAndMemberExclusions />
    <ExcludeRegularExpressions />
    <ExcludedAssemblies />
    <AdditionalAssemblies />
    <SatelliteAssemblyCultures />
  </ObfuscationOptions>
  <Assemblies xmlns="">
    <Assembly>
      <FullName>TestAutomationFX.Core, Version=2.6.65.0, Culture=neutral, PublicKeyToken=null</FullName>
      <Modules>
        <Module>
          <Name>TestAutomationFX.Core.dll</Name>
          <TypeMappings>
            <TopLevelType>
              <Name>&lt;Module&gt;</Name>
              <NewName>&lt;Module&gt;</NewName>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.ApplicationStatus</Name>
              <NewName>TestAutomationFX.Core.ApplicationStatus</NewName>
              <Method>
                <Original>
                  <Name>IsWindowProcessingMessages</Name>
                  <Signature>static bool IsWindowProcessingMessages (native int, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsWindowProcessingMessages</Name>
                  <Signature>static bool IsWindowProcessingMessages (native int, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsProcessResponding</Name>
                  <Signature>static bool IsProcessResponding ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsProcessResponding</Name>
                  <Signature>static bool IsProcessResponding ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsProcessRespondingInternal</Name>
                  <Signature>static bool IsProcessRespondingInternal ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsWindowProcessingMessagesInternal</Name>
                  <Signature>static bool IsWindowProcessingMessagesInternal (native int, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (native int, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.BetaProgram.BetaInformation</Name>
              <NewName>TestAutomationFX.Core.BetaProgram.BetaInformation</NewName>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Banner</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Header</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CloseButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_VisitTAFXSiteLinkLabel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.LinkLabel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.LinkLabel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnLinkClicked</Name>
                  <Signature>void OnLinkClicked (object, [System.Windows.Forms] System.Windows.Forms.LinkLabelLinkClickedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.LinkLabelLinkClickedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.BetaProgram.BetaService</Name>
              <NewName>a</NewName>
              <Method>
                <Original>
                  <Name>get_IsBetaModeEnabled</Name>
                  <Signature>static bool get_IsBetaModeEnabled ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HasBetaDateExpired</Name>
                  <Signature>static bool HasBetaDateExpired (TestAutomationFX.Core.BetaProgram.BetaService/Info)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (a/a)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowBetaExpiredInfo</Name>
                  <Signature>static void ShowBetaExpiredInfo ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsBetaExpired</Name>
                  <Signature>static bool get_IsBetaExpired ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static bool b ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>IsBetaModeEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsBetaExpired</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>Info</Name>
                <NewName>a</NewName>
                <Field>
                  <Original>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>NoInfo</Name>
                    <Signature>TestAutomationFX.Core.BetaProgram.BetaService/Info</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>_Deleted</Name>
                    <Signature>TestAutomationFX.Core.BetaProgram.BetaService/Info</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>ShowInfo</Name>
                    <Signature>TestAutomationFX.Core.BetaProgram.BetaService/Info</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>_Deleted</Name>
                    <Signature>TestAutomationFX.Core.BetaProgram.BetaService/Info</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.BetaProgram.TrialExpireDateAttribute</Name>
              <NewName>b</NewName>
              <Field>
                <Original>
                  <Name>&lt;ExpireDate&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (int32, int32, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (int32, int32, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ExpireDate</Name>
                  <Signature>[mscorlib] System.DateTime get_ExpireDate ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.DateTime a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ExpireDate</Name>
                  <Signature>void set_ExpireDate ([mscorlib] System.DateTime)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([mscorlib] System.DateTime)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ExpireDate</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.DateTime a</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.CodeGeneration.CodeDomHelper</Name>
              <NewName>c</NewName>
              <Field>
                <Original>
                  <Name>m_CodeGeneratorOptions</Name>
                  <Signature>[System] System.CodeDom.Compiler.CodeGeneratorOptions</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.CodeDom.Compiler.CodeGeneratorOptions</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_VSCodeHelper</Name>
                  <Signature>TestAutomationFX.Core.CodeGeneration.VSCodeHelper</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>e</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;IndentString&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_IndentString</Name>
                  <Signature>string get_IndentString ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IndentString</Name>
                  <Signature>void set_IndentString (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CodeProvider</Name>
                  <Signature>[System] System.CodeDom.Compiler.CodeDomProvider get_CodeProvider ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.CodeDom.Compiler.CodeDomProvider a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CodeGeneratorOptions</Name>
                  <Signature>[System] System.CodeDom.Compiler.CodeGeneratorOptions get_CodeGeneratorOptions ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.CodeDom.Compiler.CodeGeneratorOptions a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCodeFromRecordedAction</Name>
                  <Signature>string GetCodeFromRecordedAction (TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a (TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCommentCodeDom</Name>
                  <Signature>[System] System.CodeDom.CodeStatement GetCommentCodeDom (TestAutomationFX.Core.Recording.RecordedCommentAction)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.CodeDom.CodeStatement a (TestAutomationFX.Core.Recording.RecordedCommentAction)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCommentCode</Name>
                  <Signature>string GetCommentCode (TestAutomationFX.Core.Recording.RecordedCommentAction)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a (TestAutomationFX.Core.Recording.RecordedCommentAction)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCodeInvokeMethodCall</Name>
                  <Signature>string GetCodeInvokeMethodCall ([System] System.CodeDom.CodeExpression, string, [mscorlib] System.Collections.ICollection)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a ([System] System.CodeDom.CodeExpression, string, [mscorlib] System.Collections.ICollection)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCode</Name>
                  <Signature>string GetCode ([System] System.CodeDom.CodeExpression)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a ([System] System.CodeDom.CodeExpression)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateParameters</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [System] System.CodeDom.CodeExpression &gt; CreateParameters ([mscorlib] System.Collections.ICollection)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [System] System.CodeDom.CodeExpression &gt; a ([mscorlib] System.Collections.ICollection)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>IndentString</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CodeProvider</Name>
                  <Signature>[System] System.CodeDom.Compiler.CodeDomProvider</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System] System.CodeDom.Compiler.CodeDomProvider</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CodeGeneratorOptions</Name>
                  <Signature>[System] System.CodeDom.Compiler.CodeGeneratorOptions</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System] System.CodeDom.Compiler.CodeGeneratorOptions</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.CodeGeneration.CodeInsertMode</Name>
              <NewName>d</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>AtStart</Name>
                  <Signature>TestAutomationFX.Core.CodeGeneration.CodeInsertMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.CodeGeneration.CodeInsertMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>AtEnd</Name>
                  <Signature>TestAutomationFX.Core.CodeGeneration.CodeInsertMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.CodeGeneration.CodeInsertMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Replace</Name>
                  <Signature>TestAutomationFX.Core.CodeGeneration.CodeInsertMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.CodeGeneration.CodeInsertMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.CodeGeneration.VSCodeHelper</Name>
              <NewName>e</NewName>
              <Field>
                <Original>
                  <Name>VB</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>CSharp</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Site</Name>
                  <Signature>[System] System.ComponentModel.ISite</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.ISite</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_FileCodeModel</Name>
                  <Signature>[EnvDTE] EnvDTE.FileCodeModel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[EnvDTE] EnvDTE.FileCodeModel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_LastInsertPosition</Name>
                  <Signature>[EnvDTE] EnvDTE.TextPoint</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[EnvDTE] EnvDTE.TextPoint</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ClassAttributeToMethodAttributes</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; string, string &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; string, string &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_CurrentLanguage</Name>
                  <Signature>TestAutomationFX.Core.CodeGeneration.VSCodeHelper/LanguageEnum get_CurrentLanguage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>e/a a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LastInsertPosition</Name>
                  <Signature>[EnvDTE] EnvDTE.TextPoint get_LastInsertPosition ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[EnvDTE] EnvDTE.TextPoint a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Site</Name>
                  <Signature>[System] System.ComponentModel.ISite get_Site ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.ISite a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Site</Name>
                  <Signature>void set_Site ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_FileCodeModel</Name>
                  <Signature>[EnvDTE] EnvDTE.FileCodeModel get_FileCodeModel ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[EnvDTE] EnvDTE.FileCodeModel a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DTE</Name>
                  <Signature>[EnvDTE] EnvDTE.DTE get_DTE ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[EnvDTE] EnvDTE.DTE a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsDesignMode</Name>
                  <Signature>bool get_IsDesignMode ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMethodConstructor</Name>
                  <Signature>bool IsMethodConstructor (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddCodeToMethod</Name>
                  <Signature>void AddCodeToMethod (string, string, TestAutomationFX.Core.CodeGeneration.CodeInsertMode)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string, string, d)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowMethod</Name>
                  <Signature>bool ShowMethod (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool b (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddTestAttributes</Name>
                  <Signature>void AddTestAttributes ([EnvDTE] EnvDTE.CodeFunction)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([EnvDTE] EnvDTE.CodeFunction)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ClassAttributeToMethodAttributes</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.Dictionary`2&lt; string, string &gt; get_ClassAttributeToMethodAttributes ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.Dictionary`2&lt; string, string &gt; a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowInsertedCode</Name>
                  <Signature>static void ShowInsertedCode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowTextPoint</Name>
                  <Signature>static void ShowTextPoint ([EnvDTE] EnvDTE.TextPoint)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ([EnvDTE] EnvDTE.TextPoint)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DeleteCodeFunctionBody</Name>
                  <Signature>static void DeleteCodeFunctionBody ([EnvDTE] EnvDTE.CodeFunction)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static void b ([EnvDTE] EnvDTE.CodeFunction)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CodeClass</Name>
                  <Signature>[EnvDTE80] EnvDTE80.CodeClass2 get_CodeClass ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[EnvDTE80] EnvDTE80.CodeClass2 a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMethods</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt; GetMethods ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt; a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCodeFunction</Name>
                  <Signature>[EnvDTE] EnvDTE.CodeFunction GetCodeFunction (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[EnvDTE] EnvDTE.CodeFunction a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetNewMethodName</Name>
                  <Signature>string GetNewMethodName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsDTEAvailable</Name>
                  <Signature>bool IsDTEAvailable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool b ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>CurrentLanguage</Name>
                  <Signature>TestAutomationFX.Core.CodeGeneration.VSCodeHelper/LanguageEnum</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.CodeGeneration.VSCodeHelper/LanguageEnum</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LastInsertPosition</Name>
                  <Signature>[EnvDTE] EnvDTE.TextPoint</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[EnvDTE] EnvDTE.TextPoint</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Site</Name>
                  <Signature>[System] System.ComponentModel.ISite</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System] System.ComponentModel.ISite</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>FileCodeModel</Name>
                  <Signature>[EnvDTE] EnvDTE.FileCodeModel</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[EnvDTE] EnvDTE.FileCodeModel</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DTE</Name>
                  <Signature>[EnvDTE] EnvDTE.DTE</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[EnvDTE] EnvDTE.DTE</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsDesignMode</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ClassAttributeToMethodAttributes</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; string, string &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; string, string &gt;</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CodeClass</Name>
                  <Signature>[EnvDTE80] EnvDTE80.CodeClass2</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[EnvDTE80] EnvDTE80.CodeClass2</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>LanguageEnum</Name>
                <NewName>a</NewName>
                <Field>
                  <Original>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>VB</Name>
                    <Signature>TestAutomationFX.Core.CodeGeneration.VSCodeHelper/LanguageEnum</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>_Deleted</Name>
                    <Signature>TestAutomationFX.Core.CodeGeneration.VSCodeHelper/LanguageEnum</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>CSharp</Name>
                    <Signature>TestAutomationFX.Core.CodeGeneration.VSCodeHelper/LanguageEnum</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>_Deleted</Name>
                    <Signature>TestAutomationFX.Core.CodeGeneration.VSCodeHelper/LanguageEnum</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.CommandLineHelper</Name>
              <NewName>TestAutomationFX.Core.CommandLineHelper</NewName>
              <Method>
                <Original>
                  <Name>IsFlagEnabled</Name>
                  <Signature>static bool IsFlagEnabled (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsFlagEnabled</Name>
                  <Signature>static bool IsFlagEnabled (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemoveParameterPrefix</Name>
                  <Signature>static string RemoveParameterPrefix (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.ComponentNameValidator</Name>
              <NewName>TestAutomationFX.Core.ComponentNameValidator</NewName>
              <Field>
                <Original>
                  <Name>m_ForbiddenNames</Name>
                  <Signature>string[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>IsForbiddenName</Name>
                  <Signature>bool IsForbiddenName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsForbiddenName</Name>
                  <Signature>bool IsForbiddenName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <NestedType>
                <Name>&lt;&gt;c__DisplayClass1</Name>
                <NewName>&lt;&gt;c__DisplayClass1</NewName>
                <Field>
                  <Original>
                    <Name>name</Name>
                    <Signature>string</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>name</Name>
                    <Signature>string</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;IsForbiddenName&gt;b__0</Name>
                    <Signature>bool &lt;IsForbiddenName&gt;b__0 (string)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;IsForbiddenName&gt;b__0</Name>
                    <Signature>bool &lt;IsForbiddenName&gt;b__0 (string)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.ControlParts.ControlPartProvider</Name>
              <NewName>TestAutomationFX.ControlParts.ControlPartProvider</NewName>
              <Field>
                <Original>
                  <Name>m_Control</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Control</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control get_Control ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Control</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control get_Control ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Control</Name>
                  <Signature>void set_Control ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Control</Name>
                  <Signature>void set_Control ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetControlPartInfoFromPoint</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetControlPartInfoFromPoint</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetControlPartInfoFromPath</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetControlPartInfoFromPath</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetControlPartInfoChildren</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo[] GetControlPartInfoChildren (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetControlPartInfoChildren</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo[] GetControlPartInfoChildren (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsSupported</Name>
                  <Signature>bool IsSupported ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsSupported</Name>
                  <Signature>bool IsSupported ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo CreateControlPartInfo (string, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo CreateControlPartInfo (string, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo CreateControlPartInfo (string, string, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo CreateControlPartInfo (string, string, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo CreateControlPartInfo (string, string, [System.Drawing] System.Drawing.Rectangle, [System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo CreateControlPartInfo (string, string, [System.Drawing] System.Drawing.Rectangle, [System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Control</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control</Signature>
                </Original>
                <Obfuscated>
                  <Name>Control</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control Control</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.ControlParts.ControlPartProviderFactory</Name>
              <NewName>TestAutomationFX.ControlParts.ControlPartProviderFactory</NewName>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ControlPartProviderTypes</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Type &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Type &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddTypes</Name>
                  <Signature>void AddTypes ([mscorlib] System.Type[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddTypes</Name>
                  <Signature>void AddTypes ([mscorlib] System.Type[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddType</Name>
                  <Signature>void AddType ([mscorlib] System.Type)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([mscorlib] System.Type)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddAssemblies</Name>
                  <Signature>void AddAssemblies (string[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddAssemblies</Name>
                  <Signature>void AddAssemblies (string[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetAssemblyPaths</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt; GetAssemblyPaths (string[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt; a (string[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupProviderTypes</Name>
                  <Signature>void SetupProviderTypes ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetupProviderTypes</Name>
                  <Signature>void SetupProviderTypes ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddTypesFromVisualStudioService</Name>
                  <Signature>void AddTypesFromVisualStudioService ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ControlPartProviderTypes</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Type &gt; get_ControlPartProviderTypes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ControlPartProviderTypes</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Type &gt; get_ControlPartProviderTypes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ControlPartProviderTypes</Name>
                  <Signature>void set_ControlPartProviderTypes ([mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Type &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ControlPartProviderTypes</Name>
                  <Signature>void set_ControlPartProviderTypes ([mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Type &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ControlPartProviderTypes</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Type &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>ControlPartProviderTypes</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Type &gt; ControlPartProviderTypes</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.ControlParts.DotNetMagicTabControlPartProvider</Name>
              <NewName>TestAutomationFX.ControlParts.DotNetMagicTabControlPartProvider</NewName>
              <Method>
                <Original>
                  <Name>GetControlPartInfoFromPoint</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetControlPartInfoFromPoint</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetControlPartInfoFromPath</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetControlPartInfoFromPath</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsSupported</Name>
                  <Signature>bool IsSupported ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsSupported</Name>
                  <Signature>bool IsSupported ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetTabRects</Name>
                  <Signature>[mscorlib] System.Collections.ArrayList GetTabRects ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.ArrayList a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.ControlParts.DotNetMagicTreeControlPartProvider</Name>
              <NewName>TestAutomationFX.ControlParts.DotNetMagicTreeControlPartProvider</NewName>
              <Method>
                <Original>
                  <Name>GetControlPartInfoFromPoint</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetControlPartInfoFromPoint</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetControlPartFromNode</Name>
                  <Signature>static [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartFromNode (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo a (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetControlPartInfoFromPath</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetControlPartInfoFromPath</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsSupported</Name>
                  <Signature>bool IsSupported ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsSupported</Name>
                  <Signature>bool IsSupported ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindNodeByPath</Name>
                  <Signature>object FindNodeByPath ([mscorlib] System.Collections.IEnumerable, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object a ([mscorlib] System.Collections.IEnumerable, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.ControlParts.Infragistics.UIElementWrapper</Name>
              <NewName>f</NewName>
              <Field>
                <Original>
                  <Name>m_Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.ControlParts.Infragistics.UIElementWrapper &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; f &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Path</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Index&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Zorder&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;UIElement&gt;k__BackingField</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Parent&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.ControlParts.Infragistics.UIElementWrapper</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>f</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Path</Name>
                  <Signature>string get_Path ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32 a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Index</Name>
                  <Signature>void set_Index (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Zorder</Name>
                  <Signature>int32 get_Zorder ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32 b ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Zorder</Name>
                  <Signature>void set_Zorder (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIElement</Name>
                  <Signature>object get_UIElement ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UIElement</Name>
                  <Signature>void set_UIElement (object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Parent</Name>
                  <Signature>TestAutomationFX.ControlParts.Infragistics.UIElementWrapper get_Parent ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>f a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Parent</Name>
                  <Signature>void set_Parent (TestAutomationFX.ControlParts.Infragistics.UIElementWrapper)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (f)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.ControlParts.Infragistics.UIElementWrapper &gt; get_Children ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; f &gt; a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo get_ControlPartInfo ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetUIElementWrapperFromPath</Name>
                  <Signature>TestAutomationFX.ControlParts.Infragistics.UIElementWrapper GetUIElementWrapperFromPath (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>f a (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetClosestUIElementWrapperFromPoint</Name>
                  <Signature>TestAutomationFX.ControlParts.Infragistics.UIElementWrapper GetClosestUIElementWrapperFromPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>f a ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetUIElementWrapperFromPath</Name>
                  <Signature>static TestAutomationFX.ControlParts.Infragistics.UIElementWrapper GetUIElementWrapperFromPath (string, TestAutomationFX.ControlParts.Infragistics.UIElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static f a (string, f)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetUIElementChildWithIndex</Name>
                  <Signature>static TestAutomationFX.ControlParts.Infragistics.UIElementWrapper GetUIElementChildWithIndex (string, TestAutomationFX.ControlParts.Infragistics.UIElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static f b (string, f)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPath</Name>
                  <Signature>static string GetPath (TestAutomationFX.ControlParts.Infragistics.UIElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a (f)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetControlPartInfo</Name>
                  <Signature>static [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfo (TestAutomationFX.ControlParts.Infragistics.UIElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo a (f)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetUIElementTypeName</Name>
                  <Signature>static string GetUIElementTypeName (TestAutomationFX.ControlParts.Infragistics.UIElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static string b (f)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetChildElements</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.ControlParts.Infragistics.UIElementWrapper &gt; GetChildElements (TestAutomationFX.ControlParts.Infragistics.UIElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.List`1&lt; f &gt; a (f)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRectangleFromUIElement</Name>
                  <Signature>static [System.Drawing] System.Drawing.Rectangle GetRectangleFromUIElement (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [System.Drawing] System.Drawing.Rectangle a (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetClosestUIElementWrapperFromPoint</Name>
                  <Signature>static TestAutomationFX.ControlParts.Infragistics.UIElementWrapper GetClosestUIElementWrapperFromPoint ([System.Drawing] System.Drawing.Point, TestAutomationFX.ControlParts.Infragistics.UIElementWrapper)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static f a ([System.Drawing] System.Drawing.Point, f)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Path</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Index</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Zorder</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIElement</Name>
                  <Signature>object</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>object</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Parent</Name>
                  <Signature>TestAutomationFX.ControlParts.Infragistics.UIElementWrapper</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.ControlParts.Infragistics.UIElementWrapper</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.ControlParts.Infragistics.UIElementWrapper &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.ControlParts.Infragistics.UIElementWrapper &gt;</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.ControlParts.InvokeHelper</Name>
              <NewName>TestAutomationFX.ControlParts.InvokeHelper</NewName>
              <Method>
                <Original>
                  <Name>InvokeInternal</Name>
                  <Signature>static object InvokeInternal (object, string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static object a (object, string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Invoke</Name>
                  <Signature>static object Invoke (object, string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Invoke</Name>
                  <Signature>static object Invoke (object, string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Invoke0</Name>
                  <Signature>static object Invoke0 (object, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Invoke0</Name>
                  <Signature>static object Invoke0 (object, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Invoke1</Name>
                  <Signature>static object Invoke1 (object, string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Invoke1</Name>
                  <Signature>static object Invoke1 (object, string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.ControlParts.PropertyHelper</Name>
              <NewName>TestAutomationFX.ControlParts.PropertyHelper</NewName>
              <Field>
                <Original>
                  <Name>m_TypePropertyInfos</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; [mscorlib] System.Type, [mscorlib] System.Collections.Generic.Dictionary`2&lt; string, [mscorlib] System.Reflection.PropertyInfo &gt; &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; [mscorlib] System.Type, [mscorlib] System.Collections.Generic.Dictionary`2&lt; string, [mscorlib] System.Reflection.PropertyInfo &gt; &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProperty</Name>
                  <Signature>static object GetProperty (object, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetProperty</Name>
                  <Signature>static object GetProperty (object, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPropertyInfo</Name>
                  <Signature>static [mscorlib] System.Reflection.PropertyInfo GetPropertyInfo ([mscorlib] System.Type, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.Reflection.PropertyInfo a ([mscorlib] System.Type, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.ControlParts.Infragistics.UltraExpandableGroupBoxControlPartProvider</Name>
              <NewName>TestAutomationFX.ControlParts.Infragistics.UltraExpandableGroupBoxControlPartProvider</NewName>
              <Method>
                <Original>
                  <Name>GetControlPartInfoFromPoint</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetControlPartInfoFromPoint</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetControlPartInfoFromPath</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetControlPartInfoFromPath</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsSupported</Name>
                  <Signature>bool IsSupported ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsSupported</Name>
                  <Signature>bool IsSupported ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRootUIElement</Name>
                  <Signature>TestAutomationFX.ControlParts.Infragistics.UIElementWrapper GetRootUIElement ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>f a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.ControlParts.WinFormsTreeViewControlPartProvider</Name>
              <NewName>TestAutomationFX.ControlParts.WinFormsTreeViewControlPartProvider</NewName>
              <Method>
                <Original>
                  <Name>GetControlPartInfoFromPoint</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetControlPartInfoFromPoint</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TreeView</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeView get_TreeView ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeView a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPathFromTreeNode</Name>
                  <Signature>string GetPathFromTreeNode ([System.Windows.Forms] System.Windows.Forms.TreeNode)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a ([System.Windows.Forms] System.Windows.Forms.TreeNode)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetControlPartInfoFromPath</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetControlPartInfoFromPath</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsSupported</Name>
                  <Signature>bool IsSupported ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsSupported</Name>
                  <Signature>bool IsSupported ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateControlPartInfoFromTreeNode</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo CreateControlPartInfoFromTreeNode ([System.Windows.Forms] System.Windows.Forms.TreeNode)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo a ([System.Windows.Forms] System.Windows.Forms.TreeNode)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetTreeNodeFromFullPath</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeNode GetTreeNodeFromFullPath (string, [System.Windows.Forms] System.Windows.Forms.TreeNodeCollection)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeNode a (string, [System.Windows.Forms] System.Windows.Forms.TreeNodeCollection)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>TreeView</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeView</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeView</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.ControlParts.WpfRibbonControlPartProvider</Name>
              <NewName>g</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsSupported</Name>
                  <Signature>bool IsSupported ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsSupported</Name>
                  <Signature>bool IsSupported ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetControlPartInfoFromPoint</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetControlPartInfoFromPoint</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.CursorHelper</Name>
              <NewName>TestAutomationFX.Core.CursorHelper</NewName>
              <Field>
                <Original>
                  <Name>m_PreviousCursor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>SetCursor</Name>
                  <Signature>static [mscorlib] System.IDisposable SetCursor ([System.Windows.Forms] System.Windows.Forms.Cursor)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetCursor</Name>
                  <Signature>static [mscorlib] System.IDisposable SetCursor ([System.Windows.Forms] System.Windows.Forms.Cursor)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System.Windows.Forms] System.Windows.Forms.Cursor)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System.Windows.Forms] System.Windows.Forms.Cursor)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.IDisposable.Dispose</Name>
                  <Signature>void System.IDisposable.Dispose ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.IDisposable.Dispose</Name>
                  <Signature>void System.IDisposable.Dispose ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.CustomLicenseProviderLoader</Name>
              <NewName>TestAutomationFX.Core.CustomLicenseProviderLoader</NewName>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLicense</Name>
                  <Signature>[System] System.ComponentModel.License GetLicense ([System] System.ComponentModel.LicenseContext, [mscorlib] System.Type, object, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetLicense</Name>
                  <Signature>[System] System.ComponentModel.License GetLicense ([System] System.ComponentModel.LicenseContext, [mscorlib] System.Type, object, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Delphi.DelphiSupport</Name>
              <NewName>h</NewName>
              <Field>
                <Original>
                  <Name>DelphiFileName</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;IsDelphiSupportEnabled&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_IsDelphiSupportEnabled</Name>
                  <Signature>static bool get_IsDelphiSupportEnabled ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsDelphiSupportEnabled</Name>
                  <Signature>static void set_IsDelphiSupportEnabled (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsDelphiControl</Name>
                  <Signature>bool IsDelphiControl (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProperty</Name>
                  <Signature>object GetProperty (TestAutomationFX.Core.WindowController, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object a (TestAutomationFX.Core.WindowController, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetProperty</Name>
                  <Signature>void SetProperty (TestAutomationFX.Core.WindowController, string, object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.WindowController, string, object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InvokeMethod</Name>
                  <Signature>void InvokeMethod (TestAutomationFX.Core.WindowController, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.WindowController, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateDelphiDllFile</Name>
                  <Signature>void UpdateDelphiDllFile ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsDelphiDllPresent</Name>
                  <Signature>bool get_IsDelphiDllPresent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsWindowDelphiCandidate</Name>
                  <Signature>bool IsWindowDelphiCandidate (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool b (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WriteDelphiDllFile</Name>
                  <Signature>void WriteDelphiDllFile ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DelphiDllPath</Name>
                  <Signature>string get_DelphiDllPath ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>IsDelphiSupportEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsDelphiDllPresent</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DelphiDllPath</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.UIObjectLoader</Name>
              <NewName>TestAutomationFX.Core.UIObjectLoader</NewName>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIObject</Name>
              <NewName>TestAutomationFX.UI.UIObject</NewName>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_HighlightRectangle</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_HighlightedObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Parent</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.UI.UIObject &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.UI.UIObject &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_IsAttached</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PropertyChangedEventHandler</Name>
                  <Signature>[System] System.ComponentModel.PropertyChangedEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.PropertyChangedEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UIObjectType</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Name</Name>
                  <Signature>string</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m_Name</Name>
                  <Signature>string</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TimeOut</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_IsOptional</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_LastAttachFailedTime</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_InSetupMatchedProperties</Name>
                  <Signature>bool</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m_InSetupMatchedProperties</Name>
                  <Signature>bool</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MatchedIndex</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ObjectImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Attaching</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Attached</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>AttachFailing</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.AttachFailingEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.AttachFailingEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>AttachFailed</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ActionExecuting</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.ActionEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.ActionEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ActionExecuted</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.ActionEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.ActionEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PropertyMatches</Name>
                  <Signature>TestAutomationFX.UI.PropertyValues</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.PropertyValues</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ActionCount&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Comment&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;AllowChildren&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;MappingStatus&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.UI.MappingStatus</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.MappingStatus</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;UseCoordinatesOnClick&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;MousePath&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.UI.MousePath</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.UI.MousePath</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;CheckVisible&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;CheckEnabled&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;CheckResponding&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;CheckAvailable&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_ActionCount</Name>
                  <Signature>static int32 get_ActionCount ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static int32 a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ActionCount</Name>
                  <Signature>static void set_ActionCount (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_Attaching</Name>
                  <Signature>void add_Attaching ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_Attaching</Name>
                  <Signature>void add_Attaching ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_Attaching</Name>
                  <Signature>void remove_Attaching ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_Attaching</Name>
                  <Signature>void remove_Attaching ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_Attached</Name>
                  <Signature>void add_Attached ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_Attached</Name>
                  <Signature>void add_Attached ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_Attached</Name>
                  <Signature>void remove_Attached ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_Attached</Name>
                  <Signature>void remove_Attached ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_AttachFailing</Name>
                  <Signature>void add_AttachFailing ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.AttachFailingEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_AttachFailing</Name>
                  <Signature>void add_AttachFailing ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.AttachFailingEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_AttachFailing</Name>
                  <Signature>void remove_AttachFailing ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.AttachFailingEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_AttachFailing</Name>
                  <Signature>void remove_AttachFailing ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.AttachFailingEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_AttachFailed</Name>
                  <Signature>void add_AttachFailed ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_AttachFailed</Name>
                  <Signature>void add_AttachFailed ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_AttachFailed</Name>
                  <Signature>void remove_AttachFailed ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_AttachFailed</Name>
                  <Signature>void remove_AttachFailed ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_ActionExecuting</Name>
                  <Signature>void add_ActionExecuting ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.ActionEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_ActionExecuting</Name>
                  <Signature>void add_ActionExecuting ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.ActionEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_ActionExecuting</Name>
                  <Signature>void remove_ActionExecuting ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.ActionEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_ActionExecuting</Name>
                  <Signature>void remove_ActionExecuting ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.ActionEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_ActionExecuted</Name>
                  <Signature>void add_ActionExecuted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.ActionEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_ActionExecuted</Name>
                  <Signature>void add_ActionExecuted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.ActionEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_ActionExecuted</Name>
                  <Signature>void remove_ActionExecuted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.ActionEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_ActionExecuted</Name>
                  <Signature>void remove_ActionExecuted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.ActionEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_HighlightRectangle</Name>
                  <Signature>static TestAutomationFX.UI.HighlightRectangle get_HighlightRectangle ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_HighlightRectangle</Name>
                  <Signature>static TestAutomationFX.UI.HighlightRectangle get_HighlightRectangle ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObjectTypes)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObjectTypes)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.IContainer)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.IContainer)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Comment</Name>
                  <Signature>string get_Comment ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Comment</Name>
                  <Signature>string get_Comment ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Comment</Name>
                  <Signature>void set_Comment (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Comment</Name>
                  <Signature>void set_Comment (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Name</Name>
                  <Signature>void set_Name (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Name</Name>
                  <Signature>void set_Name (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Initialize</Name>
                  <Signature>void Initialize ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Initialize</Name>
                  <Signature>void Initialize ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Parent</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_Parent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Parent</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_Parent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Parent</Name>
                  <Signature>void set_Parent (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Parent</Name>
                  <Signature>void set_Parent (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddToParent</Name>
                  <Signature>void AddToParent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemoveFromParent</Name>
                  <Signature>void RemoveFromParent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetChildrensParentToNull</Name>
                  <Signature>void SetChildrensParentToNull ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddToMap</Name>
                  <Signature>void AddToMap (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddToMap</Name>
                  <Signature>void AddToMap (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddToParentContainerWithValidName</Name>
                  <Signature>void AddToParentContainerWithValidName ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddToParentContainerWithValidName</Name>
                  <Signature>void AddToParentContainerWithValidName ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsValidName</Name>
                  <Signature>bool IsValidName (string, [System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (string, [System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsLastCharacterDigit</Name>
                  <Signature>bool IsLastCharacterDigit (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupMatchedProperties</Name>
                  <Signature>void SetupMatchedProperties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetupMatchedProperties</Name>
                  <Signature>void SetupMatchedProperties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IList`1&lt; TestAutomationFX.UI.UIObject &gt; get_Children ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IList`1&lt; TestAutomationFX.UI.UIObject &gt; get_Children ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIObjectType</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes get_UIObjectType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UIObjectType</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes get_UIObjectType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UIObjectType</Name>
                  <Signature>void set_UIObjectType (TestAutomationFX.UI.UIObjectTypes)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UIObjectType</Name>
                  <Signature>void set_UIObjectType (TestAutomationFX.UI.UIObjectTypes)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PropertyMatches</Name>
                  <Signature>TestAutomationFX.UI.PropertyValues get_PropertyMatches ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_PropertyMatches</Name>
                  <Signature>TestAutomationFX.UI.PropertyValues get_PropertyMatches ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AllowChildren</Name>
                  <Signature>bool get_AllowChildren ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AllowChildren</Name>
                  <Signature>bool get_AllowChildren ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AllowChildren</Name>
                  <Signature>void set_AllowChildren (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AllowChildren</Name>
                  <Signature>void set_AllowChildren (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MappingStatus</Name>
                  <Signature>TestAutomationFX.UI.MappingStatus get_MappingStatus ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MappingStatus</Name>
                  <Signature>TestAutomationFX.UI.MappingStatus get_MappingStatus ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MappingStatus</Name>
                  <Signature>void set_MappingStatus (TestAutomationFX.UI.MappingStatus)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MappingStatus</Name>
                  <Signature>void set_MappingStatus (TestAutomationFX.UI.MappingStatus)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Attach</Name>
                  <Signature>void Attach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Attach</Name>
                  <Signature>void Attach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CheckThreadingModel</Name>
                  <Signature>static void CheckThreadingModel ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>static void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsAttachAllowed</Name>
                  <Signature>bool IsAttachAllowed ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>bool f ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoAttachInternal</Name>
                  <Signature>void DoAttachInternal ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>void g ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>LogObjectAttached</Name>
                  <Signature>void LogObjectAttached ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>void h ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLogDataImage</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogDataImage GetLogDataImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetLogDataImage</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogDataImage GetLogDataImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoAttachWithRetry</Name>
                  <Signature>void DoAttachWithRetry ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>void i ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireAttachFailingAndHandleResult</Name>
                  <Signature>bool FireAttachFailingAndHandleResult ([out] int32&amp;, [mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ([out] int32&amp;, [mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAttaching</Name>
                  <Signature>void OnAttaching ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnAttaching</Name>
                  <Signature>void OnAttaching ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAttached</Name>
                  <Signature>void OnAttached ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnAttached</Name>
                  <Signature>void OnAttached ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAttachFailing</Name>
                  <Signature>void OnAttachFailing (TestAutomationFX.UI.AttachFailingEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnAttachFailing</Name>
                  <Signature>void OnAttachFailing (TestAutomationFX.UI.AttachFailingEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAttachFailed</Name>
                  <Signature>void OnAttachFailed ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnAttachFailed</Name>
                  <Signature>void OnAttachFailed ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnActionExecuting</Name>
                  <Signature>void OnActionExecuting (TestAutomationFX.UI.ActionEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnActionExecuting</Name>
                  <Signature>void OnActionExecuting (TestAutomationFX.UI.ActionEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnActionExecuting</Name>
                  <Signature>TestAutomationFX.UI.ActionEventArgs OnActionExecuting (TestAutomationFX.UI.ActionTypes)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.ActionEventArgs a (TestAutomationFX.UI.ActionTypes)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnActionExecuted</Name>
                  <Signature>void OnActionExecuted (TestAutomationFX.UI.ActionEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.UI.ActionEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnActionExecuted</Name>
                  <Signature>TestAutomationFX.UI.ActionEventArgs OnActionExecuted (TestAutomationFX.UI.ActionTypes)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.UI.ActionEventArgs b (TestAutomationFX.UI.ActionTypes)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AttachParent</Name>
                  <Signature>void AttachParent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>void j ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AttachChildren</Name>
                  <Signature>void AttachChildren ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AttachChildren</Name>
                  <Signature>void AttachChildren ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsAttached</Name>
                  <Signature>bool get_IsAttached ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsAttached</Name>
                  <Signature>bool get_IsAttached ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsAttached</Name>
                  <Signature>void set_IsAttached (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsAttached</Name>
                  <Signature>void set_IsAttached (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Detach</Name>
                  <Signature>void Detach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Detach</Name>
                  <Signature>void Detach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Reattach</Name>
                  <Signature>void Reattach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Reattach</Name>
                  <Signature>void Reattach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsValid</Name>
                  <Signature>bool get_IsValid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsValid</Name>
                  <Signature>bool get_IsValid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsUIMapTreeBroken</Name>
                  <Signature>bool get_IsUIMapTreeBroken ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsUIMapTreeBroken</Name>
                  <Signature>bool get_IsUIMapTreeBroken ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindChildUIObjectThatMapsToObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject FindChildUIObjectThatMapsToObject (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindChildUIObjectThatMapsToObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject FindChildUIObjectThatMapsToObject (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMatchToObject</Name>
                  <Signature>bool IsMatchToObject (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsMatchToObject</Name>
                  <Signature>bool IsMatchToObject (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CenterPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_CenterPoint ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CenterPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_CenterPoint ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RelativeCenterPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_RelativeCenterPoint ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RelativeCenterPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_RelativeCenterPoint ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ClickPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_ClickPoint ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ClickPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_ClickPoint ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RelativeClickPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_RelativeClickPoint ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RelativeClickPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_RelativeClickPoint ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Highlight</Name>
                  <Signature>void Highlight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Highlight</Name>
                  <Signature>void Highlight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnHighlightRectangleBoundsChanged</Name>
                  <Signature>void OnHighlightRectangleBoundsChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnBoundsChanged</Name>
                  <Signature>void OnBoundsChanged ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnBoundsChanged</Name>
                  <Signature>void OnBoundsChanged ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HideHighlight</Name>
                  <Signature>static void HideHighlight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>HideHighlight</Name>
                  <Signature>static void HideHighlight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsHighlightMovable</Name>
                  <Signature>bool get_IsHighlightMovable ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsHighlightMovable</Name>
                  <Signature>bool get_IsHighlightMovable ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForObject</Name>
                  <Signature>bool WaitForObject (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForObject</Name>
                  <Signature>bool WaitForObject (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForObject</Name>
                  <Signature>bool WaitForObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForObject</Name>
                  <Signature>bool WaitForObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsTestTerminated</Name>
                  <Signature>bool get_IsTestTerminated ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsTestTerminated</Name>
                  <Signature>bool get_IsTestTerminated ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Click</Name>
                  <Signature>void Click ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Click</Name>
                  <Signature>void Click ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RightClick</Name>
                  <Signature>void RightClick ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RightClick</Name>
                  <Signature>void RightClick ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MoveTo</Name>
                  <Signature>void MoveTo ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MoveTo</Name>
                  <Signature>void MoveTo ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MoveTo</Name>
                  <Signature>void MoveTo (int32, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (int32, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Hover</Name>
                  <Signature>void Hover (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Hover</Name>
                  <Signature>void Hover (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Hover</Name>
                  <Signature>void Hover (int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Hover</Name>
                  <Signature>void Hover (int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ObjectToScreen</Name>
                  <Signature>[System.Drawing] System.Drawing.Point ObjectToScreen (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ObjectToScreen</Name>
                  <Signature>[System.Drawing] System.Drawing.Point ObjectToScreen (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ObjectToScreen</Name>
                  <Signature>[System.Drawing] System.Drawing.Point ObjectToScreen ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ObjectToScreen</Name>
                  <Signature>[System.Drawing] System.Drawing.Point ObjectToScreen ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ScreenToObject</Name>
                  <Signature>[System.Drawing] System.Drawing.Point ScreenToObject (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ScreenToObject</Name>
                  <Signature>[System.Drawing] System.Drawing.Point ScreenToObject (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ScreenToObject</Name>
                  <Signature>[System.Drawing] System.Drawing.Point ScreenToObject ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ScreenToObject</Name>
                  <Signature>[System.Drawing] System.Drawing.Point ScreenToObject ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoAction</Name>
                  <Signature>void DoAction (TestAutomationFX.UI.ActionTypes, [System.Drawing] System.Drawing.Point, TestAutomationFX.UI.UIObject/ActionDelegate)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.UI.ActionTypes, [System.Drawing] System.Drawing.Point, TestAutomationFX.UI.UIObject/a)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Click</Name>
                  <Signature>void Click (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Click</Name>
                  <Signature>void Click (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RightClick</Name>
                  <Signature>void RightClick (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RightClick</Name>
                  <Signature>void RightClick (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoubleClick</Name>
                  <Signature>void DoubleClick ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoubleClick</Name>
                  <Signature>void DoubleClick ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoubleClick</Name>
                  <Signature>void DoubleClick (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoubleClick</Name>
                  <Signature>void DoubleClick (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DragToObject</Name>
                  <Signature>void DragToObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DragToObject</Name>
                  <Signature>void DragToObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Drag</Name>
                  <Signature>void Drag (int32, int32, TestAutomationFX.UI.UIObject, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Drag</Name>
                  <Signature>void Drag (int32, int32, TestAutomationFX.UI.UIObject, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Drag</Name>
                  <Signature>void Drag (int32, int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Drag</Name>
                  <Signature>void Drag (int32, int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Drag</Name>
                  <Signature>void Drag (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Drag</Name>
                  <Signature>void Drag (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Drag</Name>
                  <Signature>void Drag (int32, int32, TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Drag</Name>
                  <Signature>void Drag (int32, int32, TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Drag</Name>
                  <Signature>void Drag (TestAutomationFX.UI.UIObject, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Drag</Name>
                  <Signature>void Drag (TestAutomationFX.UI.UIObject, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>VerifyProperty</Name>
                  <Signature>void VerifyProperty (string, object, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VerifyProperty</Name>
                  <Signature>void VerifyProperty (string, object, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>VerifyProperty</Name>
                  <Signature>void VerifyProperty (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VerifyProperty</Name>
                  <Signature>void VerifyProperty (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoVerifyProperty</Name>
                  <Signature>void DoVerifyProperty (string, object, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoVerifyProperty</Name>
                  <Signature>void DoVerifyProperty (string, object, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPropertyValue</Name>
                  <Signature>object GetPropertyValue (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetPropertyValue</Name>
                  <Signature>object GetPropertyValue (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FailTestWithPropertyNotFound</Name>
                  <Signature>void FailTestWithPropertyNotFound (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FailTestWithPropertyNotFound</Name>
                  <Signature>void FailTestWithPropertyNotFound (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CheckPropertyValue</Name>
                  <Signature>void CheckPropertyValue (string, object, object, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CheckPropertyValue</Name>
                  <Signature>void CheckPropertyValue (string, object, object, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CompareProperty</Name>
                  <Signature>bool CompareProperty (string, object, [out] object&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CompareProperty</Name>
                  <Signature>bool CompareProperty (string, object, [out] object&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CompareProperty</Name>
                  <Signature>bool CompareProperty (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CompareProperty</Name>
                  <Signature>bool CompareProperty (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForPropertySafe</Name>
                  <Signature>bool WaitForPropertySafe (string, object, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForPropertySafe</Name>
                  <Signature>bool WaitForPropertySafe (string, object, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForProperty</Name>
                  <Signature>bool WaitForProperty (string, object, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForProperty</Name>
                  <Signature>bool WaitForProperty (string, object, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForProperty</Name>
                  <Signature>bool WaitForProperty (string, object, int32, bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForProperty</Name>
                  <Signature>bool WaitForProperty (string, object, int32, bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CheckIfWeShouldFail</Name>
                  <Signature>static void CheckIfWeShouldFail (bool, TestAutomationFX.Core.PollingTimer)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (bool, TestAutomationFX.Core.PollingTimer)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CompareValues</Name>
                  <Signature>bool CompareValues (object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>VerifyImage</Name>
                  <Signature>void VerifyImage (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VerifyImage</Name>
                  <Signature>void VerifyImage (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>VerifyImage</Name>
                  <Signature>void VerifyImage (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VerifyImage</Name>
                  <Signature>void VerifyImage (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>VerifyImage</Name>
                  <Signature>void VerifyImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VerifyImage</Name>
                  <Signature>void VerifyImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>VerifyImage</Name>
                  <Signature>void VerifyImage ([System.Drawing] System.Drawing.Bitmap, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VerifyImage</Name>
                  <Signature>void VerifyImage ([System.Drawing] System.Drawing.Bitmap, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>VerifyImage</Name>
                  <Signature>void VerifyImage ([System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VerifyImage</Name>
                  <Signature>void VerifyImage ([System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>VerifyImage</Name>
                  <Signature>void VerifyImage ([System.Drawing] System.Drawing.Bitmap, [System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VerifyImage</Name>
                  <Signature>void VerifyImage ([System.Drawing] System.Drawing.Bitmap, [System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>VerifyImage</Name>
                  <Signature>void VerifyImage ([System.Drawing] System.Drawing.Bitmap, [System.Drawing] System.Drawing.Bitmap, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VerifyImage</Name>
                  <Signature>void VerifyImage ([System.Drawing] System.Drawing.Bitmap, [System.Drawing] System.Drawing.Bitmap, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>LogAction</Name>
                  <Signature>void LogAction (TestAutomationFX.UI.ActionTypes)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>LogAction</Name>
                  <Signature>void LogAction (TestAutomationFX.UI.ActionTypes)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>LogActionCanceled</Name>
                  <Signature>void LogActionCanceled (TestAutomationFX.UI.ActionTypes)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>LogActionCanceled</Name>
                  <Signature>void LogActionCanceled (TestAutomationFX.UI.ActionTypes)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>LogAction</Name>
                  <Signature>void LogAction (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>LogAction</Name>
                  <Signature>void LogAction (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetObjectReadyForMouseAction</Name>
                  <Signature>bool GetObjectReadyForMouseAction ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetObjectReadyForMouseAction</Name>
                  <Signature>bool GetObjectReadyForMouseAction ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetScreenPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point GetScreenPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Point a ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ScrollTo</Name>
                  <Signature>void ScrollTo ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ScrollTo</Name>
                  <Signature>void ScrollTo ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ScrollTo</Name>
                  <Signature>void ScrollTo (TestAutomationFX.Core.UI.Scrollable/Direction)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ScrollTo</Name>
                  <Signature>void ScrollTo (TestAutomationFX.Core.UI.Scrollable/Direction)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int get_ScrollBarOwnerWindowHandle ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int get_ScrollBarOwnerWindowHandle ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsOutsideParent</Name>
                  <Signature>bool IsOutsideParent (TestAutomationFX.Core.UI.Scrollable/Direction)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsOutsideParent</Name>
                  <Signature>bool IsOutsideParent (TestAutomationFX.Core.UI.Scrollable/Direction)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsAvailable</Name>
                  <Signature>bool IsAvailable ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsAvailable</Name>
                  <Signature>bool IsAvailable ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ParentNeedToBeClicked</Name>
                  <Signature>bool ParentNeedToBeClicked ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>bool k ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FirePropertyChange</Name>
                  <Signature>void FirePropertyChange (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FirePropertyChange</Name>
                  <Signature>void FirePropertyChange (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_PropertyChanged</Name>
                  <Signature>void add_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_PropertyChanged</Name>
                  <Signature>void add_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_PropertyChanged</Name>
                  <Signature>void remove_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_PropertyChanged</Name>
                  <Signature>void remove_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AnySite</Name>
                  <Signature>[System] System.ComponentModel.ISite get_AnySite ()</Signature>
                  <Accessibility>family-or-assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AnySite</Name>
                  <Signature>[System] System.ComponentModel.ISite get_AnySite ()</Signature>
                  <Accessibility>family-or-assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReplaceIllegalCharacters</Name>
                  <Signature>static void ReplaceIllegalCharacters ([out] string&amp;)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ([out] string&amp;)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MakeFirstCharacterUpperCase</Name>
                  <Signature>static string MakeFirstCharacterUpperCase (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static string b (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ChangeFirstCharacterCase</Name>
                  <Signature>static string ChangeFirstCharacterCase (string, bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ChangeFirstCharacterCase</Name>
                  <Signature>static string ChangeFirstCharacterCase (string, bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsVisible</Name>
                  <Signature>bool get_IsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsVisible</Name>
                  <Signature>bool get_IsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsChecked</Name>
                  <Signature>bool get_IsChecked ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsChecked</Name>
                  <Signature>bool get_IsChecked ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsSelected</Name>
                  <Signature>bool get_IsSelected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsSelected</Name>
                  <Signature>bool get_IsSelected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForVisible</Name>
                  <Signature>void WaitForVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForVisible</Name>
                  <Signature>void WaitForVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForInvisible</Name>
                  <Signature>void WaitForInvisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForInvisible</Name>
                  <Signature>void WaitForInvisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForEnabled</Name>
                  <Signature>void WaitForEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForEnabled</Name>
                  <Signature>void WaitForEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForAvailable</Name>
                  <Signature>void WaitForAvailable ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForAvailable</Name>
                  <Signature>void WaitForAvailable ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForRespondingOrExited</Name>
                  <Signature>void WaitForRespondingOrExited ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForRespondingOrExited</Name>
                  <Signature>void WaitForRespondingOrExited ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForResponding</Name>
                  <Signature>void WaitForResponding ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForResponding</Name>
                  <Signature>void WaitForResponding ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsWindowResponding</Name>
                  <Signature>bool IsWindowResponding ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsWindowResponding</Name>
                  <Signature>bool IsWindowResponding ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForRespondingInternal</Name>
                  <Signature>void WaitForRespondingInternal (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ObjectImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap get_ObjectImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ObjectImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap get_ObjectImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ObjectImage</Name>
                  <Signature>void set_ObjectImage ([System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ObjectImage</Name>
                  <Signature>void set_ObjectImage ([System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TakeImageConditionally</Name>
                  <Signature>void TakeImageConditionally ()</Signature>
                  <Accessibility>family-or-assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TakeImageConditionally</Name>
                  <Signature>void TakeImageConditionally ()</Signature>
                  <Accessibility>family-or-assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TakeImage</Name>
                  <Signature>void TakeImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TakeImage</Name>
                  <Signature>void TakeImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CurrentImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap get_CurrentImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CurrentImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap get_CurrentImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SaveImage</Name>
                  <Signature>void SaveImage (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SaveImage</Name>
                  <Signature>void SaveImage (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsOptional</Name>
                  <Signature>bool get_IsOptional ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsOptional</Name>
                  <Signature>bool get_IsOptional ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsOptional</Name>
                  <Signature>void set_IsOptional (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsOptional</Name>
                  <Signature>void set_IsOptional (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetTimeout</Name>
                  <Signature>int32 GetTimeout ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>l</Name>
                  <Signature>int32 l ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TimeOut</Name>
                  <Signature>int32 get_TimeOut ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TimeOut</Name>
                  <Signature>int32 get_TimeOut ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TimeOut</Name>
                  <Signature>void set_TimeOut (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TimeOut</Name>
                  <Signature>void set_TimeOut (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Application</Name>
                  <Signature>TestAutomationFX.UI.UIApplication get_Application ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m</Name>
                  <Signature>TestAutomationFX.UI.UIApplication m ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIWindow</Name>
                  <Signature>TestAutomationFX.UI.UIWindow get_UIWindow ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>n</Name>
                  <Signature>TestAutomationFX.UI.UIWindow n ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsApplication</Name>
                  <Signature>static bool IsApplication (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Value</Name>
                  <Signature>string get_Value ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Value</Name>
                  <Signature>string get_Value ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupName</Name>
                  <Signature>void SetupName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetupName</Name>
                  <Signature>void SetupName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsEnabled</Name>
                  <Signature>bool get_IsEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsEnabled</Name>
                  <Signature>bool get_IsEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsFocused</Name>
                  <Signature>bool get_IsFocused ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsFocused</Name>
                  <Signature>bool get_IsFocused ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetUseCoordinatesOnClickDefault</Name>
                  <Signature>bool GetUseCoordinatesOnClickDefault ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetUseCoordinatesOnClickDefault</Name>
                  <Signature>bool GetUseCoordinatesOnClickDefault ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UseCoordinatesOnClick</Name>
                  <Signature>bool get_UseCoordinatesOnClick ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UseCoordinatesOnClick</Name>
                  <Signature>bool get_UseCoordinatesOnClick ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UseCoordinatesOnClick</Name>
                  <Signature>void set_UseCoordinatesOnClick (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UseCoordinatesOnClick</Name>
                  <Signature>void set_UseCoordinatesOnClick (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MatchedIndex</Name>
                  <Signature>int32 get_MatchedIndex ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MatchedIndex</Name>
                  <Signature>int32 get_MatchedIndex ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MatchedIndex</Name>
                  <Signature>void set_MatchedIndex (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MatchedIndex</Name>
                  <Signature>void set_MatchedIndex (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EnterText</Name>
                  <Signature>void EnterText (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>EnterText</Name>
                  <Signature>void EnterText (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetInstanceNameCodeExpression</Name>
                  <Signature>[System] System.CodeDom.CodeExpression GetInstanceNameCodeExpression ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetInstanceNameCodeExpression</Name>
                  <Signature>[System] System.CodeDom.CodeExpression GetInstanceNameCodeExpression ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MousePath</Name>
                  <Signature>TestAutomationFX.Core.UI.MousePath get_MousePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MousePath</Name>
                  <Signature>TestAutomationFX.Core.UI.MousePath get_MousePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MousePath</Name>
                  <Signature>void set_MousePath (TestAutomationFX.Core.UI.MousePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MousePath</Name>
                  <Signature>void set_MousePath (TestAutomationFX.Core.UI.MousePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnMatchedPropertyChanged</Name>
                  <Signature>void OnMatchedPropertyChanged ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnMatchedPropertyChanged</Name>
                  <Signature>void OnMatchedPropertyChanged ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SelectItem</Name>
                  <Signature>void SelectItem (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SelectItem</Name>
                  <Signature>void SelectItem (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Check</Name>
                  <Signature>void Check ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Check</Name>
                  <Signature>void Check ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Uncheck</Name>
                  <Signature>void Uncheck ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Uncheck</Name>
                  <Signature>void Uncheck ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap get_UIMap ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap get_UIMap ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UIMap</Name>
                  <Signature>void set_UIMap (TestAutomationFX.UI.UIMap)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UIMap</Name>
                  <Signature>void set_UIMap (TestAutomationFX.UI.UIMap)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CheckVisible</Name>
                  <Signature>bool get_CheckVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CheckVisible</Name>
                  <Signature>bool get_CheckVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CheckVisible</Name>
                  <Signature>void set_CheckVisible (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CheckVisible</Name>
                  <Signature>void set_CheckVisible (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CheckEnabled</Name>
                  <Signature>bool get_CheckEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CheckEnabled</Name>
                  <Signature>bool get_CheckEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CheckEnabled</Name>
                  <Signature>void set_CheckEnabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CheckEnabled</Name>
                  <Signature>void set_CheckEnabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CheckResponding</Name>
                  <Signature>bool get_CheckResponding ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CheckResponding</Name>
                  <Signature>bool get_CheckResponding ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CheckResponding</Name>
                  <Signature>void set_CheckResponding (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CheckResponding</Name>
                  <Signature>void set_CheckResponding (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CheckAvailable</Name>
                  <Signature>bool get_CheckAvailable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CheckAvailable</Name>
                  <Signature>bool get_CheckAvailable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CheckAvailable</Name>
                  <Signature>void set_CheckAvailable (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CheckAvailable</Name>
                  <Signature>void set_CheckAvailable (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>&lt;Click&gt;b__0</Name>
                  <Signature>void &lt;Click&gt;b__0 ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>o</Name>
                  <Signature>void o ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>&lt;RightClick&gt;b__1</Name>
                  <Signature>void &lt;RightClick&gt;b__1 ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>p</Name>
                  <Signature>void p ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>&lt;DoubleClick&gt;b__e</Name>
                  <Signature>void &lt;DoubleClick&gt;b__e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>q</Name>
                  <Signature>void q ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ActionCount</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>HighlightRectangle</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>HighlightRectangle</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle HighlightRectangle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Comment</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Comment</Name>
                  <Signature>string Comment</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Name</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Name</Name>
                  <Signature>string Name</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Parent</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>Parent</Name>
                  <Signature>TestAutomationFX.UI.UIObject Parent</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IList`1&lt; TestAutomationFX.UI.UIObject &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IList`1&lt; TestAutomationFX.UI.UIObject &gt; Children</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Description</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Description</Name>
                  <Signature>string Description</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIObjectType</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                </Original>
                <Obfuscated>
                  <Name>UIObjectType</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes UIObjectType</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PropertyMatches</Name>
                  <Signature>TestAutomationFX.UI.PropertyValues</Signature>
                </Original>
                <Obfuscated>
                  <Name>PropertyMatches</Name>
                  <Signature>TestAutomationFX.UI.PropertyValues PropertyMatches</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AllowChildren</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>AllowChildren</Name>
                  <Signature>bool AllowChildren</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MappingStatus</Name>
                  <Signature>TestAutomationFX.UI.MappingStatus</Signature>
                </Original>
                <Obfuscated>
                  <Name>MappingStatus</Name>
                  <Signature>TestAutomationFX.UI.MappingStatus MappingStatus</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsAttached</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsAttached</Name>
                  <Signature>bool IsAttached</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsValid</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsValid</Name>
                  <Signature>bool IsValid</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsUIMapTreeBroken</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsUIMapTreeBroken</Name>
                  <Signature>bool IsUIMapTreeBroken</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle Bounds</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CenterPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                </Original>
                <Obfuscated>
                  <Name>CenterPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point CenterPoint</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RelativeCenterPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                </Original>
                <Obfuscated>
                  <Name>RelativeCenterPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point RelativeCenterPoint</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ClickPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                </Original>
                <Obfuscated>
                  <Name>ClickPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point ClickPoint</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RelativeClickPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                </Original>
                <Obfuscated>
                  <Name>RelativeClickPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point RelativeClickPoint</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsHighlightMovable</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsHighlightMovable</Name>
                  <Signature>bool IsHighlightMovable</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsTestTerminated</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsTestTerminated</Name>
                  <Signature>bool IsTestTerminated</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int ScrollBarOwnerWindowHandle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AnySite</Name>
                  <Signature>[System] System.ComponentModel.ISite</Signature>
                </Original>
                <Obfuscated>
                  <Name>AnySite</Name>
                  <Signature>[System] System.ComponentModel.ISite AnySite</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsVisible</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsVisible</Name>
                  <Signature>bool IsVisible</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsChecked</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsChecked</Name>
                  <Signature>bool IsChecked</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsSelected</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsSelected</Name>
                  <Signature>bool IsSelected</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ObjectImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>ObjectImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap ObjectImage</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CurrentImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>CurrentImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap CurrentImage</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsOptional</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsOptional</Name>
                  <Signature>bool IsOptional</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TimeOut</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>TimeOut</Name>
                  <Signature>int32 TimeOut</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Application</Name>
                  <Signature>TestAutomationFX.UI.UIApplication</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.UI.UIApplication</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIWindow</Name>
                  <Signature>TestAutomationFX.UI.UIWindow</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.UI.UIWindow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Text</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Text</Name>
                  <Signature>string Text</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Value</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Value</Name>
                  <Signature>string Value</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsEnabled</Name>
                  <Signature>bool IsEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsFocused</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsFocused</Name>
                  <Signature>bool IsFocused</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UseCoordinatesOnClick</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>UseCoordinatesOnClick</Name>
                  <Signature>bool UseCoordinatesOnClick</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MatchedIndex</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>MatchedIndex</Name>
                  <Signature>int32 MatchedIndex</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MousePath</Name>
                  <Signature>TestAutomationFX.Core.UI.MousePath</Signature>
                </Original>
                <Obfuscated>
                  <Name>MousePath</Name>
                  <Signature>TestAutomationFX.Core.UI.MousePath MousePath</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap</Signature>
                </Original>
                <Obfuscated>
                  <Name>UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap UIMap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CheckVisible</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>CheckVisible</Name>
                  <Signature>bool CheckVisible</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CheckEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>CheckEnabled</Name>
                  <Signature>bool CheckEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CheckResponding</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>CheckResponding</Name>
                  <Signature>bool CheckResponding</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CheckAvailable</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>CheckAvailable</Name>
                  <Signature>bool CheckAvailable</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>Attaching</Name>
                </Original>
                <Obfuscated>
                  <Name>Attaching</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>Attached</Name>
                </Original>
                <Obfuscated>
                  <Name>Attached</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>AttachFailing</Name>
                </Original>
                <Obfuscated>
                  <Name>AttachFailing</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>AttachFailed</Name>
                </Original>
                <Obfuscated>
                  <Name>AttachFailed</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>ActionExecuting</Name>
                </Original>
                <Obfuscated>
                  <Name>ActionExecuting</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>ActionExecuted</Name>
                </Original>
                <Obfuscated>
                  <Name>ActionExecuted</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>PropertyChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>PropertyChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>System.ComponentModel.INotifyPropertyChanged.PropertyChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.INotifyPropertyChanged.PropertyChanged</Name>
                </Obfuscated>
              </Event>
              <NestedType>
                <Name>ActionDelegate</Name>
                <NewName>a</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>&lt;&gt;c__DisplayClass3</Name>
                <NewName>&lt;&gt;c__DisplayClass3</NewName>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.UI.UIObject</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.UI.UIObject</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>time</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>time</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;Hover&gt;b__2</Name>
                    <Signature>void &lt;Hover&gt;b__2 ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;Hover&gt;b__2</Name>
                    <Signature>void &lt;Hover&gt;b__2 ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>&lt;&gt;c__DisplayClass6</Name>
                <NewName>&lt;&gt;c__DisplayClass6</NewName>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.UI.UIObject</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.UI.UIObject</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>time</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>time</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>x</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>x</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>y</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>y</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;Hover&gt;b__5</Name>
                    <Signature>void &lt;Hover&gt;b__5 ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;Hover&gt;b__5</Name>
                    <Signature>void &lt;Hover&gt;b__5 ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>&lt;&gt;c__DisplayClass9</Name>
                <NewName>&lt;&gt;c__DisplayClass9</NewName>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.UI.UIObject</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.UI.UIObject</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>x</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>x</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>y</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>y</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;Click&gt;b__8</Name>
                    <Signature>void &lt;Click&gt;b__8 ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;Click&gt;b__8</Name>
                    <Signature>void &lt;Click&gt;b__8 ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>&lt;&gt;c__DisplayClassc</Name>
                <NewName>&lt;&gt;c__DisplayClassc</NewName>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.UI.UIObject</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.UI.UIObject</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>x</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>x</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>y</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>y</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;RightClick&gt;b__b</Name>
                    <Signature>void &lt;RightClick&gt;b__b ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;RightClick&gt;b__b</Name>
                    <Signature>void &lt;RightClick&gt;b__b ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>&lt;&gt;c__DisplayClass10</Name>
                <NewName>&lt;&gt;c__DisplayClass10</NewName>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.UI.UIObject</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.UI.UIObject</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>x</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>x</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>y</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>y</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;DoubleClick&gt;b__f</Name>
                    <Signature>void &lt;DoubleClick&gt;b__f ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;DoubleClick&gt;b__f</Name>
                    <Signature>void &lt;DoubleClick&gt;b__f ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>&lt;&gt;c__DisplayClass13</Name>
                <NewName>&lt;&gt;c__DisplayClass13</NewName>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.UI.UIObject</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.UI.UIObject</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>sourceX</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>sourceX</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>sourceY</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>sourceY</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>targetObject</Name>
                    <Signature>TestAutomationFX.UI.UIObject</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>targetObject</Name>
                    <Signature>TestAutomationFX.UI.UIObject</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>destinationX</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>destinationX</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>destinationY</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>destinationY</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;Drag&gt;b__12</Name>
                    <Signature>void &lt;Drag&gt;b__12 ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;Drag&gt;b__12</Name>
                    <Signature>void &lt;Drag&gt;b__12 ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMapObject</Name>
              <NewName>TestAutomationFX.UI.UIMapObject</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIApplication</Name>
              <NewName>TestAutomationFX.UI.UIApplication</NewName>
              <Field>
                <Original>
                  <Name>WaitForRespondingMessage</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WaitForRespondingOrExitedMessage</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WaitForInputIdleTime</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForInputIdleTime</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ProcessName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Process</Name>
                  <Signature>[System] System.Diagnostics.Process</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.Diagnostics.Process</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UIMapObjectMainWindow</Name>
                  <Signature>TestAutomationFX.UI.UIMainWindow</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIMainWindow</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_StartAutomatically</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_BringToFrontOnAttach</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ImagePath</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIMap</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CommandLineArguments</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;WorkingDirectory&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;UsedMatchedProperties&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupWorkingDirectory</Name>
                  <Signature>void SetupWorkingDirectory ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetWorkingDirectoryFromMainModule</Name>
                  <Signature>string GetWorkingDirectoryFromMainModule ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MainWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_MainWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MainWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_MainWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Process</Name>
                  <Signature>[System] System.Diagnostics.Process get_Process ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Process</Name>
                  <Signature>[System] System.Diagnostics.Process get_Process ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Process</Name>
                  <Signature>void set_Process ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Process</Name>
                  <Signature>void set_Process ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_HasExited</Name>
                  <Signature>bool get_HasExited ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_HasExited</Name>
                  <Signature>bool get_HasExited ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoAttachInDesignMode</Name>
                  <Signature>void DoAttachInDesignMode ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoAttachInDesignMode</Name>
                  <Signature>void DoAttachInDesignMode ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoAttachInRunMode</Name>
                  <Signature>void DoAttachInRunMode ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoAttachInRunMode</Name>
                  <Signature>void DoAttachInRunMode ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StartOrAttachHandler</Name>
                  <Signature>void StartOrAttachHandler ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Detach</Name>
                  <Signature>void Detach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Detach</Name>
                  <Signature>void Detach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AttachToProcess</Name>
                  <Signature>void AttachToProcess ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AttachToProcess</Name>
                  <Signature>void AttachToProcess (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoBringToFrontOnAttach</Name>
                  <Signature>void DoBringToFrontOnAttach ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsAttached</Name>
                  <Signature>bool get_IsAttached ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsAttached</Name>
                  <Signature>bool get_IsAttached ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsValid</Name>
                  <Signature>bool get_IsValid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsValid</Name>
                  <Signature>bool get_IsValid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Initialize</Name>
                  <Signature>void Initialize ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Initialize</Name>
                  <Signature>void Initialize ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetParentUIMapObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject GetParentUIMapObject (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject a (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetOrAddWindow</Name>
                  <Signature>TestAutomationFX.UI.UIObject GetOrAddWindow (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetOrAddWindow</Name>
                  <Signature>TestAutomationFX.UI.UIObject GetOrAddWindow (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetOrAddWindowInternal</Name>
                  <Signature>TestAutomationFX.UI.UIObject GetOrAddWindowInternal (native int)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject a (native int)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UseApplicationAsUIObjectForWindow</Name>
                  <Signature>bool UseApplicationAsUIObjectForWindow (native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool b (native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AreWindowBelongToUs</Name>
                  <Signature>bool AreWindowBelongToUs (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AreWindowBelongToUs</Name>
                  <Signature>bool AreWindowBelongToUs (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShouldUseCachedWindow</Name>
                  <Signature>bool ShouldUseCachedWindow (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddMsaaObjectInternal</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddMsaaObjectInternal (TestAutomationFX.Core.MsaaObject, TestAutomationFX.UI.UIApplication/AddUIObjectRules)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject a (TestAutomationFX.Core.MsaaObject, TestAutomationFX.UI.UIApplication/a)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddMsaaObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddMsaaObject (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddMsaaObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddMsaaObject (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateMainWindowUIObject</Name>
                  <Signature>void CreateMainWindowUIObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateMainWindowUIObject</Name>
                  <Signature>void CreateMainWindowUIObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupFindProcessInfo</Name>
                  <Signature>void SetupFindProcessInfo (TestAutomationFX.Core.UI.FindProcessInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetupFindProcessInfo</Name>
                  <Signature>void SetupFindProcessInfo (TestAutomationFX.Core.UI.FindProcessInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetProcessNameFromImagePath</Name>
                  <Signature>void SetProcessNameFromImagePath ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Start</Name>
                  <Signature>void Start ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Start</Name>
                  <Signature>void Start ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetExistingImagePath</Name>
                  <Signature>string GetExistingImagePath ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>string g ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StartOrAttach</Name>
                  <Signature>void StartOrAttach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>StartOrAttach</Name>
                  <Signature>void StartOrAttach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BringToFront</Name>
                  <Signature>void BringToFront ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>BringToFront</Name>
                  <Signature>void BringToFront ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BringToFrontInternal</Name>
                  <Signature>void BringToFrontInternal ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>void h ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RestoreIfMinimized</Name>
                  <Signature>void RestoreIfMinimized (native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MainWindowHandle</Name>
                  <Signature>native int MainWindowHandle ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>native int i ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsResponding</Name>
                  <Signature>bool get_IsResponding ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsResponding</Name>
                  <Signature>bool get_IsResponding ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForResponding</Name>
                  <Signature>void WaitForResponding (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForResponding</Name>
                  <Signature>void WaitForResponding (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForRespondingOrExited</Name>
                  <Signature>void WaitForRespondingOrExited (int32, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForRespondingOrExited</Name>
                  <Signature>void WaitForRespondingOrExited (int32, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForRespondingOrExitedInternal</Name>
                  <Signature>void WaitForRespondingOrExitedInternal (int32, bool, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (int32, bool, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForExited</Name>
                  <Signature>void WaitForExited (int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForExited</Name>
                  <Signature>void WaitForExited (int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForExited</Name>
                  <Signature>void WaitForExited (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForExited</Name>
                  <Signature>void WaitForExited (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForExitedInternal</Name>
                  <Signature>void WaitForExitedInternal (int32, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (int32, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_StartAutomatically</Name>
                  <Signature>bool get_StartAutomatically ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_StartAutomatically</Name>
                  <Signature>bool get_StartAutomatically ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_StartAutomatically</Name>
                  <Signature>void set_StartAutomatically (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_StartAutomatically</Name>
                  <Signature>void set_StartAutomatically (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_BringToFrontOnAttach</Name>
                  <Signature>bool get_BringToFrontOnAttach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_BringToFrontOnAttach</Name>
                  <Signature>bool get_BringToFrontOnAttach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_BringToFrontOnAttach</Name>
                  <Signature>void set_BringToFrontOnAttach (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_BringToFrontOnAttach</Name>
                  <Signature>void set_BringToFrontOnAttach (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsValidAutomationId</Name>
                  <Signature>bool IsValidAutomationId (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddAutomationElementInternal</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddAutomationElementInternal (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject a (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddAutomationElement</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddAutomationElement (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddAutomationElement</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddAutomationElement (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsUIMapTreeBroken</Name>
                  <Signature>bool get_IsUIMapTreeBroken ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsUIMapTreeBroken</Name>
                  <Signature>bool get_IsUIMapTreeBroken ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_WorkingDirectory</Name>
                  <Signature>string get_WorkingDirectory ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_WorkingDirectory</Name>
                  <Signature>string get_WorkingDirectory ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_WorkingDirectory</Name>
                  <Signature>void set_WorkingDirectory (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_WorkingDirectory</Name>
                  <Signature>void set_WorkingDirectory (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UsedMatchedProperties</Name>
                  <Signature>TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties get_UsedMatchedProperties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UsedMatchedProperties</Name>
                  <Signature>TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties get_UsedMatchedProperties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UsedMatchedProperties</Name>
                  <Signature>void set_UsedMatchedProperties (TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UsedMatchedProperties</Name>
                  <Signature>void set_UsedMatchedProperties (TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CommandLineArguments</Name>
                  <Signature>string get_CommandLineArguments ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CommandLineArguments</Name>
                  <Signature>string get_CommandLineArguments ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CommandLineArguments</Name>
                  <Signature>void set_CommandLineArguments (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CommandLineArguments</Name>
                  <Signature>void set_CommandLineArguments (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ImagePath</Name>
                  <Signature>string get_ImagePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ImagePath</Name>
                  <Signature>string get_ImagePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ImagePath</Name>
                  <Signature>void set_ImagePath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ImagePath</Name>
                  <Signature>void set_ImagePath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ProcessName</Name>
                  <Signature>string get_ProcessName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ProcessName</Name>
                  <Signature>string get_ProcessName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ProcessName</Name>
                  <Signature>void set_ProcessName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ProcessName</Name>
                  <Signature>void set_ProcessName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupMatchedProperties</Name>
                  <Signature>void SetupMatchedProperties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetupMatchedProperties</Name>
                  <Signature>void SetupMatchedProperties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupMatchedPropertiesInternal</Name>
                  <Signature>void SetupMatchedPropertiesInternal ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>void j ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupMatchedIndex</Name>
                  <Signature>void SetupMatchedIndex ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>void k ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetApplicationIcon</Name>
                  <Signature>[System.Drawing] System.Drawing.Icon GetApplicationIcon (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Icon a (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TakeImage</Name>
                  <Signature>void TakeImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TakeImage</Name>
                  <Signature>void TakeImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMatchToObject</Name>
                  <Signature>bool IsMatchToObject (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsMatchToObject</Name>
                  <Signature>bool IsMatchToObject (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap get_UIMap ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap get_UIMap ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UIMap</Name>
                  <Signature>void set_UIMap (TestAutomationFX.UI.UIMap)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UIMap</Name>
                  <Signature>void set_UIMap (TestAutomationFX.UI.UIMap)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Close</Name>
                  <Signature>void Close ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Close</Name>
                  <Signature>void Close ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>MainWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                </Original>
                <Obfuscated>
                  <Name>MainWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController MainWindow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Process</Name>
                  <Signature>[System] System.Diagnostics.Process</Signature>
                </Original>
                <Obfuscated>
                  <Name>Process</Name>
                  <Signature>[System] System.Diagnostics.Process Process</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>HasExited</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>HasExited</Name>
                  <Signature>bool HasExited</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsAttached</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsAttached</Name>
                  <Signature>bool IsAttached</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsValid</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsValid</Name>
                  <Signature>bool IsValid</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Description</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Description</Name>
                  <Signature>string Description</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsResponding</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsResponding</Name>
                  <Signature>bool IsResponding</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>StartAutomatically</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>StartAutomatically</Name>
                  <Signature>bool StartAutomatically</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>BringToFrontOnAttach</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>BringToFrontOnAttach</Name>
                  <Signature>bool BringToFrontOnAttach</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsUIMapTreeBroken</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsUIMapTreeBroken</Name>
                  <Signature>bool IsUIMapTreeBroken</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>WorkingDirectory</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>WorkingDirectory</Name>
                  <Signature>string WorkingDirectory</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UsedMatchedProperties</Name>
                  <Signature>TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties</Signature>
                </Original>
                <Obfuscated>
                  <Name>UsedMatchedProperties</Name>
                  <Signature>TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties UsedMatchedProperties</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CommandLineArguments</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>CommandLineArguments</Name>
                  <Signature>string CommandLineArguments</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ImagePath</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ImagePath</Name>
                  <Signature>string ImagePath</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ProcessName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ProcessName</Name>
                  <Signature>string ProcessName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap</Signature>
                </Original>
                <Obfuscated>
                  <Name>UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap UIMap</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>UIApplicationMatchedProperties</Name>
                <NewName>UIApplicationMatchedProperties</NewName>
                <Field>
                  <Original>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>ProcessName</Name>
                    <Signature>TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>ProcessName</Name>
                    <Signature>TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>ImagePath</Name>
                    <Signature>TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>ImagePath</Name>
                    <Signature>TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>CommandLineArguments</Name>
                    <Signature>TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>CommandLineArguments</Name>
                    <Signature>TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>MatchedIndex</Name>
                    <Signature>TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>MatchedIndex</Name>
                    <Signature>TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>AddUIObjectRules</Name>
                <NewName>a</NewName>
                <Field>
                  <Original>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>UseRules</Name>
                    <Signature>TestAutomationFX.UI.UIApplication/AddUIObjectRules</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>_Deleted</Name>
                    <Signature>TestAutomationFX.UI.UIApplication/AddUIObjectRules</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>NoRules</Name>
                    <Signature>TestAutomationFX.UI.UIApplication/AddUIObjectRules</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>_Deleted</Name>
                    <Signature>TestAutomationFX.UI.UIApplication/AddUIObjectRules</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested assembly</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMapObjectApplication</Name>
              <NewName>TestAutomationFX.UI.UIMapObjectApplication</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMsaa</Name>
              <NewName>TestAutomationFX.UI.UIMsaa</NewName>
              <Field>
                <Original>
                  <Name>DefaultMsaaName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_WrappedMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MsaaName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Index</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Role</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MsaaName</Name>
                  <Signature>string get_MsaaName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MsaaName</Name>
                  <Signature>string get_MsaaName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MsaaName</Name>
                  <Signature>void set_MsaaName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MsaaName</Name>
                  <Signature>void set_MsaaName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Index</Name>
                  <Signature>void set_Index (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Index</Name>
                  <Signature>void set_Index (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Role</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole get_Role ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Role</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole get_Role ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Role</Name>
                  <Signature>void set_Role ([System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Role</Name>
                  <Signature>void set_Role ([System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupMatchedProperties</Name>
                  <Signature>void SetupMatchedProperties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetupMatchedProperties</Name>
                  <Signature>void SetupMatchedProperties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupMousePathForMenuItems</Name>
                  <Signature>void SetupMousePathForMenuItems ()</Signature>
                  <Accessibility>family-or-assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetupMousePathForMenuItems</Name>
                  <Signature>void SetupMousePathForMenuItems ()</Signature>
                  <Accessibility>family-or-assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_WrappedMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_WrappedMsaaObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_WrappedMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_WrappedMsaaObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_WrappedMsaaObject</Name>
                  <Signature>void set_WrappedMsaaObject (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_WrappedMsaaObject</Name>
                  <Signature>void set_WrappedMsaaObject (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsValid</Name>
                  <Signature>bool get_IsValid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsValid</Name>
                  <Signature>bool get_IsValid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsVisible</Name>
                  <Signature>bool get_IsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsVisible</Name>
                  <Signature>bool get_IsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsAvailable</Name>
                  <Signature>bool IsAvailable ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsAvailable</Name>
                  <Signature>bool IsAvailable ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int get_ScrollBarOwnerWindowHandle ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int get_ScrollBarOwnerWindowHandle ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupWrappedMsaaObject</Name>
                  <Signature>void SetupWrappedMsaaObject (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindMsaaObjectInParent</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject FindMsaaObjectInParent (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject b (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupFindMsaaInfo</Name>
                  <Signature>void SetupFindMsaaInfo (TestAutomationFX.Core.FindMsaaInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.FindMsaaInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Detach</Name>
                  <Signature>void Detach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Detach</Name>
                  <Signature>void Detach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UIObjectTypeFromMsaaRole</Name>
                  <Signature>static TestAutomationFX.UI.UIObjectTypes UIObjectTypeFromMsaaRole ([System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static TestAutomationFX.UI.UIObjectTypes a ([System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TakeImage</Name>
                  <Signature>void TakeImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TakeImage</Name>
                  <Signature>void TakeImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMsaaObjectMatch</Name>
                  <Signature>bool IsMsaaObjectMatch (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsMsaaObjectMatch</Name>
                  <Signature>bool IsMsaaObjectMatch (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsOutsideParent</Name>
                  <Signature>bool IsOutsideParent (TestAutomationFX.Core.UI.Scrollable/Direction)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsOutsideParent</Name>
                  <Signature>bool IsOutsideParent (TestAutomationFX.Core.UI.Scrollable/Direction)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMatchToObject</Name>
                  <Signature>bool IsMatchToObject (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsMatchToObject</Name>
                  <Signature>bool IsMatchToObject (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Value</Name>
                  <Signature>string get_Value ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Value</Name>
                  <Signature>string get_Value ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Select</Name>
                  <Signature>void Select ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Select</Name>
                  <Signature>void Select ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Check</Name>
                  <Signature>void Check ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Check</Name>
                  <Signature>void Check ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Uncheck</Name>
                  <Signature>void Uncheck ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Uncheck</Name>
                  <Signature>void Uncheck ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsChecked</Name>
                  <Signature>bool get_IsChecked ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsChecked</Name>
                  <Signature>bool get_IsChecked ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsSelected</Name>
                  <Signature>bool get_IsSelected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsSelected</Name>
                  <Signature>bool get_IsSelected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsEnabled</Name>
                  <Signature>bool get_IsEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsEnabled</Name>
                  <Signature>bool get_IsEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>MsaaName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>MsaaName</Name>
                  <Signature>string MsaaName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Index</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Index</Name>
                  <Signature>int32 Index</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Role</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole</Signature>
                </Original>
                <Obfuscated>
                  <Name>Role</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole Role</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>WrappedMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>WrappedMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject WrappedMsaaObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsValid</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsValid</Name>
                  <Signature>bool IsValid</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsVisible</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsVisible</Name>
                  <Signature>bool IsVisible</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int ScrollBarOwnerWindowHandle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Description</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Description</Name>
                  <Signature>string Description</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle Bounds</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Text</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Text</Name>
                  <Signature>string Text</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Value</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Value</Name>
                  <Signature>string Value</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsChecked</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsChecked</Name>
                  <Signature>bool IsChecked</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsSelected</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsSelected</Name>
                  <Signature>bool IsSelected</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsEnabled</Name>
                  <Signature>bool IsEnabled</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIGridCell</Name>
              <NewName>TestAutomationFX.UI.UIGridCell</NewName>
              <Field>
                <Original>
                  <Name>m_Grid</Name>
                  <Signature>TestAutomationFX.UI.UIGridView</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIGridView</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Row</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Col</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ColumnName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CellValue</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Grid</Name>
                  <Signature>TestAutomationFX.UI.UIGridView get_Grid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Grid</Name>
                  <Signature>TestAutomationFX.UI.UIGridView get_Grid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Grid</Name>
                  <Signature>void set_Grid (TestAutomationFX.UI.UIGridView)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Grid</Name>
                  <Signature>void set_Grid (TestAutomationFX.UI.UIGridView)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView, string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView, string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView, int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView, int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView, string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView, string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Row</Name>
                  <Signature>int32 get_Row ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Row</Name>
                  <Signature>int32 get_Row ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Row</Name>
                  <Signature>void set_Row (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Row</Name>
                  <Signature>void set_Row (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Col</Name>
                  <Signature>int32 get_Col ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Col</Name>
                  <Signature>int32 get_Col ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Col</Name>
                  <Signature>void set_Col (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Col</Name>
                  <Signature>void set_Col (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ColumnName</Name>
                  <Signature>string get_ColumnName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ColumnName</Name>
                  <Signature>string get_ColumnName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ColumnName</Name>
                  <Signature>void set_ColumnName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ColumnName</Name>
                  <Signature>void set_ColumnName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CellValue</Name>
                  <Signature>string get_CellValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CellValue</Name>
                  <Signature>string get_CellValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CellValue</Name>
                  <Signature>void set_CellValue (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CellValue</Name>
                  <Signature>void set_CellValue (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupName</Name>
                  <Signature>void SetupName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetupName</Name>
                  <Signature>void SetupName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UseCoordinatesOnClick</Name>
                  <Signature>bool get_UseCoordinatesOnClick ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UseCoordinatesOnClick</Name>
                  <Signature>bool get_UseCoordinatesOnClick ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int get_ScrollBarOwnerWindowHandle ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int get_ScrollBarOwnerWindowHandle ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsOutsideParent</Name>
                  <Signature>bool IsOutsideParent (TestAutomationFX.Core.UI.Scrollable/Direction)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsOutsideParent</Name>
                  <Signature>bool IsOutsideParent (TestAutomationFX.Core.UI.Scrollable/Direction)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetInstanceNameCodeExpression</Name>
                  <Signature>[System] System.CodeDom.CodeExpression GetInstanceNameCodeExpression ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetInstanceNameCodeExpression</Name>
                  <Signature>[System] System.CodeDom.CodeExpression GetInstanceNameCodeExpression ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Grid</Name>
                  <Signature>TestAutomationFX.UI.UIGridView</Signature>
                </Original>
                <Obfuscated>
                  <Name>Grid</Name>
                  <Signature>TestAutomationFX.UI.UIGridView Grid</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Row</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Row</Name>
                  <Signature>int32 Row</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Col</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Col</Name>
                  <Signature>int32 Col</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ColumnName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ColumnName</Name>
                  <Signature>string ColumnName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CellValue</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>CellValue</Name>
                  <Signature>string CellValue</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UseCoordinatesOnClick</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>UseCoordinatesOnClick</Name>
                  <Signature>bool UseCoordinatesOnClick</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int ScrollBarOwnerWindowHandle</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMapObjectGridCell</Name>
              <NewName>TestAutomationFX.UI.UIMapObjectGridCell</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView, string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView, string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIWindow</Name>
              <NewName>TestAutomationFX.UI.UIWindow</NewName>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Window</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_WindowText</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_WindowClass</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_RegExWindowText</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MsaaName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AutomationId</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ControlId</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Index</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_InstanceName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MsaaRole</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;OwnedWindow&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</Name>
                  <Signature>TestAutomationFX.UI.UIWindow/ExecuteRemoteDelegateInternal</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIWindow/a</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</Name>
                  <Signature>TestAutomationFX.UI.UIWindow/ExecuteRemoteControlWithDataDelegateInternal</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIWindow/b</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Window</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_Window ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Window</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_Window ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Window</Name>
                  <Signature>void set_Window (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Window</Name>
                  <Signature>void set_Window (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RawWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_RawWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RawWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_RawWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_RawWindow</Name>
                  <Signature>void set_RawWindow (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_RawWindow</Name>
                  <Signature>void set_RawWindow (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsVisible</Name>
                  <Signature>bool get_IsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsVisible</Name>
                  <Signature>bool get_IsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_WindowText</Name>
                  <Signature>string get_WindowText ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_WindowText</Name>
                  <Signature>string get_WindowText ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_WindowText</Name>
                  <Signature>void set_WindowText (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_WindowText</Name>
                  <Signature>void set_WindowText (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RegExWindowText</Name>
                  <Signature>string get_RegExWindowText ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RegExWindowText</Name>
                  <Signature>string get_RegExWindowText ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_RegExWindowText</Name>
                  <Signature>void set_RegExWindowText (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_RegExWindowText</Name>
                  <Signature>void set_RegExWindowText (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MsaaName</Name>
                  <Signature>string get_MsaaName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MsaaName</Name>
                  <Signature>string get_MsaaName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MsaaName</Name>
                  <Signature>void set_MsaaName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MsaaName</Name>
                  <Signature>void set_MsaaName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutomationId</Name>
                  <Signature>string get_AutomationId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutomationId</Name>
                  <Signature>string get_AutomationId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AutomationId</Name>
                  <Signature>void set_AutomationId (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AutomationId</Name>
                  <Signature>void set_AutomationId (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ControlId</Name>
                  <Signature>int32 get_ControlId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ControlId</Name>
                  <Signature>int32 get_ControlId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ControlId</Name>
                  <Signature>void set_ControlId (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ControlId</Name>
                  <Signature>void set_ControlId (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Index</Name>
                  <Signature>void set_Index (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Index</Name>
                  <Signature>void set_Index (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_InstanceName</Name>
                  <Signature>string get_InstanceName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_InstanceName</Name>
                  <Signature>string get_InstanceName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_InstanceName</Name>
                  <Signature>void set_InstanceName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_InstanceName</Name>
                  <Signature>void set_InstanceName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetUIObjectType</Name>
                  <Signature>void SetUIObjectType ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetUIObjectTypeFromDotNetType</Name>
                  <Signature>void SetUIObjectTypeFromDotNetType ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EnsureParentChainIsValid</Name>
                  <Signature>bool EnsureParentChainIsValid ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool c ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupFindWindowInfo</Name>
                  <Signature>void SetupFindWindowInfo (TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetupFindWindowInfo</Name>
                  <Signature>void SetupFindWindowInfo (TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Detach</Name>
                  <Signature>void Detach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Detach</Name>
                  <Signature>void Detach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_OwnedWindow</Name>
                  <Signature>bool get_OwnedWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_OwnedWindow</Name>
                  <Signature>bool get_OwnedWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_OwnedWindow</Name>
                  <Signature>void set_OwnedWindow (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_OwnedWindow</Name>
                  <Signature>void set_OwnedWindow (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetNamePrefix</Name>
                  <Signature>string GetNamePrefix ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>string d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetNameSuffix</Name>
                  <Signature>string GetNameSuffix ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>string e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsAvailable</Name>
                  <Signature>bool IsAvailable ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsAvailable</Name>
                  <Signature>bool IsAvailable ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsValid</Name>
                  <Signature>bool get_IsValid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsValid</Name>
                  <Signature>bool get_IsValid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int get_ScrollBarOwnerWindowHandle ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int get_ScrollBarOwnerWindowHandle ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsWindowChildToParentUIMapObject</Name>
                  <Signature>bool IsWindowChildToParentUIMapObject ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>bool f ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetParentOrOwnerWindowHandle</Name>
                  <Signature>native int GetParentOrOwnerWindowHandle ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>native int g ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BringToFront</Name>
                  <Signature>void BringToFront ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>BringToFront</Name>
                  <Signature>void BringToFront ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TakeImage</Name>
                  <Signature>void TakeImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TakeImage</Name>
                  <Signature>void TakeImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsEnabled</Name>
                  <Signature>bool get_IsEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsEnabled</Name>
                  <Signature>bool get_IsEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsFocused</Name>
                  <Signature>bool get_IsFocused ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsFocused</Name>
                  <Signature>bool get_IsFocused ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_WindowClass</Name>
                  <Signature>string get_WindowClass ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_WindowClass</Name>
                  <Signature>string get_WindowClass ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_WindowClass</Name>
                  <Signature>void set_WindowClass (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_WindowClass</Name>
                  <Signature>void set_WindowClass (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupMatchedProperties</Name>
                  <Signature>void SetupMatchedProperties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetupMatchedProperties</Name>
                  <Signature>void SetupMatchedProperties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShouldUseAutomationId</Name>
                  <Signature>bool ShouldUseAutomationId ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>bool h ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupAutomationId</Name>
                  <Signature>void SetupAutomationId ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>void i ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>LookForAsOwnedWindow</Name>
                  <Signature>static bool LookForAsOwnedWindow (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>LookForAsOwnedWindow</Name>
                  <Signature>static bool LookForAsOwnedWindow (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupMatchedIndex</Name>
                  <Signature>void SetupMatchedIndex ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>void j ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UseWindowTextAsMatchedProperty</Name>
                  <Signature>bool UseWindowTextAsMatchedProperty ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>bool k ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UseWindowClassAsMatchedProperty</Name>
                  <Signature>bool UseWindowClassAsMatchedProperty ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>l</Name>
                  <Signature>bool l ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Properties</Name>
                  <Signature>TestAutomationFX.Core.ControlProperties get_Properties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Properties</Name>
                  <Signature>TestAutomationFX.Core.ControlProperties get_Properties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InvokeMethod</Name>
                  <Signature>object InvokeMethod (string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>InvokeMethod</Name>
                  <Signature>object InvokeMethod (string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InvokeMethodInternal</Name>
                  <Signature>[TestAutomationFX.NetInjector] InvokeResult InvokeMethodInternal (string, string[], object[])</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[TestAutomationFX.NetInjector] InvokeResult a (string, string[], object[])</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMatchToObject</Name>
                  <Signature>bool IsMatchToObject (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsMatchToObject</Name>
                  <Signature>bool IsMatchToObject (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsUIMapObjectWindowMatch</Name>
                  <Signature>bool IsUIMapObjectWindowMatch (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SelectItem</Name>
                  <Signature>void SelectItem (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SelectItem</Name>
                  <Signature>void SelectItem (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClickItem</Name>
                  <Signature>void ClickItem (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ClickItem</Name>
                  <Signature>void ClickItem (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CheckItem</Name>
                  <Signature>void CheckItem (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CheckItem</Name>
                  <Signature>void CheckItem (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UncheckItem</Name>
                  <Signature>void UncheckItem (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>UncheckItem</Name>
                  <Signature>void UncheckItem (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetItemMsaa</Name>
                  <Signature>TestAutomationFX.UI.UIMsaa GetItemMsaa (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIMsaa a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsChecked</Name>
                  <Signature>bool get_IsChecked ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsChecked</Name>
                  <Signature>bool get_IsChecked ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Check</Name>
                  <Signature>void Check ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Check</Name>
                  <Signature>void Check ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Uncheck</Name>
                  <Signature>void Uncheck ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Uncheck</Name>
                  <Signature>void Uncheck ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetUIMsaa</Name>
                  <Signature>TestAutomationFX.UI.UIMsaa GetUIMsaa ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetUIMsaa</Name>
                  <Signature>TestAutomationFX.UI.UIMsaa GetUIMsaa ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_MsaaObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_MsaaObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPropertyValue</Name>
                  <Signature>object GetPropertyValue (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetPropertyValue</Name>
                  <Signature>object GetPropertyValue (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetComplexPropertyValue</Name>
                  <Signature>bool GetComplexPropertyValue (string, [out] object&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (string, [out] object&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetComplexPropertyRemoteDelegate</Name>
                  <Signature>static object GetComplexPropertyRemoteDelegate ([System.Windows.Forms] System.Windows.Forms.Control, object)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetComplexPropertyRemoteDelegate</Name>
                  <Signature>static object GetComplexPropertyRemoteDelegate ([System.Windows.Forms] System.Windows.Forms.Control, object)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetDotNetPropertyValue</Name>
                  <Signature>bool GetDotNetPropertyValue (string, [out] object&amp;)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetDotNetPropertyValue</Name>
                  <Signature>bool GetDotNetPropertyValue (string, [out] object&amp;)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MsaaRole</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole get_MsaaRole ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MsaaRole</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole get_MsaaRole ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MsaaRole</Name>
                  <Signature>void set_MsaaRole ([System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MsaaRole</Name>
                  <Signature>void set_MsaaRole ([System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExecuteRemote</Name>
                  <Signature>object ExecuteRemote (TestAutomationFX.UI.UIWindow/ExecuteRemoteControlDelegate)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ExecuteRemote</Name>
                  <Signature>object ExecuteRemote (TestAutomationFX.UI.UIWindow/ExecuteRemoteControlDelegate)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExecuteRemote</Name>
                  <Signature>object ExecuteRemote (TestAutomationFX.UI.UIWindow/ExecuteRemoteControlWithDataDelegate, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ExecuteRemote</Name>
                  <Signature>object ExecuteRemote (TestAutomationFX.UI.UIWindow/ExecuteRemoteControlWithDataDelegate, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExecuteRemote</Name>
                  <Signature>object ExecuteRemote (TestAutomationFX.UI.UIWindow/ExecuteRemoteHandleDelegate)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ExecuteRemote</Name>
                  <Signature>object ExecuteRemote (TestAutomationFX.UI.UIWindow/ExecuteRemoteHandleDelegate)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExecuteRemote</Name>
                  <Signature>object ExecuteRemote (TestAutomationFX.UI.UIWindow/ExecuteRemoteHandleWithDataDelegate, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ExecuteRemote</Name>
                  <Signature>object ExecuteRemote (TestAutomationFX.UI.UIWindow/ExecuteRemoteHandleWithDataDelegate, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExecuteRemoteInternal</Name>
                  <Signature>object ExecuteRemoteInternal (string, string[], object[])</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>object b (string, string[], object[])</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExecuteRemoteInternal</Name>
                  <Signature>object ExecuteRemoteInternal (TestAutomationFX.UI.UIWindow/ExecuteRemoteControlDelegate)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object a (TestAutomationFX.UI.UIWindow/ExecuteRemoteControlDelegate)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExecuteRemoteInternal</Name>
                  <Signature>object ExecuteRemoteInternal (TestAutomationFX.UI.UIWindow/ExecuteRemoteControlWithDataDelegate, object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object a (TestAutomationFX.UI.UIWindow/ExecuteRemoteControlWithDataDelegate, object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExecuteRemoteInternal</Name>
                  <Signature>object ExecuteRemoteInternal (TestAutomationFX.UI.UIWindow/ExecuteRemoteHandleDelegate)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object a (TestAutomationFX.UI.UIWindow/ExecuteRemoteHandleDelegate)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExecuteRemoteInternal</Name>
                  <Signature>object ExecuteRemoteInternal (TestAutomationFX.UI.UIWindow/ExecuteRemoteHandleWithDataDelegate, object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object a (TestAutomationFX.UI.UIWindow/ExecuteRemoteHandleWithDataDelegate, object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>&lt;ExecuteRemoteInternal&gt;b__0</Name>
                  <Signature>static object &lt;ExecuteRemoteInternal&gt;b__0 (native int, TestAutomationFX.UI.UIWindow/ExecuteRemoteControlDelegate)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static object a (native int, TestAutomationFX.UI.UIWindow/ExecuteRemoteControlDelegate)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>&lt;ExecuteRemoteInternal&gt;b__2</Name>
                  <Signature>static object &lt;ExecuteRemoteInternal&gt;b__2 (native int, TestAutomationFX.UI.UIWindow/ExecuteRemoteControlWithDataDelegate, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static object a (native int, TestAutomationFX.UI.UIWindow/ExecuteRemoteControlWithDataDelegate, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Window</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                </Original>
                <Obfuscated>
                  <Name>Window</Name>
                  <Signature>TestAutomationFX.Core.WindowController Window</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RawWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                </Original>
                <Obfuscated>
                  <Name>RawWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController RawWindow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Description</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Description</Name>
                  <Signature>string Description</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsVisible</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsVisible</Name>
                  <Signature>bool IsVisible</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle Bounds</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>WindowText</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>WindowText</Name>
                  <Signature>string WindowText</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RegExWindowText</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>RegExWindowText</Name>
                  <Signature>string RegExWindowText</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MsaaName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>MsaaName</Name>
                  <Signature>string MsaaName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutomationId</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutomationId</Name>
                  <Signature>string AutomationId</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ControlId</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>ControlId</Name>
                  <Signature>int32 ControlId</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Index</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Index</Name>
                  <Signature>int32 Index</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>InstanceName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>InstanceName</Name>
                  <Signature>string InstanceName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>OwnedWindow</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>OwnedWindow</Name>
                  <Signature>bool OwnedWindow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsValid</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsValid</Name>
                  <Signature>bool IsValid</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int ScrollBarOwnerWindowHandle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Text</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Text</Name>
                  <Signature>string Text</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsEnabled</Name>
                  <Signature>bool IsEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsFocused</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsFocused</Name>
                  <Signature>bool IsFocused</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>WindowClass</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>WindowClass</Name>
                  <Signature>string WindowClass</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Properties</Name>
                  <Signature>TestAutomationFX.Core.ControlProperties</Signature>
                </Original>
                <Obfuscated>
                  <Name>Properties</Name>
                  <Signature>TestAutomationFX.Core.ControlProperties Properties</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsChecked</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsChecked</Name>
                  <Signature>bool IsChecked</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>MsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject MsaaObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MsaaRole</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole</Signature>
                </Original>
                <Obfuscated>
                  <Name>MsaaRole</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole MsaaRole</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>ExecuteRemoteHandleDelegate</Name>
                <NewName>ExecuteRemoteHandleDelegate</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>object Invoke (native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>object Invoke (native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (native int, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (native int, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>object EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>object EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>ExecuteRemoteHandleWithDataDelegate</Name>
                <NewName>ExecuteRemoteHandleWithDataDelegate</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>object Invoke (native int, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>object Invoke (native int, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (native int, object, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (native int, object, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>object EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>object EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>ExecuteRemoteControlDelegate</Name>
                <NewName>ExecuteRemoteControlDelegate</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>object Invoke ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>object Invoke ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([System.Windows.Forms] System.Windows.Forms.Control, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([System.Windows.Forms] System.Windows.Forms.Control, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>object EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>object EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>ExecuteRemoteControlWithDataDelegate</Name>
                <NewName>ExecuteRemoteControlWithDataDelegate</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>object Invoke ([System.Windows.Forms] System.Windows.Forms.Control, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>object Invoke ([System.Windows.Forms] System.Windows.Forms.Control, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([System.Windows.Forms] System.Windows.Forms.Control, object, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([System.Windows.Forms] System.Windows.Forms.Control, object, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>object EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>object EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>ExecuteRemoteDelegateInternal</Name>
                <NewName>a</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>object Invoke (native int, TestAutomationFX.UI.UIWindow/ExecuteRemoteControlDelegate)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>object Invoke (native int, TestAutomationFX.UI.UIWindow/ExecuteRemoteControlDelegate)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (native int, TestAutomationFX.UI.UIWindow/ExecuteRemoteControlDelegate, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (native int, TestAutomationFX.UI.UIWindow/ExecuteRemoteControlDelegate, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>object EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>object EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested assembly</Accessibility>
              </NestedType>
              <NestedType>
                <Name>ExecuteRemoteControlWithDataDelegateInternal</Name>
                <NewName>b</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>object Invoke (native int, TestAutomationFX.UI.UIWindow/ExecuteRemoteControlWithDataDelegate, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>object Invoke (native int, TestAutomationFX.UI.UIWindow/ExecuteRemoteControlWithDataDelegate, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (native int, TestAutomationFX.UI.UIWindow/ExecuteRemoteControlWithDataDelegate, object, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (native int, TestAutomationFX.UI.UIWindow/ExecuteRemoteControlWithDataDelegate, object, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>object EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>object EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested assembly</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIGridView</Name>
              <NewName>TestAutomationFX.UI.UIGridView</NewName>
              <Field>
                <Original>
                  <Name>m_Cells</Name>
                  <Signature>TestAutomationFX.UI.GridCellsCollection</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.GridCellsCollection</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;UseCoordinatesOnClickedCells&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;UseColumnNamesDuringRecording&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;UseCellValueDuringRecording&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Cells</Name>
                  <Signature>TestAutomationFX.UI.GridCellsCollection get_Cells ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Cells</Name>
                  <Signature>TestAutomationFX.UI.GridCellsCollection get_Cells ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MsaaObjectGrid</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_MsaaObjectGrid ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MsaaObjectGrid</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_MsaaObjectGrid ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMsaaObjectForCell</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetMsaaObjectForCell (int32, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetMsaaObjectForCell</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetMsaaObjectForCell (int32, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRowMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetRowMsaaObject (int32)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRowMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetRowMsaaObject (int32)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCellMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetCellMsaaObject (int32, TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetCellMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetCellMsaaObject (int32, TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRoleObjectByIndex</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetRoleObjectByIndex (int32, [mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;, [System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject a (int32, [mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;, [System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetObjectsByRole</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; GetObjectsByRole ([mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;, [System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; a ([mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;, [System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetGridCellFromMsaaObject</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell GetGridCellFromMsaaObject (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell a (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRowCells</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; GetRowCells (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRowCells</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; GetRowCells (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMsaaObjectCell</Name>
                  <Signature>bool IsMsaaObjectCell (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsMsaaObjectCell</Name>
                  <Signature>bool IsMsaaObjectCell (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IndexOfMsaaObject</Name>
                  <Signature>static int32 IndexOfMsaaObject (TestAutomationFX.Core.MsaaObject, [mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static int32 a (TestAutomationFX.Core.MsaaObject, [mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMsaaObjectForCell</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetMsaaObjectForCell (string, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetMsaaObjectForCell</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetMsaaObjectForCell (string, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMsaaObjectForCell</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetMsaaObjectForCell (string, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetMsaaObjectForCell</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetMsaaObjectForCell (string, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMsaaObjectForCell</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetMsaaObjectForCell (int32, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetMsaaObjectForCell</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetMsaaObjectForCell (int32, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRowIndexFromCellValue</Name>
                  <Signature>int32 GetRowIndexFromCellValue (int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRowIndexFromCellValue</Name>
                  <Signature>int32 GetRowIndexFromCellValue (int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetColumnIndexFromName</Name>
                  <Signature>int32 GetColumnIndexFromName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetColumnIndexFromName</Name>
                  <Signature>int32 GetColumnIndexFromName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetColumnNameFromIndex</Name>
                  <Signature>string GetColumnNameFromIndex (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetColumnNameFromIndex</Name>
                  <Signature>string GetColumnNameFromIndex (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetColumnHeaders</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; GetColumnHeaders ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetColumnHeaders</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; GetColumnHeaders ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetColumnHeadersMsaa</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetColumnHeadersMsaa ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetColumnHeadersMsaa</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetColumnHeadersMsaa ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UseCoordinatesOnClickedCells</Name>
                  <Signature>bool get_UseCoordinatesOnClickedCells ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UseCoordinatesOnClickedCells</Name>
                  <Signature>bool get_UseCoordinatesOnClickedCells ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UseCoordinatesOnClickedCells</Name>
                  <Signature>void set_UseCoordinatesOnClickedCells (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UseCoordinatesOnClickedCells</Name>
                  <Signature>void set_UseCoordinatesOnClickedCells (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UseColumnNamesDuringRecording</Name>
                  <Signature>bool get_UseColumnNamesDuringRecording ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UseColumnNamesDuringRecording</Name>
                  <Signature>bool get_UseColumnNamesDuringRecording ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UseColumnNamesDuringRecording</Name>
                  <Signature>void set_UseColumnNamesDuringRecording (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UseColumnNamesDuringRecording</Name>
                  <Signature>void set_UseColumnNamesDuringRecording (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UseCellValueDuringRecording</Name>
                  <Signature>bool get_UseCellValueDuringRecording ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UseCellValueDuringRecording</Name>
                  <Signature>bool get_UseCellValueDuringRecording ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UseCellValueDuringRecording</Name>
                  <Signature>void set_UseCellValueDuringRecording (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UseCellValueDuringRecording</Name>
                  <Signature>void set_UseCellValueDuringRecording (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Cells</Name>
                  <Signature>TestAutomationFX.UI.GridCellsCollection</Signature>
                </Original>
                <Obfuscated>
                  <Name>Cells</Name>
                  <Signature>TestAutomationFX.UI.GridCellsCollection Cells</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MsaaObjectGrid</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>MsaaObjectGrid</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject MsaaObjectGrid</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UseCoordinatesOnClickedCells</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>UseCoordinatesOnClickedCells</Name>
                  <Signature>bool UseCoordinatesOnClickedCells</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UseColumnNamesDuringRecording</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>UseColumnNamesDuringRecording</Name>
                  <Signature>bool UseColumnNamesDuringRecording</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UseCellValueDuringRecording</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>UseCellValueDuringRecording</Name>
                  <Signature>bool UseCellValueDuringRecording</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMapObjectGridView</Name>
              <NewName>TestAutomationFX.UI.UIMapObjectGridView</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIUnknownObject</Name>
              <NewName>TestAutomationFX.UI.UIUnknownObject</NewName>
              <Method>
                <Original>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMatchToObject</Name>
                  <Signature>bool IsMatchToObject (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsMatchToObject</Name>
                  <Signature>bool IsMatchToObject (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMapObjectUnknown</Name>
              <NewName>TestAutomationFX.UI.UIMapObjectUnknown</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.Design.AddObjectBatchHelper</Name>
              <NewName>i</NewName>
              <Field>
                <Original>
                  <Name>m_UIMapDesigner</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PropertyDescriptor</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptor</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptor</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_OldValue</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.Design.UIMapDesigner, [System] System.ComponentModel.PropertyDescriptor)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.Design.UIMapDesigner, [System] System.ComponentModel.PropertyDescriptor)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.IDisposable.Dispose</Name>
                  <Signature>void System.IDisposable.Dispose ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.IDisposable.Dispose</Name>
                  <Signature>void System.IDisposable.Dispose ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.Design.AddObjectType</Name>
              <NewName>j</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Default</Name>
                  <Signature>TestAutomationFX.UI.Design.AddObjectType</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.UI.Design.AddObjectType</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Raw</Name>
                  <Signature>TestAutomationFX.UI.Design.AddObjectType</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.UI.Design.AddObjectType</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.Design.DesignerExtenders.ExtenderProviderBase</Name>
              <NewName>k</NewName>
              <Field>
                <Original>
                  <Name>m_BaseComponent</Name>
                  <Signature>[System] System.ComponentModel.IComponent</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IComponent</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>CanExtend</Name>
                  <Signature>bool CanExtend (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CanExtend</Name>
                  <Signature>bool CanExtend (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_BaseComponent</Name>
                  <Signature>[System] System.ComponentModel.IComponent get_BaseComponent ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IComponent a ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetBaseComponent</Name>
                  <Signature>[System] System.ComponentModel.IComponent GetBaseComponent (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetBaseComponent</Name>
                  <Signature>[System] System.ComponentModel.IComponent GetBaseComponent (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.IExtenderProvider.CanExtend</Name>
                  <Signature>bool System.ComponentModel.IExtenderProvider.CanExtend (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.IExtenderProvider.CanExtend</Name>
                  <Signature>bool System.ComponentModel.IExtenderProvider.CanExtend (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>BaseComponent</Name>
                  <Signature>[System] System.ComponentModel.IComponent</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System] System.ComponentModel.IComponent</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.Design.DesignerExtenders.AboutExtenderProvider</Name>
              <NewName>l</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetAbout</Name>
                  <Signature>string GetAbout ([System] System.ComponentModel.IComponent)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetAbout</Name>
                  <Signature>string GetAbout ([System] System.ComponentModel.IComponent)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.Design.DesignerExtenders.AboutUITypeEditor</Name>
              <NewName>TestAutomationFX.UI.Design.DesignerExtenders.AboutUITypeEditor</NewName>
              <Method>
                <Original>
                  <Name>GetEditStyle</Name>
                  <Signature>[System.Drawing] System.Drawing.Design.UITypeEditorEditStyle GetEditStyle ([System] System.ComponentModel.ITypeDescriptorContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetEditStyle</Name>
                  <Signature>[System.Drawing] System.Drawing.Design.UITypeEditorEditStyle GetEditStyle ([System] System.ComponentModel.ITypeDescriptorContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EditValue</Name>
                  <Signature>object EditValue ([System] System.ComponentModel.ITypeDescriptorContext, [mscorlib] System.IServiceProvider, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>EditValue</Name>
                  <Signature>object EditValue ([System] System.ComponentModel.ITypeDescriptorContext, [mscorlib] System.IServiceProvider, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.Design.DesignerExtenders.DesignerExtenders</Name>
              <NewName>m</NewName>
              <Field>
                <Original>
                  <Name>m_ExtenderService</Name>
                  <Signature>[System] System.ComponentModel.Design.IExtenderProviderService</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.Design.IExtenderProviderService</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ExtenderProviders</Name>
                  <Signature>[System] System.ComponentModel.IExtenderProvider[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IExtenderProvider[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UIMapDesigner</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.Design.IExtenderProviderService, TestAutomationFX.UI.Design.UIMapDesigner)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.Design.IExtenderProviderService, TestAutomationFX.UI.Design.UIMapDesigner)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.IDisposable.Dispose</Name>
                  <Signature>void System.IDisposable.Dispose ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.IDisposable.Dispose</Name>
                  <Signature>void System.IDisposable.Dispose ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.Design.DesignerExtenders.NameExtenderProvider</Name>
              <NewName>TestAutomationFX.UI.Design.DesignerExtenders.NameExtenderProvider</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetName</Name>
                  <Signature>string GetName ([System] System.ComponentModel.IComponent)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetName</Name>
                  <Signature>string GetName ([System] System.ComponentModel.IComponent)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetName</Name>
                  <Signature>void SetName ([System] System.ComponentModel.IComponent, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetName</Name>
                  <Signature>void SetName ([System] System.ComponentModel.IComponent, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.Design.DesignerExtenders.NameInheritedExtenderProvider</Name>
              <NewName>TestAutomationFX.UI.Design.DesignerExtenders.NameInheritedExtenderProvider</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CanExtend</Name>
                  <Signature>bool CanExtend (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CanExtend</Name>
                  <Signature>bool CanExtend (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetName</Name>
                  <Signature>string GetName ([System] System.ComponentModel.IComponent)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetName</Name>
                  <Signature>string GetName ([System] System.ComponentModel.IComponent)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Design.FlagEnumCheckedListBox</Name>
              <NewName>TestAutomationFX.Core.Design.FlagEnumCheckedListBox</NewName>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.Container</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.Container</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_IsUpdatingCheckStates</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_EnumType</Name>
                  <Signature>[mscorlib] System.Type</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Type</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_EnumValue</Name>
                  <Signature>[mscorlib] System.Enum</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Enum</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Add</Name>
                  <Signature>TestAutomationFX.Core.Design.FlagEnumCheckedListBox/FlagCheckedListBoxItem Add (int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Add</Name>
                  <Signature>TestAutomationFX.Core.Design.FlagEnumCheckedListBox/FlagCheckedListBoxItem Add (int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Add</Name>
                  <Signature>TestAutomationFX.Core.Design.FlagEnumCheckedListBox/FlagCheckedListBoxItem Add (TestAutomationFX.Core.Design.FlagEnumCheckedListBox/FlagCheckedListBoxItem)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Add</Name>
                  <Signature>TestAutomationFX.Core.Design.FlagEnumCheckedListBox/FlagCheckedListBoxItem Add (TestAutomationFX.Core.Design.FlagEnumCheckedListBox/FlagCheckedListBoxItem)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnItemCheck</Name>
                  <Signature>void OnItemCheck ([System.Windows.Forms] System.Windows.Forms.ItemCheckEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnItemCheck</Name>
                  <Signature>void OnItemCheck ([System.Windows.Forms] System.Windows.Forms.ItemCheckEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateCheckedItems</Name>
                  <Signature>void UpdateCheckedItems (int32)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>UpdateCheckedItems</Name>
                  <Signature>void UpdateCheckedItems (int32)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateCheckedItems</Name>
                  <Signature>void UpdateCheckedItems (TestAutomationFX.Core.Design.FlagEnumCheckedListBox/FlagCheckedListBoxItem, [System.Windows.Forms] System.Windows.Forms.CheckState)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>UpdateCheckedItems</Name>
                  <Signature>void UpdateCheckedItems (TestAutomationFX.Core.Design.FlagEnumCheckedListBox/FlagCheckedListBoxItem, [System.Windows.Forms] System.Windows.Forms.CheckState)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCurrentValue</Name>
                  <Signature>int32 GetCurrentValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetCurrentValue</Name>
                  <Signature>int32 GetCurrentValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FillEnumMembers</Name>
                  <Signature>void FillEnumMembers ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ApplyEnumValue</Name>
                  <Signature>void ApplyEnumValue ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_EnumValue</Name>
                  <Signature>[mscorlib] System.Enum get_EnumValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_EnumValue</Name>
                  <Signature>[mscorlib] System.Enum get_EnumValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_EnumValue</Name>
                  <Signature>void set_EnumValue ([mscorlib] System.Enum)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_EnumValue</Name>
                  <Signature>void set_EnumValue ([mscorlib] System.Enum)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>EnumValue</Name>
                  <Signature>[mscorlib] System.Enum</Signature>
                </Original>
                <Obfuscated>
                  <Name>EnumValue</Name>
                  <Signature>[mscorlib] System.Enum EnumValue</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>FlagCheckedListBoxItem</Name>
                <NewName>FlagCheckedListBoxItem</NewName>
                <Field>
                  <Original>
                    <Name>m_Value</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>m_Value</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>m_Caption</Name>
                    <Signature>string</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>m_Caption</Name>
                    <Signature>string</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32, string)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32, string)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>ToString</Name>
                    <Signature>string ToString ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>ToString</Name>
                    <Signature>string ToString ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>get_IsFlag</Name>
                    <Signature>bool get_IsFlag ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>get_IsFlag</Name>
                    <Signature>bool get_IsFlag ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>IsMemberFlag</Name>
                    <Signature>bool IsMemberFlag (TestAutomationFX.Core.Design.FlagEnumCheckedListBox/FlagCheckedListBoxItem)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>IsMemberFlag</Name>
                    <Signature>bool IsMemberFlag (TestAutomationFX.Core.Design.FlagEnumCheckedListBox/FlagCheckedListBoxItem)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Property>
                  <Original>
                    <Name>IsFlag</Name>
                    <Signature>bool</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>IsFlag</Name>
                    <Signature>bool IsFlag</Signature>
                  </Obfuscated>
                </Property>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Design.FlagEnumUITypeEditor</Name>
              <NewName>TestAutomationFX.Core.Design.FlagEnumUITypeEditor</NewName>
              <Field>
                <Original>
                  <Name>m_FlagEnumCheckedListBox</Name>
                  <Signature>TestAutomationFX.Core.Design.FlagEnumCheckedListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Design.FlagEnumCheckedListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EditValue</Name>
                  <Signature>object EditValue ([System] System.ComponentModel.ITypeDescriptorContext, [mscorlib] System.IServiceProvider, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>EditValue</Name>
                  <Signature>object EditValue ([System] System.ComponentModel.ITypeDescriptorContext, [mscorlib] System.IServiceProvider, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetEditStyle</Name>
                  <Signature>[System.Drawing] System.Drawing.Design.UITypeEditorEditStyle GetEditStyle ([System] System.ComponentModel.ITypeDescriptorContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetEditStyle</Name>
                  <Signature>[System.Drawing] System.Drawing.Design.UITypeEditorEditStyle GetEditStyle ([System] System.ComponentModel.ITypeDescriptorContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Design.MatchedPropertiesEditor</Name>
              <NewName>TestAutomationFX.Core.Design.MatchedPropertiesEditor</NewName>
              <Field>
                <Original>
                  <Name>m_ViewedObject</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PropertyGrid</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PropertyGrid</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PropertyGrid</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ViewedObject</Name>
                  <Signature>object get_ViewedObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ViewedObject</Name>
                  <Signature>object get_ViewedObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ViewedObject</Name>
                  <Signature>void set_ViewedObject (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ViewedObject</Name>
                  <Signature>void set_ViewedObject (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ViewedObject</Name>
                  <Signature>object</Signature>
                </Original>
                <Obfuscated>
                  <Name>ViewedObject</Name>
                  <Signature>object ViewedObject</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.Design.NameCreationService</Name>
              <NewName>TestAutomationFX.UI.Design.NameCreationService</NewName>
              <Field>
                <Original>
                  <Name>m_Container</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.IContainer)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.IContainer)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateName</Name>
                  <Signature>string CreateName ([System] System.ComponentModel.IContainer, [mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateName</Name>
                  <Signature>string CreateName ([System] System.ComponentModel.IContainer, [mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsValidName</Name>
                  <Signature>bool IsValidName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsValidName</Name>
                  <Signature>bool IsValidName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ValidateName</Name>
                  <Signature>void ValidateName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ValidateName</Name>
                  <Signature>void ValidateName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Design.ObjectWrapper</Name>
              <NewName>TestAutomationFX.Core.Design.ObjectWrapper</NewName>
              <Field>
                <Original>
                  <Name>m_WrappedObject</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_WrappedObjectType</Name>
                  <Signature>[mscorlib] System.Type get_WrappedObjectType ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Type a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetAttributes</Name>
                  <Signature>[System] System.ComponentModel.AttributeCollection GetAttributes ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetAttributes</Name>
                  <Signature>[System] System.ComponentModel.AttributeCollection GetAttributes ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetClassName</Name>
                  <Signature>string GetClassName ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetClassName</Name>
                  <Signature>string GetClassName ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetConverter</Name>
                  <Signature>[System] System.ComponentModel.TypeConverter GetConverter ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetConverter</Name>
                  <Signature>[System] System.ComponentModel.TypeConverter GetConverter ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetDefaultEvent</Name>
                  <Signature>[System] System.ComponentModel.EventDescriptor GetDefaultEvent ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetDefaultEvent</Name>
                  <Signature>[System] System.ComponentModel.EventDescriptor GetDefaultEvent ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetDefaultProperty</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptor GetDefaultProperty ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetDefaultProperty</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptor GetDefaultProperty ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetEditor</Name>
                  <Signature>object GetEditor ([mscorlib] System.Type)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetEditor</Name>
                  <Signature>object GetEditor ([mscorlib] System.Type)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetEvents</Name>
                  <Signature>[System] System.ComponentModel.EventDescriptorCollection GetEvents ([mscorlib] System.Attribute[])</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetEvents</Name>
                  <Signature>[System] System.ComponentModel.EventDescriptorCollection GetEvents ([mscorlib] System.Attribute[])</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetEvents</Name>
                  <Signature>[System] System.ComponentModel.EventDescriptorCollection GetEvents ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetEvents</Name>
                  <Signature>[System] System.ComponentModel.EventDescriptorCollection GetEvents ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProperties</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptorCollection GetProperties ([mscorlib] System.Attribute[])</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetProperties</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptorCollection GetProperties ([mscorlib] System.Attribute[])</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProperties</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptorCollection GetProperties ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetProperties</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptorCollection GetProperties ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPropertyOwner</Name>
                  <Signature>object GetPropertyOwner ([System] System.ComponentModel.PropertyDescriptor)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetPropertyOwner</Name>
                  <Signature>object GetPropertyOwner ([System] System.ComponentModel.PropertyDescriptor)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetAttributes</Name>
                  <Signature>[System] System.ComponentModel.AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetAttributes</Name>
                  <Signature>[System] System.ComponentModel.AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetClassName</Name>
                  <Signature>string System.ComponentModel.ICustomTypeDescriptor.GetClassName ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetClassName</Name>
                  <Signature>string System.ComponentModel.ICustomTypeDescriptor.GetClassName ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetComponentName</Name>
                  <Signature>string System.ComponentModel.ICustomTypeDescriptor.GetComponentName ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetComponentName</Name>
                  <Signature>string System.ComponentModel.ICustomTypeDescriptor.GetComponentName ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetConverter</Name>
                  <Signature>[System] System.ComponentModel.TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetConverter</Name>
                  <Signature>[System] System.ComponentModel.TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent</Name>
                  <Signature>[System] System.ComponentModel.EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent</Name>
                  <Signature>[System] System.ComponentModel.EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetEditor</Name>
                  <Signature>object System.ComponentModel.ICustomTypeDescriptor.GetEditor ([mscorlib] System.Type)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetEditor</Name>
                  <Signature>object System.ComponentModel.ICustomTypeDescriptor.GetEditor ([mscorlib] System.Type)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetEvents</Name>
                  <Signature>[System] System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents ([mscorlib] System.Attribute[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetEvents</Name>
                  <Signature>[System] System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents ([mscorlib] System.Attribute[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetEvents</Name>
                  <Signature>[System] System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetEvents</Name>
                  <Signature>[System] System.ComponentModel.EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetProperties</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties ([mscorlib] System.Attribute[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetProperties</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties ([mscorlib] System.Attribute[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetProperties</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetProperties</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner</Name>
                  <Signature>object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner ([System] System.ComponentModel.PropertyDescriptor)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner</Name>
                  <Signature>object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner ([System] System.ComponentModel.PropertyDescriptor)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>WrappedObjectType</Name>
                  <Signature>[mscorlib] System.Type</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Type</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.Design.UIMapDesigner</Name>
              <NewName>TestAutomationFX.UI.Design.UIMapDesigner</NewName>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_IsDescriptionInfoVisible</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_IsObjectInfoVisible</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_IsMatchedPropertiesVisible</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_IsUnmappedObjectsVisible</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_DesignerExtenders</Name>
                  <Signature>TestAutomationFX.UI.Design.DesignerExtenders.DesignerExtenders</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>m</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ComponentNameValidator</Name>
                  <Signature>TestAutomationFX.Core.ComponentNameValidator</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.ComponentNameValidator</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PropertyChanged</Name>
                  <Signature>[System] System.ComponentModel.PropertyChangedEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.PropertyChangedEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;CurrentSelection&gt;k__BackingField</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>add_m_PropertyChanged</Name>
                  <Signature>void add_m_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_m_PropertyChanged</Name>
                  <Signature>void remove_m_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Initialize</Name>
                  <Signature>void Initialize ([System] System.ComponentModel.IComponent)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Initialize</Name>
                  <Signature>void Initialize ([System] System.ComponentModel.IComponent)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UnhookupNotifyPropertyChangedOnAllComponents</Name>
                  <Signature>void UnhookupNotifyPropertyChangedOnAllComponents ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnSelectionChanged</Name>
                  <Signature>void OnSelectionChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCurrentSelection</Name>
                  <Signature>object GetCurrentSelection ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnComponentRemoved</Name>
                  <Signature>void OnComponentRemoved (object, [System] System.ComponentModel.Design.ComponentEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.Design.ComponentEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnComponentChanged</Name>
                  <Signature>void OnComponentChanged (object, [System] System.ComponentModel.Design.ComponentChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.Design.ComponentChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnComponentAdded</Name>
                  <Signature>void OnComponentAdded (object, [System] System.ComponentModel.Design.ComponentEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [System] System.ComponentModel.Design.ComponentEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HookupUIMapListChangedEvents</Name>
                  <Signature>void HookupUIMapListChangedEvents ([System] System.ComponentModel.IComponent)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System] System.ComponentModel.IComponent)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UnhookupUIMapListChangedEvents</Name>
                  <Signature>void UnhookupUIMapListChangedEvents ([System] System.ComponentModel.IComponent)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ([System] System.ComponentModel.IComponent)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnUnmappedObjectsListChanged</Name>
                  <Signature>void OnUnmappedObjectsListChanged (object, [System] System.ComponentModel.ListChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.ListChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddUnmappedObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddUnmappedObject ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemoveUnmappedObject</Name>
                  <Signature>void RemoveUnmappedObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddObjectInternal</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddObjectInternal (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo, TestAutomationFX.UI.Design.AddObjectType)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject a (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo, j)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddObjectRaw</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddObjectRaw (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject a (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddObject (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.UI.UIObject b (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddObjectNoComponentChanged</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddObjectNoComponentChanged (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo, TestAutomationFX.UI.Design.AddObjectType)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.UI.UIObject b (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo, j)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TriggerPropertyChanged</Name>
                  <Signature>void TriggerPropertyChanged (object, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>PreFilterProperties</Name>
                  <Signature>void PreFilterProperties ([mscorlib] System.Collections.IDictionary)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>PreFilterProperties</Name>
                  <Signature>void PreFilterProperties ([mscorlib] System.Collections.IDictionary)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsUnmappedObjectsVisible</Name>
                  <Signature>bool get_IsUnmappedObjectsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsUnmappedObjectsVisible</Name>
                  <Signature>bool get_IsUnmappedObjectsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsUnmappedObjectsVisible</Name>
                  <Signature>void set_IsUnmappedObjectsVisible (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsUnmappedObjectsVisible</Name>
                  <Signature>void set_IsUnmappedObjectsVisible (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsMatchedPropertiesVisible</Name>
                  <Signature>bool get_IsMatchedPropertiesVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsMatchedPropertiesVisible</Name>
                  <Signature>bool get_IsMatchedPropertiesVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsMatchedPropertiesVisible</Name>
                  <Signature>void set_IsMatchedPropertiesVisible (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsMatchedPropertiesVisible</Name>
                  <Signature>void set_IsMatchedPropertiesVisible (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsObjectInfoVisible</Name>
                  <Signature>bool get_IsObjectInfoVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsObjectInfoVisible</Name>
                  <Signature>bool get_IsObjectInfoVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsObjectInfoVisible</Name>
                  <Signature>void set_IsObjectInfoVisible (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsObjectInfoVisible</Name>
                  <Signature>void set_IsObjectInfoVisible (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsDescriptionInfoVisible</Name>
                  <Signature>bool get_IsDescriptionInfoVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsDescriptionInfoVisible</Name>
                  <Signature>bool get_IsDescriptionInfoVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsDescriptionInfoVisible</Name>
                  <Signature>void set_IsDescriptionInfoVisible (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsDescriptionInfoVisible</Name>
                  <Signature>void set_IsDescriptionInfoVisible (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StartAddObjectBatch</Name>
                  <Signature>[mscorlib] System.IDisposable StartAddObjectBatch ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.IDisposable a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPropertyDescriptor</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptor GetPropertyDescriptor ([System] System.ComponentModel.Component, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptor a ([System] System.ComponentModel.Component, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnUIMapObjectApplicationsListChanged</Name>
                  <Signature>void OnUIMapObjectApplicationsListChanged (object, [System] System.ComponentModel.ListChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [System] System.ComponentModel.ListChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowProperties</Name>
                  <Signature>void ShowProperties ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ViewCode</Name>
                  <Signature>void ViewCode ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SiteComponent</Name>
                  <Signature>void SiteComponent ([System] System.ComponentModel.IComponent)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ([System] System.ComponentModel.IComponent)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateValidName</Name>
                  <Signature>bool CreateValidName (TestAutomationFX.UI.UIObject, [out] string&amp;)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateValidName</Name>
                  <Signature>bool CreateValidName (TestAutomationFX.UI.UIObject, [out] string&amp;)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsValidName</Name>
                  <Signature>bool IsValidName (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnComponentRename</Name>
                  <Signature>void OnComponentRename (object, [System] System.ComponentModel.Design.ComponentRenameEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.Design.ComponentRenameEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetLocalName</Name>
                  <Signature>void SetLocalName (object, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Flush</Name>
                  <Signature>void Flush ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CurrentSelection</Name>
                  <Signature>object get_CurrentSelection ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>object b ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CurrentSelection</Name>
                  <Signature>void set_CurrentSelection (object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HookupNotifyPropertyChangedOnComponent</Name>
                  <Signature>void HookupNotifyPropertyChangedOnComponent (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UnhookupNotifyPropertyChangedOnComponent</Name>
                  <Signature>void UnhookupNotifyPropertyChangedOnComponent (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnComponentPropertyChanged</Name>
                  <Signature>void OnComponentPropertyChanged (object, [System] System.ComponentModel.PropertyChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.PropertyChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_EventBindingService</Name>
                  <Signature>[System] System.ComponentModel.Design.IEventBindingService get_EventBindingService ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.Design.IEventBindingService a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MenuCommandService</Name>
                  <Signature>[System] System.ComponentModel.Design.IMenuCommandService get_MenuCommandService ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.Design.IMenuCommandService a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIService</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Design.IUIService get_UIService ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Design.IUIService a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ExtenderProviderService</Name>
                  <Signature>[System] System.ComponentModel.Design.IExtenderProviderService get_ExtenderProviderService ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.Design.IExtenderProviderService a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SelectionService</Name>
                  <Signature>[System] System.ComponentModel.Design.ISelectionService get_SelectionService ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.Design.ISelectionService a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DesignerHost</Name>
                  <Signature>[System] System.ComponentModel.Design.IDesignerHost get_DesignerHost ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.Design.IDesignerHost a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_NameCreationService</Name>
                  <Signature>[System] System.ComponentModel.Design.Serialization.INameCreationService get_NameCreationService ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.Design.Serialization.INameCreationService a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ComponentChangeService</Name>
                  <Signature>[System] System.ComponentModel.Design.IComponentChangeService get_ComponentChangeService ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.Design.IComponentChangeService a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap get_UIMap ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIMap a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Delete</Name>
                  <Signature>void Delete (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsDesignMode</Name>
                  <Signature>bool get_IsDesignMode ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SiteAllObjects</Name>
                  <Signature>void SiteAllObjects ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SiteUIMapObjectApplications</Name>
                  <Signature>void SiteUIMapObjectApplications ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SiteUnmappedObjects</Name>
                  <Signature>void SiteUnmappedObjects ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>void g ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SiteUIObjectWithChildren</Name>
                  <Signature>void SiteUIObjectWithChildren (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetView</Name>
                  <Signature>object GetView ([System] System.ComponentModel.Design.ViewTechnology)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetView</Name>
                  <Signature>object GetView ([System] System.ComponentModel.Design.ViewTechnology)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetUIMapDesignerView</Name>
                  <Signature>object GetUIMapDesignerView ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetUIMapDesignerView</Name>
                  <Signature>object GetUIMapDesignerView ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RaiseComponentChangingInternal</Name>
                  <Signature>void RaiseComponentChangingInternal ([System] System.ComponentModel.MemberDescriptor)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System] System.ComponentModel.MemberDescriptor)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RaiseComponentChangedInternal</Name>
                  <Signature>void RaiseComponentChangedInternal ([System] System.ComponentModel.MemberDescriptor, object, object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System] System.ComponentModel.MemberDescriptor, object, object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SupportedTechnologies</Name>
                  <Signature>[System] System.ComponentModel.Design.ViewTechnology[] get_SupportedTechnologies ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SupportedTechnologies</Name>
                  <Signature>[System] System.ComponentModel.Design.ViewTechnology[] get_SupportedTechnologies ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FirePropertyChanged</Name>
                  <Signature>void FirePropertyChanged (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FirePropertyChanged</Name>
                  <Signature>void FirePropertyChanged (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_PropertyChanged</Name>
                  <Signature>void add_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_PropertyChanged</Name>
                  <Signature>void add_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_PropertyChanged</Name>
                  <Signature>void remove_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_PropertyChanged</Name>
                  <Signature>void remove_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.Design.IRootDesigner.GetView</Name>
                  <Signature>object System.ComponentModel.Design.IRootDesigner.GetView ([System] System.ComponentModel.Design.ViewTechnology)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.Design.IRootDesigner.GetView</Name>
                  <Signature>object System.ComponentModel.Design.IRootDesigner.GetView ([System] System.ComponentModel.Design.ViewTechnology)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.Design.IRootDesigner.get_SupportedTechnologies</Name>
                  <Signature>[System] System.ComponentModel.Design.ViewTechnology[] System.ComponentModel.Design.IRootDesigner.get_SupportedTechnologies ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.Design.IRootDesigner.get_SupportedTechnologies</Name>
                  <Signature>[System] System.ComponentModel.Design.ViewTechnology[] System.ComponentModel.Design.IRootDesigner.get_SupportedTechnologies ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>IsUnmappedObjectsVisible</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsUnmappedObjectsVisible</Name>
                  <Signature>bool IsUnmappedObjectsVisible</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsMatchedPropertiesVisible</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsMatchedPropertiesVisible</Name>
                  <Signature>bool IsMatchedPropertiesVisible</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsObjectInfoVisible</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsObjectInfoVisible</Name>
                  <Signature>bool IsObjectInfoVisible</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsDescriptionInfoVisible</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsDescriptionInfoVisible</Name>
                  <Signature>bool IsDescriptionInfoVisible</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CurrentSelection</Name>
                  <Signature>object</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>object</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>EventBindingService</Name>
                  <Signature>[System] System.ComponentModel.Design.IEventBindingService</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System] System.ComponentModel.Design.IEventBindingService</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MenuCommandService</Name>
                  <Signature>[System] System.ComponentModel.Design.IMenuCommandService</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System] System.ComponentModel.Design.IMenuCommandService</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIService</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Design.IUIService</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Design.IUIService</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ExtenderProviderService</Name>
                  <Signature>[System] System.ComponentModel.Design.IExtenderProviderService</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System] System.ComponentModel.Design.IExtenderProviderService</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SelectionService</Name>
                  <Signature>[System] System.ComponentModel.Design.ISelectionService</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System] System.ComponentModel.Design.ISelectionService</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DesignerHost</Name>
                  <Signature>[System] System.ComponentModel.Design.IDesignerHost</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System] System.ComponentModel.Design.IDesignerHost</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>NameCreationService</Name>
                  <Signature>[System] System.ComponentModel.Design.Serialization.INameCreationService</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System] System.ComponentModel.Design.Serialization.INameCreationService</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ComponentChangeService</Name>
                  <Signature>[System] System.ComponentModel.Design.IComponentChangeService</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System] System.ComponentModel.Design.IComponentChangeService</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.UI.UIMap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsDesignMode</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SupportedTechnologies</Name>
                  <Signature>[System] System.ComponentModel.Design.ViewTechnology[]</Signature>
                </Original>
                <Obfuscated>
                  <Name>SupportedTechnologies</Name>
                  <Signature>[System] System.ComponentModel.Design.ViewTechnology[] SupportedTechnologies</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>System.ComponentModel.Design.IRootDesigner.SupportedTechnologies</Name>
                  <Signature>[System] System.ComponentModel.Design.ViewTechnology[]</Signature>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.Design.IRootDesigner.SupportedTechnologies</Name>
                  <Signature>[System] System.ComponentModel.Design.ViewTechnology[] System.ComponentModel.Design.IRootDesigner.SupportedTechnologies</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>m_PropertyChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>PropertyChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>PropertyChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>System.ComponentModel.INotifyPropertyChanged.PropertyChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.INotifyPropertyChanged.PropertyChanged</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.Design.UIMapDesignerView</Name>
              <NewName>TestAutomationFX.UI.Design.UIMapDesignerView</NewName>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_HasCheckedForUpdates</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_RecordingForm</Name>
                  <Signature>TestAutomationFX.UI.RecordingForm</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.RecordingForm</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UIMapDesigner</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_NewTestName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ContextMenuStrip</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ContextMenuStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ContextMenuStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>addUserInterfacObjectToolStripMenuItem</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>deleteToolStripMenuItem</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TopPanel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UIMapTreeView</Name>
                  <Signature>TestAutomationFX.UI.UIMapTreeView</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIMapTreeView</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ToolTip</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolTip</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolTip</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_OpenFileDialog</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.OpenFileDialog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.OpenFileDialog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ShowDescription</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ObjectInfoPanel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ObjectImagePictureBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ShowObjectInfoCheckbox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_HighlightSelectedObjectCheckBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AddObjectButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>addControlPartToolStripMenuItem</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>refreshImageToolStripMenuItem</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>startApplicationToolStripMenuItem</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_RecordButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UnmappedObjectsPanel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>groupBox1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UnmappedObjectListBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>toolStrip1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AddUnmappedObjectButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ObjectInfoGroupBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>toolStrip2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_RefreshObjectImageButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ObjectNameLabel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UnmappedObjectsContextMenu</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ContextMenuStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ContextMenuStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MapObjectMenuItem</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CheckForUpdateDelayTimer</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_SaveObjectImageButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_SaveFileDialog</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.SaveFileDialog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.SaveFileDialog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_EnableControlsTimer</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ViewCodeToolStripMenuItem</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>toolStripSeparator1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripSeparator</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripSeparator</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>toolStripSeparator2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripSeparator</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripSeparator</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PropertiesToolStripMenuItem</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>remapObjectToolStripMenuItem</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MatchedPropertiesEditor</Name>
                  <Signature>TestAutomationFX.Core.Design.MatchedPropertiesEditor</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Design.MatchedPropertiesEditor</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MatchingInfoPanel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MatchingInfoGroupBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MatchingInfoCheckBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ShowUnmappedObjectsCheckBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UIMapBindingSource</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.BindingSource</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.BindingSource</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UIMapDesignerBindingSource</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.BindingSource</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.BindingSource</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>removeObjectToolStripMenuItem</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_RemoveUnmappedObjectButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.Design.UIMapDesigner)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.Design.UIMapDesigner)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateDataSources</Name>
                  <Signature>void UpdateDataSources ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateRemoveUnmappedOjbectButton</Name>
                  <Signature>void UpdateRemoveUnmappedOjbectButton ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShouldRemoveUnmappedObjectButtonBeEnabled</Name>
                  <Signature>bool ShouldRemoveUnmappedObjectButtonBeEnabled ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnLoad</Name>
                  <Signature>void OnLoad ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnLoad</Name>
                  <Signature>void OnLoad ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIMapDesigner</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner get_UIMapDesigner ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UIMapDesigner</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner get_UIMapDesigner ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UIMapDesigner</Name>
                  <Signature>void set_UIMapDesigner (TestAutomationFX.UI.Design.UIMapDesigner)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UIMapDesigner</Name>
                  <Signature>void set_UIMapDesigner (TestAutomationFX.UI.Design.UIMapDesigner)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateTree</Name>
                  <Signature>void UpdateTree ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>UpdateTree</Name>
                  <Signature>void UpdateTree ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap get_UIMap ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap get_UIMap ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAddMenuItemClick</Name>
                  <Signature>void OnAddMenuItemClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnDeleteToolStripMenuItemClick</Name>
                  <Signature>void OnDeleteToolStripMenuItemClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DeleteSelectedObject</Name>
                  <Signature>void DeleteSelectedObject ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnUIMapTreeViewSelectedObjectChanged</Name>
                  <Signature>void OnUIMapTreeViewSelectedObjectChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateObject</Name>
                  <Signature>void UpdateObject (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>UpdateObject</Name>
                  <Signature>void UpdateObject (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateSelectedObject</Name>
                  <Signature>void UpdateSelectedObject ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetSelectedObject</Name>
                  <Signature>object GetSelectedObject ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>object f ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnShowObjectInfoCheckboxCheckedChanged</Name>
                  <Signature>void OnShowObjectInfoCheckboxCheckedChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnHighlightSelectedObjectCheckBoxChanged</Name>
                  <Signature>void OnHighlightSelectedObjectCheckBoxChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddObject (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject a (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddObjectNoUIUpdate</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddObjectNoUIUpdate (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.UI.UIObject b (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAddObjectButtonClick</Name>
                  <Signature>void OnAddObjectButtonClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowAddObjectDialog</Name>
                  <Signature>TestAutomationFX.UI.UIObject ShowAddObjectDialog ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ShowAddObjectDialog</Name>
                  <Signature>TestAutomationFX.UI.UIObject ShowAddObjectDialog ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAddControlPartClick</Name>
                  <Signature>void OnAddControlPartClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>void g (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnRefreshImageClick</Name>
                  <Signature>void OnRefreshImageClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>void h (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RefreshImage</Name>
                  <Signature>void RefreshImage ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>void g ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnStartApplicationMenuItemClick</Name>
                  <Signature>void OnStartApplicationMenuItemClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>void i (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnContextMenuStripOpening</Name>
                  <Signature>void OnContextMenuStripOpening (object, [System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnRecordButtonClick</Name>
                  <Signature>void OnRecordButtonClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>void j (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StartRecord</Name>
                  <Signature>void StartRecord (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>StartRecord</Name>
                  <Signature>void StartRecord (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InvokeStartRecord</Name>
                  <Signature>void InvokeStartRecord (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>InvokeStartRecord</Name>
                  <Signature>void InvokeStartRecord (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowMethod</Name>
                  <Signature>bool ShowMethod (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ShowMethod</Name>
                  <Signature>bool ShowMethod (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InvokeShowMethod</Name>
                  <Signature>bool InvokeShowMethod (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>InvokeShowMethod</Name>
                  <Signature>bool InvokeShowMethod (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMethods</Name>
                  <Signature>string[] GetMethods ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>string[] h ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RecordingForm</Name>
                  <Signature>TestAutomationFX.UI.RecordingForm get_RecordingForm ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>TestAutomationFX.UI.RecordingForm i ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SiteAllObjects</Name>
                  <Signature>void SiteAllObjects ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>void j ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddCodeToVS</Name>
                  <Signature>void AddCodeToVS (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddCodeToVS</Name>
                  <Signature>void AddCodeToVS (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAddUnmappedObjectButtonClick</Name>
                  <Signature>void OnAddUnmappedObjectButtonClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>void k (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnUnmappedObjectListBoxSelectedIndexChanged</Name>
                  <Signature>void OnUnmappedObjectListBoxSelectedIndexChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>l</Name>
                  <Signature>void l (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnRefreshObjectImageButtonClick</Name>
                  <Signature>void OnRefreshObjectImageButtonClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m</Name>
                  <Signature>void m (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowRecordedCode</Name>
                  <Signature>void ShowRecordedCode ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>void k ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Flush</Name>
                  <Signature>void Flush ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>l</Name>
                  <Signature>void l ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnUnmappedObjectsContextMenuOpening</Name>
                  <Signature>void OnUnmappedObjectsContextMenuOpening (object, [System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnMapObjectClicked</Name>
                  <Signature>void OnMapObjectClicked (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>n</Name>
                  <Signature>void n (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MapObject</Name>
                  <Signature>void MapObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemapObject</Name>
                  <Signature>void RemapObject (TestAutomationFX.UI.UIObject, TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RemapObject</Name>
                  <Signature>void RemapObject (TestAutomationFX.UI.UIObject, TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemapChildren</Name>
                  <Signature>static void RemapChildren (TestAutomationFX.UI.UIObject, TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (TestAutomationFX.UI.UIObject, TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCheckForUpdateDelayTimerTick</Name>
                  <Signature>void OnCheckForUpdateDelayTimerTick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>o</Name>
                  <Signature>void o (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnSaveObjectImageButtonClick</Name>
                  <Signature>void OnSaveObjectImageButtonClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>p</Name>
                  <Signature>void p (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnEnableControlsTimerTick</Name>
                  <Signature>void OnEnableControlsTimerTick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>q</Name>
                  <Signature>void q (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnPropertiesClick</Name>
                  <Signature>void OnPropertiesClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>r</Name>
                  <Signature>void r (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnViewCodeClick</Name>
                  <Signature>void OnViewCodeClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>s</Name>
                  <Signature>void s (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemapObjectClick</Name>
                  <Signature>void RemapObjectClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>t</Name>
                  <Signature>void t (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnShowUmappedObjectsCheckboxCheckedChanged</Name>
                  <Signature>void OnShowUmappedObjectsCheckboxCheckedChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>u</Name>
                  <Signature>void u (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnShowMatchingInfoCheckboxCheckedChanged</Name>
                  <Signature>void OnShowMatchingInfoCheckboxCheckedChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>v</Name>
                  <Signature>void v (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetIsUnmappedObjectsVisible</Name>
                  <Signature>void SetIsUnmappedObjectsVisible (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetIsUnmappedObjectsVisible</Name>
                  <Signature>bool GetIsUnmappedObjectsVisible ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m</Name>
                  <Signature>bool m ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetIsMatchedPropertiesVisible</Name>
                  <Signature>void SetIsMatchedPropertiesVisible (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetIsMatchedPropertiesVisible</Name>
                  <Signature>bool GetIsMatchedPropertiesVisible ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>n</Name>
                  <Signature>bool n ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetExtendedPropertyValue</Name>
                  <Signature>void SetExtendedPropertyValue (string, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetExtendedPropertyValue</Name>
                  <Signature>object GetExtendedPropertyValue (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnRemoveObjectClick</Name>
                  <Signature>void OnRemoveObjectClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>w</Name>
                  <Signature>void w (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>o</Name>
                  <Signature>void o ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>UIMapDesigner</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner</Signature>
                </Original>
                <Obfuscated>
                  <Name>UIMapDesigner</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner UIMapDesigner</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap</Signature>
                </Original>
                <Obfuscated>
                  <Name>UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap UIMap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RecordingForm</Name>
                  <Signature>TestAutomationFX.UI.RecordingForm</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.UI.RecordingForm</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>StartRecordDelegate</Name>
                <NewName>a</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke (string)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke (string)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (string, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (string, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>ShowMethodDelegate</Name>
                <NewName>b</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>bool Invoke (string)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>bool Invoke (string)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (string, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (string, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>bool EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>bool EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.EmbeddedBinaryFileResourceWriter</Name>
              <NewName>TestAutomationFX.Core.EmbeddedBinaryFileResourceWriter</NewName>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;FileName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Path&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ResourceName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;CreateDirectory&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ForceOverwrite&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_FileName</Name>
                  <Signature>string get_FileName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_FileName</Name>
                  <Signature>string get_FileName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_FileName</Name>
                  <Signature>void set_FileName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_FileName</Name>
                  <Signature>void set_FileName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Path</Name>
                  <Signature>string get_Path ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Path</Name>
                  <Signature>string get_Path ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Path</Name>
                  <Signature>void set_Path (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Path</Name>
                  <Signature>void set_Path (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ResourceName</Name>
                  <Signature>string get_ResourceName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ResourceName</Name>
                  <Signature>string get_ResourceName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ResourceName</Name>
                  <Signature>void set_ResourceName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ResourceName</Name>
                  <Signature>void set_ResourceName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CreateDirectory</Name>
                  <Signature>bool get_CreateDirectory ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CreateDirectory</Name>
                  <Signature>bool get_CreateDirectory ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CreateDirectory</Name>
                  <Signature>void set_CreateDirectory (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CreateDirectory</Name>
                  <Signature>void set_CreateDirectory (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ForceOverwrite</Name>
                  <Signature>bool get_ForceOverwrite ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ForceOverwrite</Name>
                  <Signature>bool get_ForceOverwrite ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ForceOverwrite</Name>
                  <Signature>void set_ForceOverwrite (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ForceOverwrite</Name>
                  <Signature>void set_ForceOverwrite (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_FilePath</Name>
                  <Signature>string get_FilePath ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsFileUpToDate</Name>
                  <Signature>bool get_IsFileUpToDate ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ThisFileModifiedTime</Name>
                  <Signature>[mscorlib] System.DateTime get_ThisFileModifiedTime ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.DateTime a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WriteFile</Name>
                  <Signature>void WriteFile ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateDirectoryIfNeeded</Name>
                  <Signature>void CreateDirectoryIfNeeded ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetFileStream</Name>
                  <Signature>[mscorlib] System.IO.Stream GetFileStream ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.IO.Stream a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ResourceNames</Name>
                  <Signature>string[] get_ResourceNames ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string[] a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetBufferFromStream</Name>
                  <Signature>unsigned int8[] GetBufferFromStream ([mscorlib] System.IO.Stream)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>unsigned int8[] a ([mscorlib] System.IO.Stream)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WriteBuffer</Name>
                  <Signature>void WriteBuffer (string, unsigned int8[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string, unsigned int8[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>FileName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>FileName</Name>
                  <Signature>string FileName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Path</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Path</Name>
                  <Signature>string Path</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ResourceName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ResourceName</Name>
                  <Signature>string ResourceName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CreateDirectory</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>CreateDirectory</Name>
                  <Signature>bool CreateDirectory</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ForceOverwrite</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ForceOverwrite</Name>
                  <Signature>bool ForceOverwrite</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>FilePath</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsFileUpToDate</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ThisFileModifiedTime</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ResourceNames</Name>
                  <Signature>string[]</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string[]</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.EnvironmentReporter</Name>
              <NewName>TestAutomationFX.Core.EnvironmentReporter</NewName>
              <Field>
                <Original>
                  <Name>NEWLINE</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>GetReport</Name>
                  <Signature>static string GetReport ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CoreAssemblyVersion</Name>
                  <Signature>static string get_CoreAssemblyVersion ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CoreAssemblyVersion</Name>
                  <Signature>static string get_CoreAssemblyVersion ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_NetInjectorAssemblyVersion</Name>
                  <Signature>static string get_NetInjectorAssemblyVersion ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_NetInjectorAssemblyVersion</Name>
                  <Signature>static string get_NetInjectorAssemblyVersion ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>CoreAssemblyVersion</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>CoreAssemblyVersion</Name>
                  <Signature>string CoreAssemblyVersion</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>NetInjectorAssemblyVersion</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>NetInjectorAssemblyVersion</Name>
                  <Signature>string NetInjectorAssemblyVersion</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.ErrorReport</Name>
              <NewName>TestAutomationFX.Core.ErrorReport</NewName>
              <Field>
                <Original>
                  <Name>m_Exception</Name>
                  <Signature>[mscorlib] System.Exception</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Exception</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Report</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Report</Name>
                  <Signature>string get_Report ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Report</Name>
                  <Signature>string get_Report ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Report</Name>
                  <Signature>void set_Report (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Report</Name>
                  <Signature>void set_Report (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateReport</Name>
                  <Signature>void CreateReport ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SendAsMail</Name>
                  <Signature>void SendAsMail ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SendAsMail</Name>
                  <Signature>void SendAsMail ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Report</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Report</Name>
                  <Signature>string Report</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.ExceptionInfoForm</Name>
              <NewName>TestAutomationFX.Core.ExceptionInfoForm</NewName>
              <Field>
                <Original>
                  <Name>m_InfoException</Name>
                  <Signature>[mscorlib] System.Exception</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Exception</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ErrorReport</Name>
                  <Signature>TestAutomationFX.Core.ErrorReport</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.ErrorReport</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_InShowExceptionInfo</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Banner</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ExceptionTypeLabel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ExceptionMessageLabel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ReportTextBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ButtonOK</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_SendMail</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CopyReportButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_InfoException</Name>
                  <Signature>[mscorlib] System.Exception get_InfoException ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_InfoException</Name>
                  <Signature>[mscorlib] System.Exception get_InfoException ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_InfoException</Name>
                  <Signature>void set_InfoException ([mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_InfoException</Name>
                  <Signature>void set_InfoException ([mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowExceptionInfo</Name>
                  <Signature>static void ShowExceptionInfo ([mscorlib] System.Exception, [System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ShowExceptionInfo</Name>
                  <Signature>static void ShowExceptionInfo ([mscorlib] System.Exception, [System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnSendMailClick</Name>
                  <Signature>void OnSendMailClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCopyReportButtonClick</Name>
                  <Signature>void OnCopyReportButtonClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>InfoException</Name>
                  <Signature>[mscorlib] System.Exception</Signature>
                </Original>
                <Obfuscated>
                  <Name>InfoException</Name>
                  <Signature>[mscorlib] System.Exception InfoException</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Exceptions.TestException</Name>
              <NewName>TestAutomationFX.Exceptions.TestException</NewName>
              <Field>
                <Original>
                  <Name>ScreenShotTestFailureFileName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;LogData&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogData</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogData</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, TestAutomationFX.Core.Logging.LogData, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, TestAutomationFX.Core.Logging.LogData, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoSaveScreenShot</Name>
                  <Signature>void DoSaveScreenShot ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScreenShotFileName</Name>
                  <Signature>string get_ScreenShotFileName ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ScreenShotFileName</Name>
                  <Signature>string get_ScreenShotFileName ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SaveScreenShot</Name>
                  <Signature>bool get_SaveScreenShot ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SaveScreenShot</Name>
                  <Signature>bool get_SaveScreenShot ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LogData</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogData get_LogData ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LogData</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogData get_LogData ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LogData</Name>
                  <Signature>void set_LogData (TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_LogData</Name>
                  <Signature>void set_LogData (TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ScreenShotFileName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ScreenShotFileName</Name>
                  <Signature>string ScreenShotFileName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SaveScreenShot</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>SaveScreenShot</Name>
                  <Signature>bool SaveScreenShot</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LogData</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogData</Signature>
                </Original>
                <Obfuscated>
                  <Name>LogData</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogData LogData</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Exceptions.KeyEventParseException</Name>
              <NewName>TestAutomationFX.Core.Exceptions.KeyEventParseException</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Exceptions.WindowParentChainException</Name>
              <NewName>TestAutomationFX.Core.Exceptions.WindowParentChainException</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.FileBrowseControl</Name>
              <NewName>TestAutomationFX.Core.FileBrowseControl</NewName>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Browse</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_FilePath</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_OpenFileDialog</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.OpenFileDialog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.OpenFileDialog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnBrowseClick</Name>
                  <Signature>void OnBrowseClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_FilePath</Name>
                  <Signature>string get_FilePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_FilePath</Name>
                  <Signature>string get_FilePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_FilePath</Name>
                  <Signature>void set_FilePath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_FilePath</Name>
                  <Signature>void set_FilePath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>FilePath</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>FilePath</Name>
                  <Signature>string FilePath</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.FileNameHelper</Name>
              <NewName>TestAutomationFX.Core.FileNameHelper</NewName>
              <Method>
                <Original>
                  <Name>GetFilenameWithDateTime</Name>
                  <Signature>static string GetFilenameWithDateTime (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetFilenameWithDateTime</Name>
                  <Signature>static string GetFilenameWithDateTime (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReplaceIllegalCharacters</Name>
                  <Signature>static string ReplaceIllegalCharacters (string, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a (string, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetFullPathToSubFolderFile</Name>
                  <Signature>static string GetFullPathToSubFolderFile (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetFullPathToSubFolderFile</Name>
                  <Signature>static string GetFullPathToSubFolderFile (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.FormBase</Name>
              <NewName>TestAutomationFX.Core.FormBase</NewName>
              <Field>
                <Original>
                  <Name>m_PictureBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InternalInitializeComponent</Name>
                  <Signature>void InternalInitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Forms.AboutForm</Name>
              <NewName>n</NewName>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>tableLayoutPanel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TableLayoutPanel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TableLayoutPanel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>labelProductName</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>labelVersion</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>labelCopyright</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>labelCompanyName</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>okButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>pictureBox1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TAFXLabel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AssemblyTitle</Name>
                  <Signature>string get_AssemblyTitle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AssemblyVersion</Name>
                  <Signature>string get_AssemblyVersion ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string b ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AssemblyDescription</Name>
                  <Signature>string get_AssemblyDescription ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string c ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AssemblyProduct</Name>
                  <Signature>string get_AssemblyProduct ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>string d ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddBetaInfo</Name>
                  <Signature>string AddBetaInfo (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AssemblyLicenseMode</Name>
                  <Signature>string get_AssemblyLicenseMode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>string e ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AssemblyCopyright</Name>
                  <Signature>string get_AssemblyCopyright ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>string f ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AssemblyCompany</Name>
                  <Signature>string get_AssemblyCompany ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>string g ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>void h ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>AssemblyTitle</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AssemblyVersion</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AssemblyDescription</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AssemblyProduct</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AssemblyLicenseMode</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AssemblyCopyright</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AssemblyCompany</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Forms.FormHelper</Name>
              <NewName>TestAutomationFX.Core.Forms.FormHelper</NewName>
              <Method>
                <Original>
                  <Name>MoveAwayFromPoint</Name>
                  <Signature>static [System.Drawing] System.Drawing.Point MoveAwayFromPoint ([System.Drawing] System.Drawing.Point, [System.Windows.Forms] System.Windows.Forms.Form)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MoveAwayFromPoint</Name>
                  <Signature>static [System.Drawing] System.Drawing.Point MoveAwayFromPoint ([System.Drawing] System.Drawing.Point, [System.Windows.Forms] System.Windows.Forms.Form)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.ImageComparer</Name>
              <NewName>TestAutomationFX.Core.ImageComparer</NewName>
              <Method>
                <Original>
                  <Name>FastCompare</Name>
                  <Signature>static TestAutomationFX.Core.ImageComparer/ImageCompareResult FastCompare ([System.Drawing] System.Drawing.Bitmap, [System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FastCompare</Name>
                  <Signature>static TestAutomationFX.Core.ImageComparer/ImageCompareResult FastCompare ([System.Drawing] System.Drawing.Bitmap, [System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SlowCompare</Name>
                  <Signature>static TestAutomationFX.Core.ImageComparer/ImageCompareResult SlowCompare ([System.Drawing] System.Drawing.Bitmap, [System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SlowCompare</Name>
                  <Signature>static TestAutomationFX.Core.ImageComparer/ImageCompareResult SlowCompare ([System.Drawing] System.Drawing.Bitmap, [System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Compare</Name>
                  <Signature>static bool Compare ([System.Drawing] System.Drawing.Bitmap, [System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Compare</Name>
                  <Signature>static bool Compare ([System.Drawing] System.Drawing.Bitmap, [System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AreEqual</Name>
                  <Signature>static bool AreEqual ([System.Drawing] System.Drawing.Bitmap, [System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AreEqual</Name>
                  <Signature>static bool AreEqual ([System.Drawing] System.Drawing.Bitmap, [System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <NestedType>
                <Name>ImageCompareResult</Name>
                <NewName>ImageCompareResult</NewName>
                <Field>
                  <Original>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>CompareOk</Name>
                    <Signature>TestAutomationFX.Core.ImageComparer/ImageCompareResult</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>CompareOk</Name>
                    <Signature>TestAutomationFX.Core.ImageComparer/ImageCompareResult</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>PixelMismatch</Name>
                    <Signature>TestAutomationFX.Core.ImageComparer/ImageCompareResult</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>PixelMismatch</Name>
                    <Signature>TestAutomationFX.Core.ImageComparer/ImageCompareResult</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>SizeMismatch</Name>
                    <Signature>TestAutomationFX.Core.ImageComparer/ImageCompareResult</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>SizeMismatch</Name>
                    <Signature>TestAutomationFX.Core.ImageComparer/ImageCompareResult</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.ImageDiffViewer</Name>
              <NewName>TestAutomationFX.Core.ImageDiffViewer</NewName>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>panel1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>panel2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>tableLayoutPanel1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TableLayoutPanel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TableLayoutPanel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ImageViewer1</Name>
                  <Signature>TestAutomationFX.Core.ImageViewerControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.ImageViewerControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ImageViewer2</Name>
                  <Signature>TestAutomationFX.Core.ImageViewerControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Core.ImageViewerControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>button1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowImages</Name>
                  <Signature>static void ShowImages ([System.Drawing] System.Drawing.Image, [System.Drawing] System.Drawing.Image, [System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ShowImages</Name>
                  <Signature>static void ShowImages ([System.Drawing] System.Drawing.Image, [System.Drawing] System.Drawing.Image, [System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnShown</Name>
                  <Signature>void OnShown (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.ImageViewerControl</Name>
              <NewName>TestAutomationFX.Core.ImageViewerControl</NewName>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PictureBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>panel1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ImageDescription</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>panel2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image get_Image ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image get_Image ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Image</Name>
                  <Signature>void set_Image ([System.Drawing] System.Drawing.Image)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Image</Name>
                  <Signature>void set_Image ([System.Drawing] System.Drawing.Image)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ImageDescription</Name>
                  <Signature>string get_ImageDescription ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ImageDescription</Name>
                  <Signature>string get_ImageDescription ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ImageDescription</Name>
                  <Signature>void set_ImageDescription (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ImageDescription</Name>
                  <Signature>void set_ImageDescription (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                </Original>
                <Obfuscated>
                  <Name>Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image Image</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ImageDescription</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ImageDescription</Name>
                  <Signature>string ImageDescription</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.ScreenCapture</Name>
              <NewName>TestAutomationFX.Core.ScreenCapture</NewName>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>SaveScreenShot</Name>
                  <Signature>static void SaveScreenShot (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SaveScreenShot</Name>
                  <Signature>static void SaveScreenShot (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetScreenBitmap</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap GetScreenBitmap ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetScreenBitmap</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap GetScreenBitmap ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SaveScreenShot</Name>
                  <Signature>static void SaveScreenShot (string, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SaveScreenShot</Name>
                  <Signature>static void SaveScreenShot (string, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetScreenBitmap</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap GetScreenBitmap ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetScreenBitmap</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap GetScreenBitmap ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetWindowBitmap</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap GetWindowBitmap (native int, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetWindowBitmap</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap GetWindowBitmap (native int, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CopyFromWindow</Name>
                  <Signature>static void CopyFromWindow ([System.Drawing] System.Drawing.Graphics, native int, int32, int32, int32, int32, [System.Drawing] System.Drawing.Size, [System.Drawing] System.Drawing.CopyPixelOperation)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CopyFromWindow</Name>
                  <Signature>static void CopyFromWindow ([System.Drawing] System.Drawing.Graphics, native int, int32, int32, int32, int32, [System.Drawing] System.Drawing.Size, [System.Drawing] System.Drawing.CopyPixelOperation)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.HardCoded</Name>
              <NewName>o</NewName>
              <Method>
                <Original>
                  <Name>IsForbiddenName</Name>
                  <Signature>static bool IsForbiddenName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsDataGridView</Name>
                  <Signature>static bool IsDataGridView (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IndentString</Name>
                  <Signature>static string get_IndentString ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RecordInjectedKeyboardEvents</Name>
                  <Signature>static bool get_RecordInjectedKeyboardEvents ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsUltraExpandableGroupBox</Name>
                  <Signature>static bool IsUltraExpandableGroupBox (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static bool b (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsUltraTextEditor</Name>
                  <Signature>static bool IsUltraTextEditor (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>static bool c (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsUltraGrid</Name>
                  <Signature>static bool IsUltraGrid (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>static bool d (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsUltraTree</Name>
                  <Signature>static bool IsUltraTree (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>static bool e (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsWindowControlOfType</Name>
                  <Signature>static bool IsWindowControlOfType (TestAutomationFX.Core.WindowController, string[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (TestAutomationFX.Core.WindowController, string[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsTypeOrSubTypeOf</Name>
                  <Signature>static bool IsTypeOrSubTypeOf ([mscorlib] System.Type, string[])</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a ([mscorlib] System.Type, string[])</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetControlTypeFromWindow</Name>
                  <Signature>static [mscorlib] System.Type GetControlTypeFromWindow (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.Type a (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsTypeOf</Name>
                  <Signature>static bool IsTypeOf ([mscorlib] System.Type, string[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static bool b ([mscorlib] System.Type, string[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>IndentString</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RecordInjectedKeyboardEvents</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Hooks.KeyboardHookEventArgs</Name>
              <NewName>TestAutomationFX.Core.Hooks.KeyboardHookEventArgs</NewName>
              <Field>
                <Original>
                  <Name>LLKHF_INJECTED</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>LLKHF_ALTDOWN</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>LLKHF_CTRLDOWN</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Handled&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;VkCode&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ScanCode&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Flags&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Injected&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;AltDown&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;CtrlDown&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;WParam&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (int32, int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (int32, int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Handled</Name>
                  <Signature>bool get_Handled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Handled</Name>
                  <Signature>bool get_Handled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Handled</Name>
                  <Signature>void set_Handled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Handled</Name>
                  <Signature>void set_Handled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_VkCode</Name>
                  <Signature>int32 get_VkCode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_VkCode</Name>
                  <Signature>int32 get_VkCode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_VkCode</Name>
                  <Signature>void set_VkCode (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_VkCode</Name>
                  <Signature>void set_VkCode (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScanCode</Name>
                  <Signature>int32 get_ScanCode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ScanCode</Name>
                  <Signature>int32 get_ScanCode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ScanCode</Name>
                  <Signature>void set_ScanCode (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ScanCode</Name>
                  <Signature>void set_ScanCode (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Flags</Name>
                  <Signature>int32 get_Flags ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Flags</Name>
                  <Signature>int32 get_Flags ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Flags</Name>
                  <Signature>void set_Flags (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Flags</Name>
                  <Signature>void set_Flags (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Injected</Name>
                  <Signature>bool get_Injected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Injected</Name>
                  <Signature>bool get_Injected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Injected</Name>
                  <Signature>void set_Injected (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Injected</Name>
                  <Signature>void set_Injected (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AltDown</Name>
                  <Signature>bool get_AltDown ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AltDown</Name>
                  <Signature>bool get_AltDown ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AltDown</Name>
                  <Signature>void set_AltDown (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AltDown</Name>
                  <Signature>void set_AltDown (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CtrlDown</Name>
                  <Signature>bool get_CtrlDown ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CtrlDown</Name>
                  <Signature>bool get_CtrlDown ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CtrlDown</Name>
                  <Signature>void set_CtrlDown (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CtrlDown</Name>
                  <Signature>void set_CtrlDown (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_WParam</Name>
                  <Signature>int32 get_WParam ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_WParam</Name>
                  <Signature>int32 get_WParam ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_WParam</Name>
                  <Signature>void set_WParam (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_WParam</Name>
                  <Signature>void set_WParam (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Handled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Handled</Name>
                  <Signature>bool Handled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>VkCode</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>VkCode</Name>
                  <Signature>int32 VkCode</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ScanCode</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>ScanCode</Name>
                  <Signature>int32 ScanCode</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Flags</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Flags</Name>
                  <Signature>int32 Flags</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Injected</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Injected</Name>
                  <Signature>bool Injected</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AltDown</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>AltDown</Name>
                  <Signature>bool AltDown</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CtrlDown</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>CtrlDown</Name>
                  <Signature>bool CtrlDown</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>WParam</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>WParam</Name>
                  <Signature>int32 WParam</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Hooks.KeyPressEventArgsEx</Name>
              <NewName>TestAutomationFX.Core.Hooks.KeyPressEventArgsEx</NewName>
              <Field>
                <Original>
                  <Name>&lt;VirtualKey&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Modifiers&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Injected&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (char, TestAutomationFX.Core.VirtualKeys, TestAutomationFX.Core.KeyModifiers, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (char, TestAutomationFX.Core.VirtualKeys, TestAutomationFX.Core.KeyModifiers, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_VirtualKey</Name>
                  <Signature>void set_VirtualKey (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_VirtualKey</Name>
                  <Signature>void set_VirtualKey (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_VirtualKey</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys get_VirtualKey ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_VirtualKey</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys get_VirtualKey ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Modifiers</Name>
                  <Signature>void set_Modifiers (TestAutomationFX.Core.KeyModifiers)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Modifiers</Name>
                  <Signature>void set_Modifiers (TestAutomationFX.Core.KeyModifiers)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Modifiers</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers get_Modifiers ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Modifiers</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers get_Modifiers ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Injected</Name>
                  <Signature>bool get_Injected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Injected</Name>
                  <Signature>bool get_Injected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Injected</Name>
                  <Signature>void set_Injected (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Injected</Name>
                  <Signature>void set_Injected (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>VirtualKey</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                </Original>
                <Obfuscated>
                  <Name>VirtualKey</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys VirtualKey</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Modifiers</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                </Original>
                <Obfuscated>
                  <Name>Modifiers</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers Modifiers</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Injected</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Injected</Name>
                  <Signature>bool Injected</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Hooks.MouseEventType</Name>
              <NewName>TestAutomationFX.Core.Hooks.MouseEventType</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Move</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Move</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Down</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Down</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Up</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Up</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Hooks.MouseHookEventArgs</Name>
              <NewName>TestAutomationFX.Core.Hooks.MouseHookEventArgs</NewName>
              <Field>
                <Original>
                  <Name>&lt;MouseEventType&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Location&gt;k__BackingField</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;MouseButton&gt;k__BackingField</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Injected&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Handled&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_MouseEventType</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType get_MouseEventType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MouseEventType</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType get_MouseEventType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MouseEventType</Name>
                  <Signature>void set_MouseEventType (TestAutomationFX.Core.Hooks.MouseEventType)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MouseEventType</Name>
                  <Signature>void set_MouseEventType (TestAutomationFX.Core.Hooks.MouseEventType)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Location</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_Location ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Location</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_Location ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Location</Name>
                  <Signature>void set_Location ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Location</Name>
                  <Signature>void set_Location ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MouseButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons get_MouseButton ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MouseButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons get_MouseButton ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MouseButton</Name>
                  <Signature>void set_MouseButton ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MouseButton</Name>
                  <Signature>void set_MouseButton ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Injected</Name>
                  <Signature>bool get_Injected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Injected</Name>
                  <Signature>bool get_Injected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Injected</Name>
                  <Signature>void set_Injected (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Injected</Name>
                  <Signature>void set_Injected (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Handled</Name>
                  <Signature>bool get_Handled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Handled</Name>
                  <Signature>bool get_Handled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Handled</Name>
                  <Signature>void set_Handled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Handled</Name>
                  <Signature>void set_Handled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.Hooks.MouseEventType, [System.Drawing] System.Drawing.Point, [System.Windows.Forms] System.Windows.Forms.MouseButtons, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.Hooks.MouseEventType, [System.Drawing] System.Drawing.Point, [System.Windows.Forms] System.Windows.Forms.MouseButtons, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>MouseEventType</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType</Signature>
                </Original>
                <Obfuscated>
                  <Name>MouseEventType</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType MouseEventType</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Location</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                </Original>
                <Obfuscated>
                  <Name>Location</Name>
                  <Signature>[System.Drawing] System.Drawing.Point Location</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MouseButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons</Signature>
                </Original>
                <Obfuscated>
                  <Name>MouseButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons MouseButton</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Injected</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Injected</Name>
                  <Signature>bool Injected</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Handled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Handled</Name>
                  <Signature>bool Handled</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.InputBlocker</Name>
              <NewName>TestAutomationFX.Core.InputBlocker</NewName>
              <Field>
                <Original>
                  <Name>m_UserActivityHook</Name>
                  <Signature>TestAutomationFX.Core.Hooks.UserActivityHook</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Hooks.UserActivityHook</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_BlockInput</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>InputBlocked</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>InputUnblocked</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>InputBlockedCanceled</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>add_InputBlocked</Name>
                  <Signature>static void add_InputBlocked ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_InputBlocked</Name>
                  <Signature>static void add_InputBlocked ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_InputBlocked</Name>
                  <Signature>static void remove_InputBlocked ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_InputBlocked</Name>
                  <Signature>static void remove_InputBlocked ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_InputUnblocked</Name>
                  <Signature>static void add_InputUnblocked ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_InputUnblocked</Name>
                  <Signature>static void add_InputUnblocked ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_InputUnblocked</Name>
                  <Signature>static void remove_InputUnblocked ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_InputUnblocked</Name>
                  <Signature>static void remove_InputUnblocked ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_InputBlockedCanceled</Name>
                  <Signature>static void add_InputBlockedCanceled ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_InputBlockedCanceled</Name>
                  <Signature>static void add_InputBlockedCanceled ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_InputBlockedCanceled</Name>
                  <Signature>static void remove_InputBlockedCanceled ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_InputBlockedCanceled</Name>
                  <Signature>static void remove_InputBlockedCanceled ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ActivateUserActivityHook</Name>
                  <Signature>static void ActivateUserActivityHook ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnKeyboardHookEvent</Name>
                  <Signature>static void OnKeyboardHookEvent (object, TestAutomationFX.Core.Hooks.KeyboardHookEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (object, TestAutomationFX.Core.Hooks.KeyboardHookEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnMouseHookEvent</Name>
                  <Signature>static void OnMouseHookEvent (object, TestAutomationFX.Core.Hooks.MouseHookEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (object, TestAutomationFX.Core.Hooks.MouseHookEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnUserActivityHookKeyPress</Name>
                  <Signature>static void OnUserActivityHookKeyPress (object, TestAutomationFX.Core.Hooks.KeyPressEventArgsEx)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (object, TestAutomationFX.Core.Hooks.KeyPressEventArgsEx)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnUserActivityHookKeyUp</Name>
                  <Signature>static void OnUserActivityHookKeyUp (object, [System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (object, [System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnUserActivityHookKeyDown</Name>
                  <Signature>static void OnUserActivityHookKeyDown (object, [System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static void b (object, [System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoBlockInput</Name>
                  <Signature>static bool DoBlockInput ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_BlockInput</Name>
                  <Signature>static void set_BlockInput (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_BlockInput</Name>
                  <Signature>static void set_BlockInput (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_BlockInput</Name>
                  <Signature>static bool get_BlockInput ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_BlockInput</Name>
                  <Signature>static bool get_BlockInput ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireInputBlocked</Name>
                  <Signature>static void FireInputBlocked ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireInputUnblocked</Name>
                  <Signature>static void FireInputUnblocked ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static void b ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireInputBlockedCanceled</Name>
                  <Signature>static void FireInputBlockedCanceled ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>static void c ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>BlockInput</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>BlockInput</Name>
                  <Signature>bool BlockInput</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>InputBlocked</Name>
                </Original>
                <Obfuscated>
                  <Name>InputBlocked</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>InputUnblocked</Name>
                </Original>
                <Obfuscated>
                  <Name>InputUnblocked</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>InputBlockedCanceled</Name>
                </Original>
                <Obfuscated>
                  <Name>InputBlockedCanceled</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.InputBlockerHelper</Name>
              <NewName>TestAutomationFX.Core.InputBlockerHelper</NewName>
              <Field>
                <Original>
                  <Name>m_PreviousBlockInputState</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>BlockInput</Name>
                  <Signature>static [mscorlib] System.IDisposable BlockInput (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>BlockInput</Name>
                  <Signature>static [mscorlib] System.IDisposable BlockInput (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.IDisposable.Dispose</Name>
                  <Signature>void System.IDisposable.Dispose ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.IDisposable.Dispose</Name>
                  <Signature>void System.IDisposable.Dispose ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.ITestable</Name>
              <NewName>TestAutomationFX.Core.ITestable</NewName>
              <Method>
                <Original>
                  <Name>RunTest</Name>
                  <Signature>void RunTest ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RunTest</Name>
                  <Signature>void RunTest ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Keyboard</Name>
              <NewName>TestAutomationFX.Core.Keyboard</NewName>
              <Field>
                <Original>
                  <Name>&lt;KeyboardEventDelay&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_KeyboardEventDelay</Name>
                  <Signature>static int32 get_KeyboardEventDelay ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_KeyboardEventDelay</Name>
                  <Signature>static int32 get_KeyboardEventDelay ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_KeyboardEventDelay</Name>
                  <Signature>static void set_KeyboardEventDelay (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_KeyboardEventDelay</Name>
                  <Signature>static void set_KeyboardEventDelay (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeybdEvent</Name>
                  <Signature>static void KeybdEvent (TestAutomationFX.Core.VirtualKeys, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (TestAutomationFX.Core.VirtualKeys, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetVirtualKeyCode</Name>
                  <Signature>static TestAutomationFX.Core.VirtualKeys GetVirtualKeyCode (char)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static TestAutomationFX.Core.VirtualKeys a (char)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetVirtualKeyCode</Name>
                  <Signature>static TestAutomationFX.Core.VirtualKeys GetVirtualKeyCode (char, [out] TestAutomationFX.Core.KeyModifiers&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetVirtualKeyCode</Name>
                  <Signature>static TestAutomationFX.Core.VirtualKeys GetVirtualKeyCode (char, [out] TestAutomationFX.Core.KeyModifiers&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetVirtualKeyCodeInternal</Name>
                  <Signature>static TestAutomationFX.Core.VirtualKeys GetVirtualKeyCodeInternal (char, [out] TestAutomationFX.Core.KeyModifiers&amp;, bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static TestAutomationFX.Core.VirtualKeys a (char, [out] TestAutomationFX.Core.KeyModifiers&amp;, bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyDown</Name>
                  <Signature>static void KeyDown (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyDown</Name>
                  <Signature>static void KeyDown (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyUp</Name>
                  <Signature>static void KeyUp (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyUp</Name>
                  <Signature>static void KeyUp (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyPress</Name>
                  <Signature>static void KeyPress (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyPress</Name>
                  <Signature>static void KeyPress (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyPress</Name>
                  <Signature>static void KeyPress (TestAutomationFX.Core.VirtualKeys, TestAutomationFX.Core.KeyModifiers)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyPress</Name>
                  <Signature>static void KeyPress (TestAutomationFX.Core.VirtualKeys, TestAutomationFX.Core.KeyModifiers)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyPress</Name>
                  <Signature>static void KeyPress (char, TestAutomationFX.Core.KeyModifiers)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyPress</Name>
                  <Signature>static void KeyPress (char, TestAutomationFX.Core.KeyModifiers)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyPress</Name>
                  <Signature>static void KeyPress (char)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyPress</Name>
                  <Signature>static void KeyPress (char)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SendKeys</Name>
                  <Signature>static void SendKeys (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SendKeys</Name>
                  <Signature>static void SendKeys (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsTestTerminated</Name>
                  <Signature>static bool get_IsTestTerminated ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>KeyboardEventDelay</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>KeyboardEventDelay</Name>
                  <Signature>int32 KeyboardEventDelay</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsTestTerminated</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.KeyboardEvent</Name>
              <NewName>TestAutomationFX.Core.KeyboardEvent</NewName>
              <Field>
                <Original>
                  <Name>&lt;VirtualKey&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;EventType&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.KeyBoardEventType</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.KeyBoardEventType</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;KeyModifier&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.VirtualKeys, TestAutomationFX.Core.KeyBoardEventType)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.VirtualKeys, TestAutomationFX.Core.KeyBoardEventType)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.VirtualKeys, TestAutomationFX.Core.KeyBoardEventType, TestAutomationFX.Core.KeyModifiers)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.VirtualKeys, TestAutomationFX.Core.KeyBoardEventType, TestAutomationFX.Core.KeyModifiers)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_VirtualKey</Name>
                  <Signature>void set_VirtualKey (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_VirtualKey</Name>
                  <Signature>void set_VirtualKey (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_VirtualKey</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys get_VirtualKey ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_VirtualKey</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys get_VirtualKey ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_EventType</Name>
                  <Signature>void set_EventType (TestAutomationFX.Core.KeyBoardEventType)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_EventType</Name>
                  <Signature>void set_EventType (TestAutomationFX.Core.KeyBoardEventType)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_EventType</Name>
                  <Signature>TestAutomationFX.Core.KeyBoardEventType get_EventType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_EventType</Name>
                  <Signature>TestAutomationFX.Core.KeyBoardEventType get_EventType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_KeyModifier</Name>
                  <Signature>void set_KeyModifier (TestAutomationFX.Core.KeyModifiers)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_KeyModifier</Name>
                  <Signature>void set_KeyModifier (TestAutomationFX.Core.KeyModifiers)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_KeyModifier</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers get_KeyModifier ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_KeyModifier</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers get_KeyModifier ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsShiftDown</Name>
                  <Signature>bool get_IsShiftDown ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsShiftDown</Name>
                  <Signature>bool get_IsShiftDown ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsCtrlDown</Name>
                  <Signature>bool get_IsCtrlDown ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsCtrlDown</Name>
                  <Signature>bool get_IsCtrlDown ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsWinDown</Name>
                  <Signature>bool get_IsWinDown ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsWinDown</Name>
                  <Signature>bool get_IsWinDown ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsAltDown</Name>
                  <Signature>bool get_IsAltDown ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsAltDown</Name>
                  <Signature>bool get_IsAltDown ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>VirtualKey</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                </Original>
                <Obfuscated>
                  <Name>VirtualKey</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys VirtualKey</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>EventType</Name>
                  <Signature>TestAutomationFX.Core.KeyBoardEventType</Signature>
                </Original>
                <Obfuscated>
                  <Name>EventType</Name>
                  <Signature>TestAutomationFX.Core.KeyBoardEventType EventType</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>KeyModifier</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                </Original>
                <Obfuscated>
                  <Name>KeyModifier</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers KeyModifier</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsShiftDown</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsShiftDown</Name>
                  <Signature>bool IsShiftDown</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsCtrlDown</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsCtrlDown</Name>
                  <Signature>bool IsCtrlDown</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsWinDown</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsWinDown</Name>
                  <Signature>bool IsWinDown</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsAltDown</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsAltDown</Name>
                  <Signature>bool IsAltDown</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.KeyBoardEventType</Name>
              <NewName>TestAutomationFX.Core.KeyBoardEventType</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Down</Name>
                  <Signature>TestAutomationFX.Core.KeyBoardEventType</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Down</Name>
                  <Signature>TestAutomationFX.Core.KeyBoardEventType</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Up</Name>
                  <Signature>TestAutomationFX.Core.KeyBoardEventType</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Up</Name>
                  <Signature>TestAutomationFX.Core.KeyBoardEventType</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Press</Name>
                  <Signature>TestAutomationFX.Core.KeyBoardEventType</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Press</Name>
                  <Signature>TestAutomationFX.Core.KeyBoardEventType</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.KeyboardEventParser</Name>
              <NewName>TestAutomationFX.Core.KeyboardEventParser</NewName>
              <Field>
                <Original>
                  <Name>StartKeyToken</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>EndKeyToken</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>CtrlToken</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>AltToken</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WinToken</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ShiftToken</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>LowestCharacterCodeAllowedAsPlainText</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>IllegalUseOfTokenMessage</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ShiftedCharacters</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; TestAutomationFX.Core.VirtualKeys, char &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; TestAutomationFX.Core.VirtualKeys, char &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CtrlAltedCharacters</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; TestAutomationFX.Core.VirtualKeys, char &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; TestAutomationFX.Core.VirtualKeys, char &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupCharactersLists</Name>
                  <Signature>static void SetupCharactersLists ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetKeyboardEventsFromString</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.KeyboardEvent &gt; GetKeyboardEventsFromString (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetKeyboardEventsFromString</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.KeyboardEvent &gt; GetKeyboardEventsFromString (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SplitKeyEventsString</Name>
                  <Signature>static [System] System.Collections.Specialized.StringCollection SplitKeyEventsString (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SplitKeyEventsString</Name>
                  <Signature>static [System] System.Collections.Specialized.StringCollection SplitKeyEventsString (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetKeyboardEventFromString</Name>
                  <Signature>static TestAutomationFX.Core.KeyboardEvent GetKeyboardEventFromString (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static TestAutomationFX.Core.KeyboardEvent a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsSimpleKey</Name>
                  <Signature>static bool IsSimpleKey (string, TestAutomationFX.Core.KeyModifiers)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (string, TestAutomationFX.Core.KeyModifiers)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HandleModifiers</Name>
                  <Signature>static void HandleModifiers ([out] string&amp;, [out] TestAutomationFX.Core.KeyModifiers&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ([out] string&amp;, [out] TestAutomationFX.Core.KeyModifiers&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetKeyBoardEventsAsString</Name>
                  <Signature>static string GetKeyBoardEventsAsString ([mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.KeyboardEvent &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetKeyBoardEventsAsString</Name>
                  <Signature>static string GetKeyBoardEventsAsString ([mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.KeyboardEvent &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetStringFromKeyEvent</Name>
                  <Signature>static string GetStringFromKeyEvent (TestAutomationFX.Core.KeyboardEvent)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetStringFromKeyEvent</Name>
                  <Signature>static string GetStringFromKeyEvent (TestAutomationFX.Core.KeyboardEvent)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HandleBrackets</Name>
                  <Signature>static void HandleBrackets ([out] string&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ([out] string&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCharacterFromVirtualKey</Name>
                  <Signature>static char GetCharacterFromVirtualKey (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static char a (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EmbraceKeyTextWithTokens</Name>
                  <Signature>static string EmbraceKeyTextWithTokens (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.CustomLicense</Name>
              <NewName>TestAutomationFX.Core.CustomLicense</NewName>
              <Field>
                <Original>
                  <Name>m_LicenseKey</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_IsLicensed</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LicenseKey</Name>
                  <Signature>string get_LicenseKey ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LicenseKey</Name>
                  <Signature>string get_LicenseKey ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsLicensed</Name>
                  <Signature>bool get_IsLicensed ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsLicensed</Name>
                  <Signature>bool get_IsLicensed ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>LicenseKey</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>LicenseKey</Name>
                  <Signature>string LicenseKey</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsLicensed</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsLicensed</Name>
                  <Signature>bool IsLicensed</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.CustomLicenseProvider</Name>
              <NewName>TestAutomationFX.Core.CustomLicenseProvider</NewName>
              <Method>
                <Original>
                  <Name>GetLicense</Name>
                  <Signature>[System] System.ComponentModel.License GetLicense ([System] System.ComponentModel.LicenseContext, [mscorlib] System.Type, object, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetLicense</Name>
                  <Signature>[System] System.ComponentModel.License GetLicense ([System] System.ComponentModel.LicenseContext, [mscorlib] System.Type, object, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRuntimeLicense</Name>
                  <Signature>string GetRuntimeLicense ([System] System.ComponentModel.LicenseContext, [mscorlib] System.Type)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRuntimeLicense</Name>
                  <Signature>string GetRuntimeLicense ([System] System.ComponentModel.LicenseContext, [mscorlib] System.Type)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetDesignTimeLicenseKey</Name>
                  <Signature>string GetDesignTimeLicenseKey ([mscorlib] System.Type)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetDesignTimeLicenseKey</Name>
                  <Signature>string GetDesignTimeLicenseKey ([mscorlib] System.Type)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateLicense</Name>
                  <Signature>[System] System.ComponentModel.License CreateLicense (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateLicense</Name>
                  <Signature>[System] System.ComponentModel.License CreateLicense (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.LicenseMode</Name>
              <NewName>TestAutomationFX.Core.LicenseMode</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Unknown</Name>
                  <Signature>TestAutomationFX.Core.LicenseMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Unknown</Name>
                  <Signature>TestAutomationFX.Core.LicenseMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Free</Name>
                  <Signature>TestAutomationFX.Core.LicenseMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Free</Name>
                  <Signature>TestAutomationFX.Core.LicenseMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Licensed</Name>
                  <Signature>TestAutomationFX.Core.LicenseMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Licensed</Name>
                  <Signature>TestAutomationFX.Core.LicenseMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.LicenseModeManager</Name>
              <NewName>p</NewName>
              <Field>
                <Original>
                  <Name>MaxAllowedActionsInFreeVersion</Name>
                  <Signature>int32</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MaxAllowedRecordedActionsInFreeVersion</Name>
                  <Signature>int32</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_LicenseMode</Name>
                  <Signature>TestAutomationFX.Core.LicenseMode</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.LicenseMode</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_License</Name>
                  <Signature>TestAutomationFX.Core.CustomLicense</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.CustomLicense</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>ValidateLicense</Name>
                  <Signature>static void ValidateLicense ([mscorlib] System.Type, object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ([mscorlib] System.Type, object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LicensedMode</Name>
                  <Signature>static TestAutomationFX.Core.LicenseMode get_LicensedMode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static TestAutomationFX.Core.LicenseMode a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_License</Name>
                  <Signature>static TestAutomationFX.Core.CustomLicense get_License ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static TestAutomationFX.Core.CustomLicense a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CheckActionLimit</Name>
                  <Signature>static void CheckActionLimit (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsBetaModeAndDueDate</Name>
                  <Signature>static bool get_IsBetaModeAndDueDate ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CheckRecordedActionLimit</Name>
                  <Signature>static bool CheckRecordedActionLimit (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>LicensedMode</Name>
                  <Signature>TestAutomationFX.Core.LicenseMode</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.LicenseMode</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>License</Name>
                  <Signature>TestAutomationFX.Core.CustomLicense</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.CustomLicense</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsBetaModeAndDueDate</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.RegistryLicenseProvider</Name>
              <NewName>TestAutomationFX.Core.RegistryLicenseProvider</NewName>
              <Field>
                <Original>
                  <Name>m_RegistryKeyHandler</Name>
                  <Signature>TestAutomationFX.Core.RegistryKeyHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.RegistryKeyHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetDesignTimeLicenseKey</Name>
                  <Signature>string GetDesignTimeLicenseKey ([mscorlib] System.Type)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetDesignTimeLicenseKey</Name>
                  <Signature>string GetDesignTimeLicenseKey ([mscorlib] System.Type)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRuntimeLicense</Name>
                  <Signature>string GetRuntimeLicense ([System] System.ComponentModel.LicenseContext, [mscorlib] System.Type)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRuntimeLicense</Name>
                  <Signature>string GetRuntimeLicense ([System] System.ComponentModel.LicenseContext, [mscorlib] System.Type)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLicenseIfBuildWithBeta</Name>
                  <Signature>void GetLicenseIfBuildWithBeta ([out] string&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([out] string&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLicenseIfBuildWithFree</Name>
                  <Signature>void GetLicenseIfBuildWithFree ([out] string&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ([out] string&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetDesignTimeLicenseKeyFromRegistry</Name>
                  <Signature>static string GetDesignTimeLicenseKeyFromRegistry ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetDesignTimeLicenseKeyFromRegistry</Name>
                  <Signature>static string GetDesignTimeLicenseKeyFromRegistry ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProductIDFromRegistryKey</Name>
                  <Signature>static string GetProductIDFromRegistryKey ([mscorlib] Microsoft.Win32.RegistryKey)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a ([mscorlib] Microsoft.Win32.RegistryKey)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetDesignTimeLicenseKey</Name>
                  <Signature>static void SetDesignTimeLicenseKey (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetDesignTimeLicenseKey</Name>
                  <Signature>static void SetDesignTimeLicenseKey (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateLicense</Name>
                  <Signature>[System] System.ComponentModel.License CreateLicense (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateLicense</Name>
                  <Signature>[System] System.ComponentModel.License CreateLicense (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>VerifyLicense</Name>
                  <Signature>static bool VerifyLicense (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>A2I</Name>
                  <Signature>static int32 A2I (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static int32 a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.ITAFXLog</Name>
              <NewName>TestAutomationFX.ITAFXLog</NewName>
              <Method>
                <Original>
                  <Name>get_IsDebugEnabled</Name>
                  <Signature>bool get_IsDebugEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsDebugEnabled</Name>
                  <Signature>bool get_IsDebugEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsErrorEnabled</Name>
                  <Signature>bool get_IsErrorEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsErrorEnabled</Name>
                  <Signature>bool get_IsErrorEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsFatalEnabled</Name>
                  <Signature>bool get_IsFatalEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsFatalEnabled</Name>
                  <Signature>bool get_IsFatalEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsInfoEnabled</Name>
                  <Signature>bool get_IsInfoEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsInfoEnabled</Name>
                  <Signature>bool get_IsInfoEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsWarnEnabled</Name>
                  <Signature>bool get_IsWarnEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsWarnEnabled</Name>
                  <Signature>bool get_IsWarnEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Debug</Name>
                  <Signature>void Debug (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Debug</Name>
                  <Signature>void Debug (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Debug</Name>
                  <Signature>void Debug (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Debug</Name>
                  <Signature>void Debug (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DebugFormat</Name>
                  <Signature>void DebugFormat (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DebugFormat</Name>
                  <Signature>void DebugFormat (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DebugFormat</Name>
                  <Signature>void DebugFormat (string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DebugFormat</Name>
                  <Signature>void DebugFormat (string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DebugFormat</Name>
                  <Signature>void DebugFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DebugFormat</Name>
                  <Signature>void DebugFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DebugFormat</Name>
                  <Signature>void DebugFormat (string, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DebugFormat</Name>
                  <Signature>void DebugFormat (string, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DebugFormat</Name>
                  <Signature>void DebugFormat (string, object, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DebugFormat</Name>
                  <Signature>void DebugFormat (string, object, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Error</Name>
                  <Signature>void Error (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Error</Name>
                  <Signature>void Error (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Error</Name>
                  <Signature>void Error (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Error</Name>
                  <Signature>void Error (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ErrorFormat</Name>
                  <Signature>void ErrorFormat (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ErrorFormat</Name>
                  <Signature>void ErrorFormat (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ErrorFormat</Name>
                  <Signature>void ErrorFormat (string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ErrorFormat</Name>
                  <Signature>void ErrorFormat (string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ErrorFormat</Name>
                  <Signature>void ErrorFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ErrorFormat</Name>
                  <Signature>void ErrorFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ErrorFormat</Name>
                  <Signature>void ErrorFormat (string, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ErrorFormat</Name>
                  <Signature>void ErrorFormat (string, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ErrorFormat</Name>
                  <Signature>void ErrorFormat (string, object, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ErrorFormat</Name>
                  <Signature>void ErrorFormat (string, object, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Fatal</Name>
                  <Signature>void Fatal (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Fatal</Name>
                  <Signature>void Fatal (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Fatal</Name>
                  <Signature>void Fatal (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Fatal</Name>
                  <Signature>void Fatal (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FatalFormat</Name>
                  <Signature>void FatalFormat (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FatalFormat</Name>
                  <Signature>void FatalFormat (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FatalFormat</Name>
                  <Signature>void FatalFormat (string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FatalFormat</Name>
                  <Signature>void FatalFormat (string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FatalFormat</Name>
                  <Signature>void FatalFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FatalFormat</Name>
                  <Signature>void FatalFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FatalFormat</Name>
                  <Signature>void FatalFormat (string, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FatalFormat</Name>
                  <Signature>void FatalFormat (string, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FatalFormat</Name>
                  <Signature>void FatalFormat (string, object, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FatalFormat</Name>
                  <Signature>void FatalFormat (string, object, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Info</Name>
                  <Signature>void Info (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Info</Name>
                  <Signature>void Info (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Info</Name>
                  <Signature>void Info (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Info</Name>
                  <Signature>void Info (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InfoFormat</Name>
                  <Signature>void InfoFormat (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>InfoFormat</Name>
                  <Signature>void InfoFormat (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InfoFormat</Name>
                  <Signature>void InfoFormat (string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>InfoFormat</Name>
                  <Signature>void InfoFormat (string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InfoFormat</Name>
                  <Signature>void InfoFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>InfoFormat</Name>
                  <Signature>void InfoFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InfoFormat</Name>
                  <Signature>void InfoFormat (string, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>InfoFormat</Name>
                  <Signature>void InfoFormat (string, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InfoFormat</Name>
                  <Signature>void InfoFormat (string, object, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>InfoFormat</Name>
                  <Signature>void InfoFormat (string, object, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Warn</Name>
                  <Signature>void Warn (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Warn</Name>
                  <Signature>void Warn (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Warn</Name>
                  <Signature>void Warn (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Warn</Name>
                  <Signature>void Warn (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WarnFormat</Name>
                  <Signature>void WarnFormat (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WarnFormat</Name>
                  <Signature>void WarnFormat (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WarnFormat</Name>
                  <Signature>void WarnFormat (string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WarnFormat</Name>
                  <Signature>void WarnFormat (string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WarnFormat</Name>
                  <Signature>void WarnFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WarnFormat</Name>
                  <Signature>void WarnFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WarnFormat</Name>
                  <Signature>void WarnFormat (string, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WarnFormat</Name>
                  <Signature>void WarnFormat (string, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WarnFormat</Name>
                  <Signature>void WarnFormat (string, object, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WarnFormat</Name>
                  <Signature>void WarnFormat (string, object, object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>IsDebugEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsDebugEnabled</Name>
                  <Signature>bool IsDebugEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsErrorEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsErrorEnabled</Name>
                  <Signature>bool IsErrorEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsFatalEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsFatalEnabled</Name>
                  <Signature>bool IsFatalEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsInfoEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsInfoEnabled</Name>
                  <Signature>bool IsInfoEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsWarnEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsWarnEnabled</Name>
                  <Signature>bool IsWarnEnabled</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Log</Name>
              <NewName>TestAutomationFX.Core.Log</NewName>
              <Field>
                <Original>
                  <Name>m_LogLevelFilter</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Message</Name>
                  <Signature>static void Message (string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Message</Name>
                  <Signature>static void Message (string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Message</Name>
                  <Signature>static void Message (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Message</Name>
                  <Signature>static void Message (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Information</Name>
                  <Signature>static void Information (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Information</Name>
                  <Signature>static void Information (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Information</Name>
                  <Signature>static void Information (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Information</Name>
                  <Signature>static void Information (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Warning</Name>
                  <Signature>static void Warning (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Warning</Name>
                  <Signature>static void Warning (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Warning</Name>
                  <Signature>static void Warning (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Warning</Name>
                  <Signature>static void Warning (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Error</Name>
                  <Signature>static void Error (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Error</Name>
                  <Signature>static void Error (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Error</Name>
                  <Signature>static void Error (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Error</Name>
                  <Signature>static void Error (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Fatal</Name>
                  <Signature>static void Fatal (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Fatal</Name>
                  <Signature>static void Fatal (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Fatal</Name>
                  <Signature>static void Fatal (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Fatal</Name>
                  <Signature>static void Fatal (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Success</Name>
                  <Signature>static void Success (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Success</Name>
                  <Signature>static void Success (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Success</Name>
                  <Signature>static void Success (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Success</Name>
                  <Signature>static void Success (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Image</Name>
                  <Signature>static void Image ([System.Drawing] System.Drawing.Image, string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Image</Name>
                  <Signature>static void Image ([System.Drawing] System.Drawing.Image, string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ImageDifference</Name>
                  <Signature>static void ImageDifference ([System.Drawing] System.Drawing.Image, [System.Drawing] System.Drawing.Image, string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ImageDifference</Name>
                  <Signature>static void ImageDifference ([System.Drawing] System.Drawing.Image, [System.Drawing] System.Drawing.Image, string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LogToConsoleEnabled</Name>
                  <Signature>static bool get_LogToConsoleEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LogToConsoleEnabled</Name>
                  <Signature>static bool get_LogToConsoleEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LogToConsoleEnabled</Name>
                  <Signature>static void set_LogToConsoleEnabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_LogToConsoleEnabled</Name>
                  <Signature>static void set_LogToConsoleEnabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LogLevelFilter</Name>
                  <Signature>static TestAutomationFX.Core.LogLevel get_LogLevelFilter ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LogLevelFilter</Name>
                  <Signature>static TestAutomationFX.Core.LogLevel get_LogLevelFilter ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LogLevelFilter</Name>
                  <Signature>static void set_LogLevelFilter (TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_LogLevelFilter</Name>
                  <Signature>static void set_LogLevelFilter (TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>LogToConsoleEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>LogToConsoleEnabled</Name>
                  <Signature>bool LogToConsoleEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LogLevelFilter</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                </Original>
                <Obfuscated>
                  <Name>LogLevelFilter</Name>
                  <Signature>TestAutomationFX.Core.LogLevel LogLevelFilter</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Log4NetConfigurator</Name>
              <NewName>TestAutomationFX.Log4NetConfigurator</NewName>
              <Field>
                <Original>
                  <Name>LOG_PATTERN</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Layout</Name>
                  <Signature>[log4net] log4net.Layout.PatternLayout</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[log4net] log4net.Layout.PatternLayout</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_DefaultPattern</Name>
                  <Signature>string get_DefaultPattern ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DefaultPattern</Name>
                  <Signature>string get_DefaultPattern ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DefaultLayout</Name>
                  <Signature>[log4net] log4net.Layout.PatternLayout get_DefaultLayout ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DefaultLayout</Name>
                  <Signature>[log4net] log4net.Layout.PatternLayout get_DefaultLayout ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddAppender</Name>
                  <Signature>void AddAppender ([log4net] log4net.Appender.IAppender)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddAppender</Name>
                  <Signature>void AddAppender ([log4net] log4net.Appender.IAppender)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLogFilePath</Name>
                  <Signature>static string GetLogFilePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetLogFilePath</Name>
                  <Signature>static string GetLogFilePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Configure</Name>
                  <Signature>static void Configure ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Configure</Name>
                  <Signature>static void Configure ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>DefaultPattern</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>DefaultPattern</Name>
                  <Signature>string DefaultPattern</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DefaultLayout</Name>
                  <Signature>[log4net] log4net.Layout.PatternLayout</Signature>
                </Original>
                <Obfuscated>
                  <Name>DefaultLayout</Name>
                  <Signature>[log4net] log4net.Layout.PatternLayout DefaultLayout</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Log4NetInitializer</Name>
              <NewName>TestAutomationFX.Log4NetInitializer</NewName>
              <Field>
                <Original>
                  <Name>&lt;IsInitialized&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_IsInitialized</Name>
                  <Signature>static bool get_IsInitialized ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsInitialized</Name>
                  <Signature>static bool get_IsInitialized ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsInitialized</Name>
                  <Signature>static void set_IsInitialized (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsInitialized</Name>
                  <Signature>static void set_IsInitialized (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Initialize</Name>
                  <Signature>void Initialize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Initialize</Name>
                  <Signature>void Initialize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>IsInitialized</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsInitialized</Name>
                  <Signature>bool IsInitialized</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Logging.LogData</Name>
              <NewName>TestAutomationFX.Core.Logging.LogData</NewName>
              <Field>
                <Original>
                  <Name>&lt;LogFile&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogFile</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogFile</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>Save</Name>
                  <Signature>void Save ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Save</Name>
                  <Signature>void Save ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Load</Name>
                  <Signature>void Load ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Load</Name>
                  <Signature>void Load ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LogFile</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogFile get_LogFile ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogFile a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LogFile</Name>
                  <Signature>void set_LogFile (TestAutomationFX.Core.Logging.LogFile)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.Logging.LogFile)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Show</Name>
                  <Signature>void Show ([System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Show</Name>
                  <Signature>void Show ([System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CanShow</Name>
                  <Signature>bool CanShow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CanShow</Name>
                  <Signature>bool CanShow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SaveImage</Name>
                  <Signature>string SaveImage ([System.Drawing] System.Drawing.Image)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SaveImage</Name>
                  <Signature>string SaveImage ([System.Drawing] System.Drawing.Image)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLogDataFileName</Name>
                  <Signature>string GetLogDataFileName (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetLogDataFileName</Name>
                  <Signature>string GetLogDataFileName (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLogDataFilePath</Name>
                  <Signature>string GetLogDataFilePath (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetLogDataFilePath</Name>
                  <Signature>string GetLogDataFilePath (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetUniqueFilenameIndex</Name>
                  <Signature>int32 GetUniqueFilenameIndex ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetUniqueFilenameIndex</Name>
                  <Signature>int32 GetUniqueFilenameIndex ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>LogFile</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogFile</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogFile</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Logging.LogDataFilename</Name>
              <NewName>TestAutomationFX.Core.Logging.LogDataFilename</NewName>
              <Field>
                <Original>
                  <Name>&lt;Filename&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Filename</Name>
                  <Signature>string get_Filename ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Filename</Name>
                  <Signature>string get_Filename ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Filename</Name>
                  <Signature>void set_Filename (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Filename</Name>
                  <Signature>void set_Filename (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Filename</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Filename</Name>
                  <Signature>string Filename</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Logging.LogDataImage</Name>
              <NewName>TestAutomationFX.Core.Logging.LogDataImage</NewName>
              <Field>
                <Original>
                  <Name>&lt;ImageFilename&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Image&gt;k__BackingField</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_ImageFilename</Name>
                  <Signature>string get_ImageFilename ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ImageFilename</Name>
                  <Signature>string get_ImageFilename ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ImageFilename</Name>
                  <Signature>void set_ImageFilename (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ImageFilename</Name>
                  <Signature>void set_ImageFilename (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image get_Image ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image get_Image ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Image</Name>
                  <Signature>void set_Image ([System.Drawing] System.Drawing.Image)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Image</Name>
                  <Signature>void set_Image ([System.Drawing] System.Drawing.Image)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Show</Name>
                  <Signature>void Show ([System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Show</Name>
                  <Signature>void Show ([System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CanShow</Name>
                  <Signature>bool CanShow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CanShow</Name>
                  <Signature>bool CanShow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Save</Name>
                  <Signature>void Save ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Save</Name>
                  <Signature>void Save ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Load</Name>
                  <Signature>void Load ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Load</Name>
                  <Signature>void Load ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ImageFilename</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ImageFilename</Name>
                  <Signature>string ImageFilename</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                </Original>
                <Obfuscated>
                  <Name>Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image Image</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Logging.LogDataImageDiff</Name>
              <NewName>TestAutomationFX.Core.Logging.LogDataImageDiff</NewName>
              <Field>
                <Original>
                  <Name>&lt;ExpectedImageFilename&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ActualImageFilename&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ExpectedImage&gt;k__BackingField</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ActualImage&gt;k__BackingField</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_ExpectedImageFilename</Name>
                  <Signature>string get_ExpectedImageFilename ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ExpectedImageFilename</Name>
                  <Signature>string get_ExpectedImageFilename ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ExpectedImageFilename</Name>
                  <Signature>void set_ExpectedImageFilename (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ExpectedImageFilename</Name>
                  <Signature>void set_ExpectedImageFilename (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ActualImageFilename</Name>
                  <Signature>string get_ActualImageFilename ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ActualImageFilename</Name>
                  <Signature>string get_ActualImageFilename ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ActualImageFilename</Name>
                  <Signature>void set_ActualImageFilename (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ActualImageFilename</Name>
                  <Signature>void set_ActualImageFilename (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ExpectedImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Image get_ExpectedImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ExpectedImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Image get_ExpectedImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ExpectedImage</Name>
                  <Signature>void set_ExpectedImage ([System.Drawing] System.Drawing.Image)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ExpectedImage</Name>
                  <Signature>void set_ExpectedImage ([System.Drawing] System.Drawing.Image)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ActualImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Image get_ActualImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ActualImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Image get_ActualImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ActualImage</Name>
                  <Signature>void set_ActualImage ([System.Drawing] System.Drawing.Image)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ActualImage</Name>
                  <Signature>void set_ActualImage ([System.Drawing] System.Drawing.Image)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Show</Name>
                  <Signature>void Show ([System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Show</Name>
                  <Signature>void Show ([System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CanShow</Name>
                  <Signature>bool CanShow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CanShow</Name>
                  <Signature>bool CanShow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Save</Name>
                  <Signature>void Save ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Save</Name>
                  <Signature>void Save ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Load</Name>
                  <Signature>void Load ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Load</Name>
                  <Signature>void Load ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ExpectedImageFilename</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ExpectedImageFilename</Name>
                  <Signature>string ExpectedImageFilename</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ActualImageFilename</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ActualImageFilename</Name>
                  <Signature>string ActualImageFilename</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ExpectedImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                </Original>
                <Obfuscated>
                  <Name>ExpectedImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Image ExpectedImage</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ActualImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                </Original>
                <Obfuscated>
                  <Name>ActualImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Image ActualImage</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Logging.LogDataMessage</Name>
              <NewName>TestAutomationFX.Core.Logging.LogDataMessage</NewName>
              <Field>
                <Original>
                  <Name>&lt;MessageCaption&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Message&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_MessageCaption</Name>
                  <Signature>string get_MessageCaption ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MessageCaption</Name>
                  <Signature>string get_MessageCaption ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MessageCaption</Name>
                  <Signature>void set_MessageCaption (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MessageCaption</Name>
                  <Signature>void set_MessageCaption (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Message</Name>
                  <Signature>string get_Message ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Message</Name>
                  <Signature>string get_Message ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Message</Name>
                  <Signature>void set_Message (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Message</Name>
                  <Signature>void set_Message (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CanShow</Name>
                  <Signature>bool CanShow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CanShow</Name>
                  <Signature>bool CanShow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Show</Name>
                  <Signature>void Show ([System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Show</Name>
                  <Signature>void Show ([System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>MessageCaption</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>MessageCaption</Name>
                  <Signature>string MessageCaption</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Message</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Message</Name>
                  <Signature>string Message</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Logging.LogDataMessageForm</Name>
              <NewName>TestAutomationFX.Core.Logging.LogDataMessageForm</NewName>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Message</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CloseButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Message</Name>
                  <Signature>string get_Message ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Message</Name>
                  <Signature>string get_Message ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Message</Name>
                  <Signature>void set_Message (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Message</Name>
                  <Signature>void set_Message (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MessageCaption</Name>
                  <Signature>string get_MessageCaption ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MessageCaption</Name>
                  <Signature>string get_MessageCaption ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MessageCaption</Name>
                  <Signature>void set_MessageCaption (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MessageCaption</Name>
                  <Signature>void set_MessageCaption (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Message</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Message</Name>
                  <Signature>string Message</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MessageCaption</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>MessageCaption</Name>
                  <Signature>string MessageCaption</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Logging.LogEntry</Name>
              <NewName>TestAutomationFX.Core.Logging.LogEntry</NewName>
              <Field>
                <Original>
                  <Name>&lt;Time&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Message&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;LogLevel&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;LogData&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogData</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogData</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Time</Name>
                  <Signature>[mscorlib] System.DateTime get_Time ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Time</Name>
                  <Signature>[mscorlib] System.DateTime get_Time ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Time</Name>
                  <Signature>void set_Time ([mscorlib] System.DateTime)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Time</Name>
                  <Signature>void set_Time ([mscorlib] System.DateTime)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Message</Name>
                  <Signature>string get_Message ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Message</Name>
                  <Signature>string get_Message ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Message</Name>
                  <Signature>void set_Message (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Message</Name>
                  <Signature>void set_Message (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Level</Name>
                  <Signature>string get_Level ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Level</Name>
                  <Signature>string get_Level ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Level</Name>
                  <Signature>void set_Level (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Level</Name>
                  <Signature>void set_Level (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LogLevel</Name>
                  <Signature>TestAutomationFX.Core.LogLevel get_LogLevel ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.LogLevel a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LogLevel</Name>
                  <Signature>void set_LogLevel (TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LogData</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogData get_LogData ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LogData</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogData get_LogData ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LogData</Name>
                  <Signature>void set_LogData (TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_LogData</Name>
                  <Signature>void set_LogData (TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Time</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                </Original>
                <Obfuscated>
                  <Name>Time</Name>
                  <Signature>[mscorlib] System.DateTime Time</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Message</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Message</Name>
                  <Signature>string Message</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Level</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Level</Name>
                  <Signature>string Level</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LogLevel</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LogData</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogData</Signature>
                </Original>
                <Obfuscated>
                  <Name>LogData</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogData LogData</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Logging.LogFile</Name>
              <NewName>TestAutomationFX.Core.Logging.LogFile</NewName>
              <Field>
                <Original>
                  <Name>TAFXLogXsl</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_LogDataAssemblies</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Reflection.Assembly &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Reflection.Assembly &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_FileNameIndex</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;XslFilename&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Filename&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ProjectName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;TAFXVersion&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Date&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Time&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;LogEntries&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.Logging.LogEntry &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.Logging.LogEntry &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_XslFilename</Name>
                  <Signature>string get_XslFilename ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_XslFilename</Name>
                  <Signature>string get_XslFilename ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_XslFilename</Name>
                  <Signature>void set_XslFilename (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_XslFilename</Name>
                  <Signature>void set_XslFilename (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Filename</Name>
                  <Signature>string get_Filename ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Filename</Name>
                  <Signature>string get_Filename ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Filename</Name>
                  <Signature>void set_Filename (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Filename</Name>
                  <Signature>void set_Filename (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ProjectName</Name>
                  <Signature>string get_ProjectName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ProjectName</Name>
                  <Signature>string get_ProjectName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ProjectName</Name>
                  <Signature>void set_ProjectName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ProjectName</Name>
                  <Signature>void set_ProjectName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TAFXVersion</Name>
                  <Signature>string get_TAFXVersion ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TAFXVersion</Name>
                  <Signature>string get_TAFXVersion ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TAFXVersion</Name>
                  <Signature>void set_TAFXVersion (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TAFXVersion</Name>
                  <Signature>void set_TAFXVersion (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Date</Name>
                  <Signature>string get_Date ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Date</Name>
                  <Signature>string get_Date ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Date</Name>
                  <Signature>void set_Date (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Date</Name>
                  <Signature>void set_Date (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Time</Name>
                  <Signature>string get_Time ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Time</Name>
                  <Signature>string get_Time ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Time</Name>
                  <Signature>void set_Time (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Time</Name>
                  <Signature>void set_Time (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LogEntries</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.Logging.LogEntry &gt; get_LogEntries ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LogEntries</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.Logging.LogEntry &gt; get_LogEntries ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LogEntries</Name>
                  <Signature>void set_LogEntries ([mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.Logging.LogEntry &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_LogEntries</Name>
                  <Signature>void set_LogEntries ([mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.Logging.LogEntry &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddLogDataAssembly</Name>
                  <Signature>static void AddLogDataAssembly ([mscorlib] System.Reflection.Assembly)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ([mscorlib] System.Reflection.Assembly)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_XslFilePath</Name>
                  <Signature>string get_XslFilePath ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TafxImageFilePath</Name>
                  <Signature>string get_TafxImageFilePath ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupWebBrowserFiles</Name>
                  <Signature>void SetupWebBrowserFiles ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WriteXslFile</Name>
                  <Signature>void WriteXslFile ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupInfo</Name>
                  <Signature>void SetupInfo ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Save</Name>
                  <Signature>void Save (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Save</Name>
                  <Signature>void Save (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WriteXslProcessingInstruction</Name>
                  <Signature>void WriteXslProcessingInstruction ([System.Xml] System.Xml.XmlTextWriter)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Xml] System.Xml.XmlTextWriter)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LogFileDirectory</Name>
                  <Signature>string get_LogFileDirectory ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LogDataDirectory</Name>
                  <Signature>string get_LogDataDirectory ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>string d ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SaveLogDataInfo</Name>
                  <Signature>void SaveLogDataInfo ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>LoadLogDataInfo</Name>
                  <Signature>void LoadLogDataInfo ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Load</Name>
                  <Signature>static TestAutomationFX.Core.Logging.LogFile Load (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Load</Name>
                  <Signature>static TestAutomationFX.Core.Logging.LogFile Load (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateXmlSerializer</Name>
                  <Signature>static [System.Xml] System.Xml.Serialization.XmlSerializer CreateXmlSerializer ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [System.Xml] System.Xml.Serialization.XmlSerializer a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLogDataTypes</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Type &gt; GetLogDataTypes ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Type &gt; a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetAllTypes</Name>
                  <Signature>static [mscorlib] System.Type[] GetAllTypes ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.Type[] a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetAssembliesToCheckForTypes</Name>
                  <Signature>static [mscorlib] System.Reflection.Assembly[] GetAssembliesToCheckForTypes ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.Reflection.Assembly[] a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CheckAssemblyForTypes</Name>
                  <Signature>static bool CheckAssemblyForTypes ([mscorlib] System.Reflection.Assembly)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a ([mscorlib] System.Reflection.Assembly)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddLogEntry</Name>
                  <Signature>void AddLogEntry (TestAutomationFX.Core.Logging.LogEntry)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddLogEntry</Name>
                  <Signature>void AddLogEntry (TestAutomationFX.Core.Logging.LogEntry)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddLogEntry</Name>
                  <Signature>void AddLogEntry (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddLogEntry</Name>
                  <Signature>void AddLogEntry (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLogDataFileName</Name>
                  <Signature>string GetLogDataFileName (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetUniqueFilenameIndex</Name>
                  <Signature>int32 GetUniqueFilenameIndex ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetUniqueFilenameIndex</Name>
                  <Signature>int32 GetUniqueFilenameIndex ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>XslFilename</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>XslFilename</Name>
                  <Signature>string XslFilename</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Filename</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Filename</Name>
                  <Signature>string Filename</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ProjectName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ProjectName</Name>
                  <Signature>string ProjectName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TAFXVersion</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>TAFXVersion</Name>
                  <Signature>string TAFXVersion</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Date</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Date</Name>
                  <Signature>string Date</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Time</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Time</Name>
                  <Signature>string Time</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LogEntries</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.Logging.LogEntry &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>LogEntries</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.Logging.LogEntry &gt; LogEntries</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>XslFilePath</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TafxImageFilePath</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LogFileDirectory</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LogDataDirectory</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.TAFXLog</Name>
              <NewName>TestAutomationFX.TAFXLog</NewName>
              <Field>
                <Original>
                  <Name>&lt;IsLog4NetAvailable&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;LogType&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Type</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Type</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_IsLog4NetAvailable</Name>
                  <Signature>static bool get_IsLog4NetAvailable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsLog4NetAvailable</Name>
                  <Signature>static bool get_IsLog4NetAvailable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsLog4NetAvailable</Name>
                  <Signature>static void set_IsLog4NetAvailable (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsLog4NetAvailable</Name>
                  <Signature>static void set_IsLog4NetAvailable (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LogType</Name>
                  <Signature>[mscorlib] System.Type get_LogType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LogType</Name>
                  <Signature>[mscorlib] System.Type get_LogType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LogType</Name>
                  <Signature>void set_LogType ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_LogType</Name>
                  <Signature>void set_LogType ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupLogObject</Name>
                  <Signature>void SetupLogObject ([mscorlib] System.Type)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([mscorlib] System.Type)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.get_IsDebugEnabled</Name>
                  <Signature>bool TestAutomationFX.ITAFXLog.get_IsDebugEnabled ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.get_IsDebugEnabled</Name>
                  <Signature>bool TestAutomationFX.ITAFXLog.get_IsDebugEnabled ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.get_IsErrorEnabled</Name>
                  <Signature>bool TestAutomationFX.ITAFXLog.get_IsErrorEnabled ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.get_IsErrorEnabled</Name>
                  <Signature>bool TestAutomationFX.ITAFXLog.get_IsErrorEnabled ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.get_IsFatalEnabled</Name>
                  <Signature>bool TestAutomationFX.ITAFXLog.get_IsFatalEnabled ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.get_IsFatalEnabled</Name>
                  <Signature>bool TestAutomationFX.ITAFXLog.get_IsFatalEnabled ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.get_IsInfoEnabled</Name>
                  <Signature>bool TestAutomationFX.ITAFXLog.get_IsInfoEnabled ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.get_IsInfoEnabled</Name>
                  <Signature>bool TestAutomationFX.ITAFXLog.get_IsInfoEnabled ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.get_IsWarnEnabled</Name>
                  <Signature>bool TestAutomationFX.ITAFXLog.get_IsWarnEnabled ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.get_IsWarnEnabled</Name>
                  <Signature>bool TestAutomationFX.ITAFXLog.get_IsWarnEnabled ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.Debug</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Debug (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.Debug</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Debug (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.Debug</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Debug (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.Debug</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Debug (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.DebugFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.DebugFormat (string, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.DebugFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.DebugFormat (string, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.DebugFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.DebugFormat (string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.DebugFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.DebugFormat (string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.DebugFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.DebugFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.DebugFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.DebugFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.DebugFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.DebugFormat (string, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.DebugFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.DebugFormat (string, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.DebugFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.DebugFormat (string, object, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.DebugFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.DebugFormat (string, object, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.Error</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Error (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.Error</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Error (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.Error</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Error (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.Error</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Error (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.ErrorFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.ErrorFormat (string, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.ErrorFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.ErrorFormat (string, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.ErrorFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.ErrorFormat (string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.ErrorFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.ErrorFormat (string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.ErrorFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.ErrorFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.ErrorFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.ErrorFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.ErrorFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.ErrorFormat (string, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.ErrorFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.ErrorFormat (string, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.ErrorFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.ErrorFormat (string, object, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.ErrorFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.ErrorFormat (string, object, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.Fatal</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Fatal (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.Fatal</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Fatal (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.Fatal</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Fatal (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.Fatal</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Fatal (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.FatalFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.FatalFormat (string, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.FatalFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.FatalFormat (string, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.FatalFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.FatalFormat (string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.FatalFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.FatalFormat (string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.FatalFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.FatalFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.FatalFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.FatalFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.FatalFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.FatalFormat (string, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.FatalFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.FatalFormat (string, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.FatalFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.FatalFormat (string, object, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.FatalFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.FatalFormat (string, object, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.Info</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Info (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.Info</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Info (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.Info</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Info (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.Info</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Info (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.InfoFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.InfoFormat (string, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.InfoFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.InfoFormat (string, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.InfoFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.InfoFormat (string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.InfoFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.InfoFormat (string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.InfoFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.InfoFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.InfoFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.InfoFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.InfoFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.InfoFormat (string, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.InfoFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.InfoFormat (string, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.InfoFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.InfoFormat (string, object, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.InfoFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.InfoFormat (string, object, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.Warn</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Warn (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.Warn</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Warn (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.Warn</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Warn (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.Warn</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.Warn (object, [mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.WarnFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.WarnFormat (string, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.WarnFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.WarnFormat (string, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.WarnFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.WarnFormat (string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.WarnFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.WarnFormat (string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.WarnFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.WarnFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.WarnFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.WarnFormat ([mscorlib] System.IFormatProvider, string, object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.WarnFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.WarnFormat (string, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.WarnFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.WarnFormat (string, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.WarnFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.WarnFormat (string, object, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.WarnFormat</Name>
                  <Signature>void TestAutomationFX.ITAFXLog.WarnFormat (string, object, object, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>IsLog4NetAvailable</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsLog4NetAvailable</Name>
                  <Signature>bool IsLog4NetAvailable</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LogType</Name>
                  <Signature>[mscorlib] System.Type</Signature>
                </Original>
                <Obfuscated>
                  <Name>LogType</Name>
                  <Signature>[mscorlib] System.Type LogType</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.IsDebugEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.IsDebugEnabled</Name>
                  <Signature>bool TestAutomationFX.ITAFXLog.IsDebugEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.IsErrorEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.IsErrorEnabled</Name>
                  <Signature>bool TestAutomationFX.ITAFXLog.IsErrorEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.IsFatalEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.IsFatalEnabled</Name>
                  <Signature>bool TestAutomationFX.ITAFXLog.IsFatalEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.IsInfoEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.IsInfoEnabled</Name>
                  <Signature>bool TestAutomationFX.ITAFXLog.IsInfoEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestAutomationFX.ITAFXLog.IsWarnEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.ITAFXLog.IsWarnEnabled</Name>
                  <Signature>bool TestAutomationFX.ITAFXLog.IsWarnEnabled</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.TAFXLogManager</Name>
              <NewName>TestAutomationFX.TAFXLogManager</NewName>
              <Method>
                <Original>
                  <Name>GetLogger</Name>
                  <Signature>static TestAutomationFX.ITAFXLog GetLogger ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetLogger</Name>
                  <Signature>static TestAutomationFX.ITAFXLog GetLogger ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.FindMsaaInfo</Name>
              <NewName>TestAutomationFX.Core.FindMsaaInfo</NewName>
              <Field>
                <Original>
                  <Name>&lt;Name&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;IsVisible&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; bool &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; bool &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Role&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Index&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;MatchedIndex&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Name</Name>
                  <Signature>void set_Name (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Name</Name>
                  <Signature>void set_Name (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsVisible</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; bool &gt; get_IsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsVisible</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; bool &gt; get_IsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsVisible</Name>
                  <Signature>void set_IsVisible ([mscorlib] System.Nullable`1&lt; bool &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsVisible</Name>
                  <Signature>void set_IsVisible ([mscorlib] System.Nullable`1&lt; bool &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Role</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt; get_Role ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Role</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt; get_Role ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Role</Name>
                  <Signature>void set_Role ([mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Role</Name>
                  <Signature>void set_Role ([mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Index</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Index</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Index</Name>
                  <Signature>void set_Index ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Index</Name>
                  <Signature>void set_Index ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_MatchedIndex ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_MatchedIndex ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MatchedIndex</Name>
                  <Signature>void set_MatchedIndex ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MatchedIndex</Name>
                  <Signature>void set_MatchedIndex ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_NameHasValue</Name>
                  <Signature>bool get_NameHasValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_NameHasValue</Name>
                  <Signature>bool get_NameHasValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Name</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Name</Name>
                  <Signature>string Name</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsVisible</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; bool &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsVisible</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; bool &gt; IsVisible</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Role</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>Role</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt; Role</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Index</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>Index</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; Index</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; MatchedIndex</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>NameHasValue</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>NameHasValue</Name>
                  <Signature>bool NameHasValue</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Description</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Description</Name>
                  <Signature>string Description</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.NetInjectorLoaderHandler</Name>
              <NewName>TestAutomationFX.Core.NetInjectorLoaderHandler</NewName>
              <Field>
                <Original>
                  <Name>UnhandledExceptionInTAFXCore</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>NetInjector</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>NetInjectorDllFileName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_NetInjectorAssembly</Name>
                  <Signature>[mscorlib] System.Reflection.Assembly</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Reflection.Assembly</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_IsInLoadNetInjector</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>PreLoadNetInjectorAssembly</Name>
                  <Signature>static [mscorlib] System.Reflection.Assembly PreLoadNetInjectorAssembly ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.Reflection.Assembly a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemoveLocalNetInjector</Name>
                  <Signature>static void RemoveLocalNetInjector ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsRunByLicenseCompiler</Name>
                  <Signature>static bool get_IsRunByLicenseCompiler ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemoveNetInjectorAtLocation</Name>
                  <Signature>static void RemoveNetInjectorAtLocation (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetEntryAssemblyLocation</Name>
                  <Signature>static string GetEntryAssemblyLocation ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WriteNetInjector</Name>
                  <Signature>static string WriteNetInjector ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static string b ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WriteAllNetInjectorFiles</Name>
                  <Signature>static void WriteAllNetInjectorFiles ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WriteNetInjector</Name>
                  <Signature>static string WriteNetInjector (bool, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a (bool, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WriteNetInjectorFiles</Name>
                  <Signature>static void WriteNetInjectorFiles (bool, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (bool, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WriteNetInjectorLoader</Name>
                  <Signature>static void WriteNetInjectorLoader (bool, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static void b (bool, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>LoadNetInjector</Name>
                  <Signature>static [mscorlib] System.Reflection.Assembly LoadNetInjector ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>LoadNetInjector</Name>
                  <Signature>static [mscorlib] System.Reflection.Assembly LoadNetInjector ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CheckIfNetInjectorHasBeenLoadedWrong</Name>
                  <Signature>static void CheckIfNetInjectorHasBeenLoadedWrong ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>static void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPlatformNameParts</Name>
                  <Signature>static void GetPlatformNameParts (bool, string, [out] string&amp;, [out] string&amp;, [out] string&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (bool, string, [out] string&amp;, [out] string&amp;, [out] string&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Is64BitAssembly</Name>
                  <Signature>static bool get_Is64BitAssembly ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static bool b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCurrentDomainAssemblyLoad</Name>
                  <Signature>static void OnCurrentDomainAssemblyLoad (object, [mscorlib] System.AssemblyLoadEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (object, [mscorlib] System.AssemblyLoadEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCurrentDomainTypeResolve</Name>
                  <Signature>static [mscorlib] System.Reflection.Assembly OnCurrentDomainTypeResolve (object, [mscorlib] System.ResolveEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.Reflection.Assembly a (object, [mscorlib] System.ResolveEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCurrentDomainUnhandledException</Name>
                  <Signature>static void OnCurrentDomainUnhandledException (object, [mscorlib] System.UnhandledExceptionEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (object, [mscorlib] System.UnhandledExceptionEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCurrentDomainAssemblyResolve</Name>
                  <Signature>static [mscorlib] System.Reflection.Assembly OnCurrentDomainAssemblyResolve (object, [mscorlib] System.ResolveEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static [mscorlib] System.Reflection.Assembly b (object, [mscorlib] System.ResolveEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StartNetInjectorLoaderProcesses</Name>
                  <Signature>static void StartNetInjectorLoaderProcesses ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>StartNetInjectorLoaderProcesses</Name>
                  <Signature>static void StartNetInjectorLoaderProcesses ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>IsRunByLicenseCompiler</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Is64BitAssembly</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Performance.PreJitDisabledAttribute</Name>
              <NewName>TestAutomationFX.Core.Performance.PreJitDisabledAttribute</NewName>
              <Field>
                <Original>
                  <Name>&lt;Disable&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Disable</Name>
                  <Signature>bool get_Disable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Disable</Name>
                  <Signature>bool get_Disable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Disable</Name>
                  <Signature>void set_Disable (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Disable</Name>
                  <Signature>void set_Disable (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Disable</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Disable</Name>
                  <Signature>bool Disable</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Performance.PreloadAssembliesHelper</Name>
              <NewName>q</NewName>
              <Field>
                <Original>
                  <Name>m_PreLoadAutomationAssembly</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MsaaPreloaded</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</Name>
                  <Signature>[mscorlib] System.Threading.ThreadStart</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Threading.ThreadStart</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>PreLoadProcessCommandLine</Name>
                  <Signature>void PreLoadProcessCommandLine ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsPreJittingDisabled</Name>
                  <Signature>bool IsPreJittingDisabled (object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (object[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>PreJit</Name>
                  <Signature>void PreJit ([mscorlib] System.Type)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([mscorlib] System.Type)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>PreLoadAssemblies</Name>
                  <Signature>void PreLoadAssemblies ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>PreLoadUIAutomationAssemblies</Name>
                  <Signature>void PreLoadUIAutomationAssemblies ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>PreLoadMsaaFramework</Name>
                  <Signature>void PreLoadMsaaFramework ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>&lt;PreLoadProcessCommandLine&gt;b__0</Name>
                  <Signature>static void &lt;PreLoadProcessCommandLine&gt;b__0 ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>static void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <NestedType>
                <Name>&lt;&gt;c__DisplayClass3</Name>
                <NewName>&lt;&gt;c__DisplayClass3</NewName>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Core.Performance.PreloadAssembliesHelper</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>q</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>probingType</Name>
                    <Signature>[mscorlib] System.Type</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>probingType</Name>
                    <Signature>[mscorlib] System.Type</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;PreJit&gt;b__2</Name>
                    <Signature>void &lt;PreJit&gt;b__2 ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;PreJit&gt;b__2</Name>
                    <Signature>void &lt;PreJit&gt;b__2 ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Performance.SimpleTimer</Name>
              <NewName>TestAutomationFX.Core.Performance.SimpleTimer</NewName>
              <Field>
                <Original>
                  <Name>&lt;Timer&gt;k__BackingField</Name>
                  <Signature>[System] System.Diagnostics.Stopwatch</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.Diagnostics.Stopwatch</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Operation&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Timer</Name>
                  <Signature>[System] System.Diagnostics.Stopwatch get_Timer ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Timer</Name>
                  <Signature>[System] System.Diagnostics.Stopwatch get_Timer ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Timer</Name>
                  <Signature>void set_Timer ([System] System.Diagnostics.Stopwatch)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Timer</Name>
                  <Signature>void set_Timer ([System] System.Diagnostics.Stopwatch)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Operation</Name>
                  <Signature>string get_Operation ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Operation</Name>
                  <Signature>string get_Operation ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Operation</Name>
                  <Signature>void set_Operation (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Operation</Name>
                  <Signature>void set_Operation (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StartTimer</Name>
                  <Signature>static [mscorlib] System.IDisposable StartTimer (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>StartTimer</Name>
                  <Signature>static [mscorlib] System.IDisposable StartTimer (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.IDisposable.Dispose</Name>
                  <Signature>void System.IDisposable.Dispose ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.IDisposable.Dispose</Name>
                  <Signature>void System.IDisposable.Dispose ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Timer</Name>
                  <Signature>[System] System.Diagnostics.Stopwatch</Signature>
                </Original>
                <Obfuscated>
                  <Name>Timer</Name>
                  <Signature>[System] System.Diagnostics.Stopwatch Timer</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Operation</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Operation</Name>
                  <Signature>string Operation</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Performance.SimpleTimerManager</Name>
              <NewName>TestAutomationFX.Core.Performance.SimpleTimerManager</NewName>
              <Field>
                <Original>
                  <Name>m_Instance</Name>
                  <Signature>TestAutomationFX.Core.Performance.SimpleTimerManager</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Performance.SimpleTimerManager</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_SimpleTimers</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; string, [mscorlib] System.IDisposable &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; string, [mscorlib] System.IDisposable &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Instance</Name>
                  <Signature>static TestAutomationFX.Core.Performance.SimpleTimerManager get_Instance ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Instance</Name>
                  <Signature>static TestAutomationFX.Core.Performance.SimpleTimerManager get_Instance ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StartTimer</Name>
                  <Signature>void StartTimer (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>StartTimer</Name>
                  <Signature>void StartTimer (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StopTimer</Name>
                  <Signature>void StopTimer (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>StopTimer</Name>
                  <Signature>void StopTimer (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Instance</Name>
                  <Signature>TestAutomationFX.Core.Performance.SimpleTimerManager</Signature>
                </Original>
                <Obfuscated>
                  <Name>Instance</Name>
                  <Signature>TestAutomationFX.Core.Performance.SimpleTimerManager Instance</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.PlatformInfoCore</Name>
              <NewName>TestAutomationFX.Core.PlatformInfoCore</NewName>
              <Field>
                <Original>
                  <Name>TestAutomationFXFolderName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ArchitectureFolderName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ArchitectureName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;FrameworkVersion&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;FrameworkVersionSuffix&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Is64Bit&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;LoaderFileName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;TempBinPath&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_ArchitectureFolderName</Name>
                  <Signature>string get_ArchitectureFolderName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ArchitectureFolderName</Name>
                  <Signature>string get_ArchitectureFolderName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ArchitectureFolderName</Name>
                  <Signature>void set_ArchitectureFolderName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ArchitectureFolderName</Name>
                  <Signature>void set_ArchitectureFolderName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ArchitectureName</Name>
                  <Signature>string get_ArchitectureName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ArchitectureName</Name>
                  <Signature>string get_ArchitectureName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ArchitectureName</Name>
                  <Signature>void set_ArchitectureName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ArchitectureName</Name>
                  <Signature>void set_ArchitectureName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_FrameworkVersion</Name>
                  <Signature>string get_FrameworkVersion ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_FrameworkVersion</Name>
                  <Signature>string get_FrameworkVersion ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_FrameworkVersion</Name>
                  <Signature>void set_FrameworkVersion (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_FrameworkVersion</Name>
                  <Signature>void set_FrameworkVersion (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_FrameworkVersionSuffix</Name>
                  <Signature>string get_FrameworkVersionSuffix ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_FrameworkVersionSuffix</Name>
                  <Signature>string get_FrameworkVersionSuffix ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_FrameworkVersionSuffix</Name>
                  <Signature>void set_FrameworkVersionSuffix (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_FrameworkVersionSuffix</Name>
                  <Signature>void set_FrameworkVersionSuffix (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Is64Bit</Name>
                  <Signature>bool get_Is64Bit ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Is64Bit</Name>
                  <Signature>bool get_Is64Bit ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Is64Bit</Name>
                  <Signature>void set_Is64Bit (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Is64Bit</Name>
                  <Signature>void set_Is64Bit (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LoaderFileName</Name>
                  <Signature>string get_LoaderFileName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LoaderFileName</Name>
                  <Signature>string get_LoaderFileName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LoaderFileName</Name>
                  <Signature>void set_LoaderFileName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_LoaderFileName</Name>
                  <Signature>void set_LoaderFileName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TempBinPath</Name>
                  <Signature>string get_TempBinPath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TempBinPath</Name>
                  <Signature>string get_TempBinPath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TempBinPath</Name>
                  <Signature>void set_TempBinPath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TempBinPath</Name>
                  <Signature>void set_TempBinPath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (bool, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (bool, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetTempBinPath</Name>
                  <Signature>string GetTempBinPath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetTempBinPath</Name>
                  <Signature>string GetTempBinPath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetTafxTempPath</Name>
                  <Signature>static string GetTafxTempPath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetTafxTempPath</Name>
                  <Signature>static string GetTafxTempPath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ArchitectureFolderName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ArchitectureFolderName</Name>
                  <Signature>string ArchitectureFolderName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ArchitectureName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ArchitectureName</Name>
                  <Signature>string ArchitectureName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>FrameworkVersion</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>FrameworkVersion</Name>
                  <Signature>string FrameworkVersion</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>FrameworkVersionSuffix</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>FrameworkVersionSuffix</Name>
                  <Signature>string FrameworkVersionSuffix</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Is64Bit</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Is64Bit</Name>
                  <Signature>bool Is64Bit</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LoaderFileName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>LoaderFileName</Name>
                  <Signature>string LoaderFileName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TempBinPath</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>TempBinPath</Name>
                  <Signature>string TempBinPath</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.PointHelper</Name>
              <NewName>TestAutomationFX.Core.PointHelper</NewName>
              <Method>
                <Original>
                  <Name>Distance</Name>
                  <Signature>static int32 Distance ([System.Drawing] System.Drawing.Point, [System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Distance</Name>
                  <Signature>static int32 Distance ([System.Drawing] System.Drawing.Point, [System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.PrivilegesHelper</Name>
              <NewName>TestAutomationFX.Core.PrivilegesHelper</NewName>
              <Field>
                <Original>
                  <Name>SE_ASSIGNPRIMARYTOKEN_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_ASSIGNPRIMARYTOKEN_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_AUDIT_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_AUDIT_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_BACKUP_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_BACKUP_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_CHANGE_NOTIFY_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_CHANGE_NOTIFY_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_CREATE_GLOBAL_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_CREATE_GLOBAL_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_CREATE_PAGEFILE_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_CREATE_PAGEFILE_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_CREATE_PERMANENT_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_CREATE_PERMANENT_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_CREATE_SYMBOLIC_LINK_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_CREATE_SYMBOLIC_LINK_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_CREATE_TOKEN_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_CREATE_TOKEN_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_DEBUG_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_DEBUG_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_ENABLE_DELEGATION_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_ENABLE_DELEGATION_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_IMPERSONATE_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_IMPERSONATE_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_INC_BASE_PRIORITY_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_INC_BASE_PRIORITY_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_INCREASE_QUOTA_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_INCREASE_QUOTA_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_INC_WORKING_SET_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_INC_WORKING_SET_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_LOAD_DRIVER_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_LOAD_DRIVER_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_LOCK_MEMORY_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_LOCK_MEMORY_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_MACHINE_ACCOUNT_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_MACHINE_ACCOUNT_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_MANAGE_VOLUME_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_MANAGE_VOLUME_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_PROF_SINGLE_PROCESS_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_PROF_SINGLE_PROCESS_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_RELABEL_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_RELABEL_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_REMOTE_SHUTDOWN_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_REMOTE_SHUTDOWN_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_RESTORE_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_RESTORE_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_SECURITY_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_SECURITY_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_SHUTDOWN_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_SHUTDOWN_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_SYNC_AGENT_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_SYNC_AGENT_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_SYSTEM_ENVIRONMENT_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_SYSTEM_ENVIRONMENT_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_SYSTEM_PROFILE_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_SYSTEM_PROFILE_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_SYSTEMTIME_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_SYSTEMTIME_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_TAKE_OWNERSHIP_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_TAKE_OWNERSHIP_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_TCB_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_TCB_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_TIME_ZONE_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_TIME_ZONE_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_TRUSTED_CREDMAN_ACCESS_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_TRUSTED_CREDMAN_ACCESS_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_UNDOCK_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_UNDOCK_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_UNSOLICITED_INPUT_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_UNSOLICITED_INPUT_NAME</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_PRIVILEGE_ENABLED_BY_DEFAULT</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_PRIVILEGE_ENABLED_BY_DEFAULT</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_PRIVILEGE_ENABLED</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_PRIVILEGE_ENABLED</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_PRIVILEGE_REMOVED</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_PRIVILEGE_REMOVED</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SE_PRIVILEGE_USED_FOR_ACCESS</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SE_PRIVILEGE_USED_FOR_ACCESS</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>STANDARD_RIGHTS_REQUIRED</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>STANDARD_RIGHTS_READ</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TOKEN_ASSIGN_PRIMARY</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TOKEN_DUPLICATE</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TOKEN_IMPERSONATE</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TOKEN_QUERY</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TOKEN_QUERY_SOURCE</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TOKEN_ADJUST_PRIVILEGES</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TOKEN_ADJUST_GROUPS</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TOKEN_ADJUST_DEFAULT</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TOKEN_ADJUST_SESSIONID</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TOKEN_READ</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>l</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TOKEN_ALL_ACCESS</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>OpenProcessToken</Name>
                  <Signature>static bool OpenProcessToken (native int, unsigned int32, [out] native int&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (native int, unsigned int32, [out] native int&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCurrentProcess</Name>
                  <Signature>static native int GetCurrentProcess ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static native int a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>LookupPrivilegeValue</Name>
                  <Signature>static bool LookupPrivilegeValue (string, string, [out] TestAutomationFX.Core.PrivilegesHelper/LUID&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (string, string, [out] TestAutomationFX.Core.PrivilegesHelper/LUID&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CloseHandle</Name>
                  <Signature>static bool CloseHandle (native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AdjustTokenPrivileges</Name>
                  <Signature>static bool AdjustTokenPrivileges (native int, bool, [out] TestAutomationFX.Core.PrivilegesHelper/TOKEN_PRIVILEGES&amp;, unsigned int32, native int, native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (native int, bool, [out] TestAutomationFX.Core.PrivilegesHelper/TOKEN_PRIVILEGES&amp;, unsigned int32, native int, native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EnableSeDebugPrivilege</Name>
                  <Signature>static void EnableSeDebugPrivilege ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>EnableSeDebugPrivilege</Name>
                  <Signature>static void EnableSeDebugPrivilege ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EnableSeDebugPrivilege</Name>
                  <Signature>static void EnableSeDebugPrivilege (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>EnableSeDebugPrivilege</Name>
                  <Signature>static void EnableSeDebugPrivilege (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <NestedType>
                <Name>LUID</Name>
                <NewName>LUID</NewName>
                <Field>
                  <Original>
                    <Name>LowPart</Name>
                    <Signature>unsigned int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>LowPart</Name>
                    <Signature>unsigned int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>HighPart</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>HighPart</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>TOKEN_PRIVILEGES</Name>
                <NewName>TOKEN_PRIVILEGES</NewName>
                <Field>
                  <Original>
                    <Name>PrivilegeCount</Name>
                    <Signature>unsigned int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>PrivilegeCount</Name>
                    <Signature>unsigned int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Luid</Name>
                    <Signature>TestAutomationFX.Core.PrivilegesHelper/LUID</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Luid</Name>
                    <Signature>TestAutomationFX.Core.PrivilegesHelper/LUID</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Attributes</Name>
                    <Signature>unsigned int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Attributes</Name>
                    <Signature>unsigned int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>LUID_AND_ATTRIBUTES</Name>
                <NewName>LUID_AND_ATTRIBUTES</NewName>
                <Field>
                  <Original>
                    <Name>Luid</Name>
                    <Signature>TestAutomationFX.Core.PrivilegesHelper/LUID</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Luid</Name>
                    <Signature>TestAutomationFX.Core.PrivilegesHelper/LUID</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Attributes</Name>
                    <Signature>unsigned int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Attributes</Name>
                    <Signature>unsigned int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.ProcessController</Name>
              <NewName>TestAutomationFX.Core.ProcessController</NewName>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</Name>
                  <Signature>[mscorlib] System.Comparison`1&lt; [System] System.Diagnostics.Process &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Comparison`1&lt; [System] System.Diagnostics.Process &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (int32, string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (int32, string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProcessByFindProcessInfo</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByFindProcessInfo (TestAutomationFX.Core.UI.FindProcessInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [System] System.Diagnostics.Process a (TestAutomationFX.Core.UI.FindProcessInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProcessesByFindProcessInfo</Name>
                  <Signature>static [System] System.Diagnostics.Process[] GetProcessesByFindProcessInfo (TestAutomationFX.Core.UI.FindProcessInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetProcessesByFindProcessInfo</Name>
                  <Signature>static [System] System.Diagnostics.Process[] GetProcessesByFindProcessInfo (TestAutomationFX.Core.UI.FindProcessInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SortProcessesByStartTime</Name>
                  <Signature>static void SortProcessesByStartTime ([System] System.Diagnostics.Process[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ([System] System.Diagnostics.Process[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HasExited</Name>
                  <Signature>static bool HasExited ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsSystemIdleProcess</Name>
                  <Signature>static bool IsSystemIdleProcess ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static bool b ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsSystemIdleProcess</Name>
                  <Signature>static bool IsSystemIdleProcess (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProcessByFindProcessInfo</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByFindProcessInfo (TestAutomationFX.Core.UI.FindProcessInfo, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [System] System.Diagnostics.Process a (TestAutomationFX.Core.UI.FindProcessInfo, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MatchFindProcessInfo</Name>
                  <Signature>static bool MatchFindProcessInfo (TestAutomationFX.Core.UI.FindProcessInfo, [System] System.Diagnostics.Process)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (TestAutomationFX.Core.UI.FindProcessInfo, [System] System.Diagnostics.Process)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemoveVsHostFromName</Name>
                  <Signature>static string RemoveVsHostFromName (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMatchedIndex</Name>
                  <Signature>static int32 GetMatchedIndex (TestAutomationFX.Core.UI.FindProcessInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static int32 a (TestAutomationFX.Core.UI.FindProcessInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCommandLine</Name>
                  <Signature>static string GetCommandLine (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExtractArguments</Name>
                  <Signature>static string ExtractArguments (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static string b (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProcessPath</Name>
                  <Signature>static string GetProcessPath ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetProcessPath</Name>
                  <Signature>static string GetProcessPath ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProcessPathInternal</Name>
                  <Signature>static string GetProcessPathInternal ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProcessPathInternalFromWMI</Name>
                  <Signature>static string GetProcessPathInternalFromWMI (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static string b (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>&lt;SortProcessesByStartTime&gt;b__0</Name>
                  <Signature>static int32 &lt;SortProcessesByStartTime&gt;b__0 ([System] System.Diagnostics.Process, [System] System.Diagnostics.Process)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static int32 a ([System] System.Diagnostics.Process, [System] System.Diagnostics.Process)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.RegistryKeyHandler</Name>
              <NewName>TestAutomationFX.Core.RegistryKeyHandler</NewName>
              <Field>
                <Original>
                  <Name>m_RegKeyTestAutomationFX</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_LicenseRegistryKeys</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRegistryKey</Name>
                  <Signature>[mscorlib] Microsoft.Win32.RegistryKey GetRegistryKey ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRegistryKey</Name>
                  <Signature>[mscorlib] Microsoft.Win32.RegistryKey GetRegistryKey ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRegistryKey</Name>
                  <Signature>[mscorlib] Microsoft.Win32.RegistryKey GetRegistryKey (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRegistryKey</Name>
                  <Signature>[mscorlib] Microsoft.Win32.RegistryKey GetRegistryKey (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.SimpleSite</Name>
              <NewName>r</NewName>
              <Field>
                <Original>
                  <Name>m_Container</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Component</Name>
                  <Signature>[System] System.ComponentModel.IComponent</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IComponent</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ServiceProvider</Name>
                  <Signature>[mscorlib] System.IServiceProvider</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.IServiceProvider</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Name</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.IContainer, [System] System.ComponentModel.IComponent, [mscorlib] System.IServiceProvider)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.IContainer, [System] System.ComponentModel.IComponent, [mscorlib] System.IServiceProvider)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Component</Name>
                  <Signature>[System] System.ComponentModel.IComponent get_Component ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Component</Name>
                  <Signature>[System] System.ComponentModel.IComponent get_Component ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Container</Name>
                  <Signature>[System] System.ComponentModel.IContainer get_Container ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Container</Name>
                  <Signature>[System] System.ComponentModel.IContainer get_Container ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DesignMode</Name>
                  <Signature>bool get_DesignMode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DesignMode</Name>
                  <Signature>bool get_DesignMode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Name</Name>
                  <Signature>void set_Name (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Name</Name>
                  <Signature>void set_Name (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetService</Name>
                  <Signature>object GetService ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetService</Name>
                  <Signature>object GetService ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Component</Name>
                  <Signature>[System] System.ComponentModel.IComponent</Signature>
                </Original>
                <Obfuscated>
                  <Name>Component</Name>
                  <Signature>[System] System.ComponentModel.IComponent Component</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Container</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                </Original>
                <Obfuscated>
                  <Name>Container</Name>
                  <Signature>[System] System.ComponentModel.IContainer Container</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DesignMode</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>DesignMode</Name>
                  <Signature>bool DesignMode</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Name</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Name</Name>
                  <Signature>string Name</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Recording.AddCommentForm</Name>
              <NewName>TestAutomationFX.Core.Recording.AddCommentForm</NewName>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Comment</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_OkButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CancelButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Comment</Name>
                  <Signature>string get_Comment ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Comment</Name>
                  <Signature>string get_Comment ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Comment</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Comment</Name>
                  <Signature>string Comment</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Recording.RecordedAction</Name>
              <NewName>TestAutomationFX.Core.Recording.RecordedAction</NewName>
              <Field>
                <Original>
                  <Name>m_Instance</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Parameters</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; object &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; object &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;MethodName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;RecordedTime&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_MethodName</Name>
                  <Signature>string get_MethodName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MethodName</Name>
                  <Signature>string get_MethodName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MethodName</Name>
                  <Signature>void set_MethodName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MethodName</Name>
                  <Signature>void set_MethodName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object, string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object, string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Parameters</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; object &gt; get_Parameters ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Parameters</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; object &gt; get_Parameters ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Parameters</Name>
                  <Signature>void set_Parameters ([mscorlib] System.Collections.Generic.List`1&lt; object &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Parameters</Name>
                  <Signature>void set_Parameters ([mscorlib] System.Collections.Generic.List`1&lt; object &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_InstanceName</Name>
                  <Signature>string get_InstanceName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_InstanceName</Name>
                  <Signature>string get_InstanceName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Instance</Name>
                  <Signature>object get_Instance ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Instance</Name>
                  <Signature>object get_Instance ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Instance</Name>
                  <Signature>void set_Instance (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Instance</Name>
                  <Signature>void set_Instance (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RecordedTime</Name>
                  <Signature>[mscorlib] System.DateTime get_RecordedTime ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RecordedTime</Name>
                  <Signature>[mscorlib] System.DateTime get_RecordedTime ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_RecordedTime</Name>
                  <Signature>void set_RecordedTime ([mscorlib] System.DateTime)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_RecordedTime</Name>
                  <Signature>void set_RecordedTime ([mscorlib] System.DateTime)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>MethodName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>MethodName</Name>
                  <Signature>string MethodName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Parameters</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; object &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>Parameters</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; object &gt; Parameters</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>InstanceName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>InstanceName</Name>
                  <Signature>string InstanceName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Instance</Name>
                  <Signature>object</Signature>
                </Original>
                <Obfuscated>
                  <Name>Instance</Name>
                  <Signature>object Instance</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RecordedTime</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                </Original>
                <Obfuscated>
                  <Name>RecordedTime</Name>
                  <Signature>[mscorlib] System.DateTime RecordedTime</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Recording.RecordedCommentAction</Name>
              <NewName>TestAutomationFX.Core.Recording.RecordedCommentAction</NewName>
              <Field>
                <Original>
                  <Name>&lt;Comment&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Comment</Name>
                  <Signature>string get_Comment ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Comment</Name>
                  <Signature>string get_Comment ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Comment</Name>
                  <Signature>void set_Comment (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Comment</Name>
                  <Signature>void set_Comment (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Comment</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Comment</Name>
                  <Signature>string Comment</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Recording.RecordedMouseAction</Name>
              <NewName>TestAutomationFX.Core.Recording.RecordedMouseAction</NewName>
              <Field>
                <Original>
                  <Name>&lt;RelativeLocation&gt;k__BackingField</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;UseCoordinates&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_RelativeLocation</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_RelativeLocation ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RelativeLocation</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_RelativeLocation ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_RelativeLocation</Name>
                  <Signature>void set_RelativeLocation ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_RelativeLocation</Name>
                  <Signature>void set_RelativeLocation ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UseCoordinates</Name>
                  <Signature>bool get_UseCoordinates ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UseCoordinates</Name>
                  <Signature>bool get_UseCoordinates ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UseCoordinates</Name>
                  <Signature>void set_UseCoordinates (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UseCoordinates</Name>
                  <Signature>void set_UseCoordinates (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object, string, [System.Drawing] System.Drawing.Point, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object, string, [System.Drawing] System.Drawing.Point, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>RelativeLocation</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                </Original>
                <Obfuscated>
                  <Name>RelativeLocation</Name>
                  <Signature>[System.Drawing] System.Drawing.Point RelativeLocation</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UseCoordinates</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>UseCoordinates</Name>
                  <Signature>bool UseCoordinates</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.ControlProperties</Name>
              <NewName>TestAutomationFX.Core.ControlProperties</NewName>
              <Field>
                <Original>
                  <Name>m_Object</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Properties</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptorCollection</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptorCollection</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetProperty</Name>
                  <Signature>void SetProperty (string, object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string, object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProperty</Name>
                  <Signature>object GetProperty (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object a (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Item</Name>
                  <Signature>object get_Item (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Item</Name>
                  <Signature>object get_Item (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Item</Name>
                  <Signature>void set_Item (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Item</Name>
                  <Signature>void set_Item (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PropertyDescriptorCollection</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptorCollection get_PropertyDescriptorCollection ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptorCollection a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupPropertyCollection</Name>
                  <Signature>void SetupPropertyCollection ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Item</Name>
                  <Signature>object (string)</Signature>
                </Original>
                <Obfuscated>
                  <Name>Item</Name>
                  <Signature>object Item (string)</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PropertyDescriptorCollection</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptorCollection</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System] System.ComponentModel.PropertyDescriptorCollection</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Recording.RecorderLogItem</Name>
              <NewName>s</NewName>
              <Field>
                <Original>
                  <Name>&lt;Message&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;RecordedAction&gt;k__BackingField</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Message</Name>
                  <Signature>string get_Message ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Message</Name>
                  <Signature>void set_Message (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RecordedAction</Name>
                  <Signature>object get_RecordedAction ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_RecordedAction</Name>
                  <Signature>void set_RecordedAction (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Message</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RecordedAction</Name>
                  <Signature>object</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>object</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy</Name>
              <NewName>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy</NewName>
              <Method>
                <Original>
                  <Name>GetBestTechnology</Name>
                  <Signature>TestAutomationFX.Core.Strategies.Technology GetBestTechnology (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetBestTechnology</Name>
                  <Signature>TestAutomationFX.Core.Strategies.Technology GetBestTechnology (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ConsiderUIAutomation</Name>
                  <Signature>bool ConsiderUIAutomation (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ConsiderUIAutomation</Name>
                  <Signature>bool ConsiderUIAutomation (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ConsiderMsaa</Name>
                  <Signature>bool ConsiderMsaa (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ConsiderMsaa</Name>
                  <Signature>bool ConsiderMsaa (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Strategies.BestTechnologyBasedOnSize</Name>
              <NewName>t</NewName>
              <Method>
                <Original>
                  <Name>GetBestTechnology</Name>
                  <Signature>TestAutomationFX.Core.Strategies.Technology GetBestTechnology (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetBestTechnology</Name>
                  <Signature>TestAutomationFX.Core.Strategies.Technology GetBestTechnology (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UseWindowForMsaaRole</Name>
                  <Signature>static bool UseWindowForMsaaRole ([System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a ([System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ConsiderUIAutomation</Name>
                  <Signature>bool ConsiderUIAutomation (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ConsiderUIAutomation</Name>
                  <Signature>bool ConsiderUIAutomation (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ConsiderMsaa</Name>
                  <Signature>bool ConsiderMsaa (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ConsiderMsaa</Name>
                  <Signature>bool ConsiderMsaa (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMsaaBetterThanUIAutomationTechnology</Name>
                  <Signature>bool IsMsaaBetterThanUIAutomationTechnology (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsMsaaBetterThanUIAutomationTechnology</Name>
                  <Signature>bool IsMsaaBetterThanUIAutomationTechnology (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsInsideAndSmaller</Name>
                  <Signature>bool IsInsideAndSmaller ([System.Drawing] System.Drawing.Rectangle, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsInsideAndSmaller</Name>
                  <Signature>bool IsInsideAndSmaller ([System.Drawing] System.Drawing.Rectangle, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy.GetBestTechnology</Name>
                  <Signature>TestAutomationFX.Core.Strategies.Technology TestAutomationFX.Core.Strategies.IBestTechnologyStrategy.GetBestTechnology (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy.GetBestTechnology</Name>
                  <Signature>TestAutomationFX.Core.Strategies.Technology TestAutomationFX.Core.Strategies.IBestTechnologyStrategy.GetBestTechnology (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy.ConsiderUIAutomation</Name>
                  <Signature>bool TestAutomationFX.Core.Strategies.IBestTechnologyStrategy.ConsiderUIAutomation (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy.ConsiderUIAutomation</Name>
                  <Signature>bool TestAutomationFX.Core.Strategies.IBestTechnologyStrategy.ConsiderUIAutomation (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy.ConsiderMsaa</Name>
                  <Signature>bool TestAutomationFX.Core.Strategies.IBestTechnologyStrategy.ConsiderMsaa (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy.ConsiderMsaa</Name>
                  <Signature>bool TestAutomationFX.Core.Strategies.IBestTechnologyStrategy.ConsiderMsaa (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Strategies.Technology</Name>
              <NewName>TestAutomationFX.Core.Strategies.Technology</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WindowType</Name>
                  <Signature>TestAutomationFX.Core.Strategies.Technology</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WindowType</Name>
                  <Signature>TestAutomationFX.Core.Strategies.Technology</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MsaaType</Name>
                  <Signature>TestAutomationFX.Core.Strategies.Technology</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MsaaType</Name>
                  <Signature>TestAutomationFX.Core.Strategies.Technology</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>AutomationElementType</Name>
                  <Signature>TestAutomationFX.Core.Strategies.Technology</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AutomationElementType</Name>
                  <Signature>TestAutomationFX.Core.Strategies.Technology</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Strategies.UIAutomationForWpfOnly</Name>
              <NewName>u</NewName>
              <Method>
                <Original>
                  <Name>GetBestTechnology</Name>
                  <Signature>TestAutomationFX.Core.Strategies.Technology GetBestTechnology (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetBestTechnology</Name>
                  <Signature>TestAutomationFX.Core.Strategies.Technology GetBestTechnology (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMsaaBetterThanUIAutomationTechnology</Name>
                  <Signature>bool IsMsaaBetterThanUIAutomationTechnology (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsMsaaBetterThanUIAutomationTechnology</Name>
                  <Signature>bool IsMsaaBetterThanUIAutomationTechnology (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ConsiderUIAutomation</Name>
                  <Signature>bool ConsiderUIAutomation (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ConsiderUIAutomation</Name>
                  <Signature>bool ConsiderUIAutomation (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Strategies.UITechnologyService</Name>
              <NewName>v</NewName>
              <Field>
                <Original>
                  <Name>m_Instance</Name>
                  <Signature>TestAutomationFX.Core.Strategies.UITechnologyService</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>v</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;BestTechnologyStrategy&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Instance</Name>
                  <Signature>static TestAutomationFX.Core.Strategies.UITechnologyService get_Instance ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static v a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_BestTechnologyStrategy</Name>
                  <Signature>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy get_BestTechnologyStrategy ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_BestTechnologyStrategy</Name>
                  <Signature>void set_BestTechnologyStrategy (TestAutomationFX.Core.Strategies.IBestTechnologyStrategy)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.Strategies.IBestTechnologyStrategy)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Instance</Name>
                  <Signature>TestAutomationFX.Core.Strategies.UITechnologyService</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.Strategies.UITechnologyService</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>BestTechnologyStrategy</Name>
                  <Signature>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestDataFile</Name>
              <NewName>TestAutomationFX.Core.TestDataFile</NewName>
              <Field>
                <Original>
                  <Name>&lt;HasHeaderRow&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;TestDataTable&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;FilePath&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_HasHeaderRow</Name>
                  <Signature>bool get_HasHeaderRow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_HasHeaderRow</Name>
                  <Signature>bool get_HasHeaderRow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_HasHeaderRow</Name>
                  <Signature>void set_HasHeaderRow (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_HasHeaderRow</Name>
                  <Signature>void set_HasHeaderRow (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestDataTable</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable get_TestDataTable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestDataTable</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable get_TestDataTable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestDataTable</Name>
                  <Signature>void set_TestDataTable (TestAutomationFX.Core.TestDataTable)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestDataTable</Name>
                  <Signature>void set_TestDataTable (TestAutomationFX.Core.TestDataTable)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_FilePath</Name>
                  <Signature>string get_FilePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_FilePath</Name>
                  <Signature>string get_FilePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_FilePath</Name>
                  <Signature>void set_FilePath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_FilePath</Name>
                  <Signature>void set_FilePath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReadFile</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable ReadFile (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReadFile</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable ReadFile (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>HasHeaderRow</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>HasHeaderRow</Name>
                  <Signature>bool HasHeaderRow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestDataTable</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestDataTable</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable TestDataTable</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>FilePath</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>FilePath</Name>
                  <Signature>string FilePath</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestDataFileCSV</Name>
              <NewName>TestAutomationFX.Core.TestDataFileCSV</NewName>
              <Field>
                <Original>
                  <Name>separator</Name>
                  <Signature>char</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>char</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>ReadFile</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable ReadFile (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReadFile</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable ReadFile (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ParseData</Name>
                  <Signature>void ParseData (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ParseHeaders</Name>
                  <Signature>void ParseHeaders (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestDataFileExcel</Name>
              <NewName>TestAutomationFX.Core.TestDataFileExcel</NewName>
              <Field>
                <Original>
                  <Name>MaxColumnCount</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MaxRowCount</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ExcelFile</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ExcelApplication</Name>
                  <Signature>[Microsoft.Office.Interop.Excel] Microsoft.Office.Interop.Excel.Application</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[Microsoft.Office.Interop.Excel] Microsoft.Office.Interop.Excel.Application</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ExcelWorkBook</Name>
                  <Signature>[Microsoft.Office.Interop.Excel] Microsoft.Office.Interop.Excel.Workbook</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[Microsoft.Office.Interop.Excel] Microsoft.Office.Interop.Excel.Workbook</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ExcelWorksheet</Name>
                  <Signature>[Microsoft.Office.Interop.Excel] Microsoft.Office.Interop.Excel.Worksheet</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[Microsoft.Office.Interop.Excel] Microsoft.Office.Interop.Excel.Worksheet</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>currentRowIndex</Name>
                  <Signature>unsigned int16</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>unsigned int16</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;StartColumn&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;StartRow&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ColumnCount&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;RowCount&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;RangeName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_StartColumn</Name>
                  <Signature>int32 get_StartColumn ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_StartColumn</Name>
                  <Signature>int32 get_StartColumn ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_StartColumn</Name>
                  <Signature>void set_StartColumn (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_StartColumn</Name>
                  <Signature>void set_StartColumn (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_StartRow</Name>
                  <Signature>int32 get_StartRow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_StartRow</Name>
                  <Signature>int32 get_StartRow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_StartRow</Name>
                  <Signature>void set_StartRow (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_StartRow</Name>
                  <Signature>void set_StartRow (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ColumnCount</Name>
                  <Signature>int32 get_ColumnCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ColumnCount</Name>
                  <Signature>int32 get_ColumnCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ColumnCount</Name>
                  <Signature>void set_ColumnCount (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ColumnCount</Name>
                  <Signature>void set_ColumnCount (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RowCount</Name>
                  <Signature>int32 get_RowCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RowCount</Name>
                  <Signature>int32 get_RowCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_RowCount</Name>
                  <Signature>void set_RowCount (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_RowCount</Name>
                  <Signature>void set_RowCount (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RangeName</Name>
                  <Signature>string get_RangeName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RangeName</Name>
                  <Signature>string get_RangeName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_RangeName</Name>
                  <Signature>void set_RangeName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_RangeName</Name>
                  <Signature>void set_RangeName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReadFile</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable ReadFile (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReadFile</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable ReadFile (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupRangeVariables</Name>
                  <Signature>void SetupRangeVariables ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetupRangeVariables</Name>
                  <Signature>void SetupRangeVariables ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindColumnCount</Name>
                  <Signature>void FindColumnCount ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindRowCount</Name>
                  <Signature>void FindRowCount ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindStartValues</Name>
                  <Signature>void FindStartValues ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCellText</Name>
                  <Signature>string GetCellText (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReadData</Name>
                  <Signature>void ReadData ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeExcel</Name>
                  <Signature>void InitializeExcel (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReadRow</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt; ReadRow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReadRow</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt; ReadRow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCell</Name>
                  <Signature>[Microsoft.Office.Interop.Excel] Microsoft.Office.Interop.Excel.Range GetCell (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetCell</Name>
                  <Signature>[Microsoft.Office.Interop.Excel] Microsoft.Office.Interop.Excel.Range GetCell (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ParseData</Name>
                  <Signature>void ParseData ([mscorlib] System.Collections.Generic.List`1&lt; string &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([mscorlib] System.Collections.Generic.List`1&lt; string &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ParseHeaders</Name>
                  <Signature>void ParseHeaders ([mscorlib] System.Collections.Generic.List`1&lt; string &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ([mscorlib] System.Collections.Generic.List`1&lt; string &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>StartColumn</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>StartColumn</Name>
                  <Signature>int32 StartColumn</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>StartRow</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>StartRow</Name>
                  <Signature>int32 StartRow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ColumnCount</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>ColumnCount</Name>
                  <Signature>int32 ColumnCount</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RowCount</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>RowCount</Name>
                  <Signature>int32 RowCount</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RangeName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>RangeName</Name>
                  <Signature>string RangeName</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestDataFileFactory</Name>
              <NewName>TestAutomationFX.Core.TestDataFileFactory</NewName>
              <Method>
                <Original>
                  <Name>ReadFile</Name>
                  <Signature>static TestAutomationFX.Core.TestDataFile ReadFile (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReadFile</Name>
                  <Signature>static TestAutomationFX.Core.TestDataFile ReadFile (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetTestDataFile</Name>
                  <Signature>static TestAutomationFX.Core.TestDataFile GetTestDataFile (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static TestAutomationFX.Core.TestDataFile a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestDataRow</Name>
              <NewName>TestAutomationFX.Core.TestDataRow</NewName>
              <Field>
                <Original>
                  <Name>m_Values</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;TestDataTable&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_TestDataTable</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable get_TestDataTable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestDataTable</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable get_TestDataTable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestDataTable</Name>
                  <Signature>void set_TestDataTable (TestAutomationFX.Core.TestDataTable)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestDataTable</Name>
                  <Signature>void set_TestDataTable (TestAutomationFX.Core.TestDataTable)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Values</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt; get_Values ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Values</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt; get_Values ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Item</Name>
                  <Signature>string get_Item (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Item</Name>
                  <Signature>string get_Item (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetDataIndexFromName</Name>
                  <Signature>int32 GetDataIndexFromName (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32 a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Item</Name>
                  <Signature>string get_Item (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Item</Name>
                  <Signature>string get_Item (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>TestDataTable</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestDataTable</Name>
                  <Signature>TestAutomationFX.Core.TestDataTable TestDataTable</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Values</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>Values</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt; Values</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Item</Name>
                  <Signature>string (string)</Signature>
                </Original>
                <Obfuscated>
                  <Name>Item</Name>
                  <Signature>string Item (string)</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Item</Name>
                  <Signature>string (int32)</Signature>
                </Original>
                <Obfuscated>
                  <Name>Item</Name>
                  <Signature>string Item (int32)</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestDataTable</Name>
              <NewName>TestAutomationFX.Core.TestDataTable</NewName>
              <Field>
                <Original>
                  <Name>m_Headers</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestDataRows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.TestDataRow &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.TestDataRow &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Headers</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt; get_Headers ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Headers</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt; get_Headers ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestDataRows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.TestDataRow &gt; get_TestDataRows ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestDataRows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.TestDataRow &gt; get_TestDataRows ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Headers</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>Headers</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt; Headers</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestDataRows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.TestDataRow &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestDataRows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.TestDataRow &gt; TestDataRows</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.EventHelperBase</Name>
              <NewName>TestAutomationFX.Core.TestRunner.EventHelperBase</NewName>
              <Field>
                <Original>
                  <Name>m_ManualEvent</Name>
                  <Signature>[mscorlib] System.Threading.ManualResetEvent</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Threading.ManualResetEvent</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Set</Name>
                  <Signature>bool Set ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Set</Name>
                  <Signature>bool Set ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Reset</Name>
                  <Signature>bool Reset ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Reset</Name>
                  <Signature>bool Reset ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitOne</Name>
                  <Signature>bool WaitOne ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitOne</Name>
                  <Signature>bool WaitOne ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitOne</Name>
                  <Signature>bool WaitOne (int32, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitOne</Name>
                  <Signature>bool WaitOne (int32, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitOne</Name>
                  <Signature>bool WaitOne ([mscorlib] System.TimeSpan, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitOne</Name>
                  <Signature>bool WaitOne ([mscorlib] System.TimeSpan, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.LogLevel</Name>
              <NewName>TestAutomationFX.Core.LogLevel</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Fatal</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Fatal</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Error</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Error</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Warning</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Warning</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Success</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Success</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Information</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Information</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Event</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Event</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Debug</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Debug</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.MsaaObject</Name>
              <NewName>TestAutomationFX.Core.MsaaObject</NewName>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Accessible</Name>
                  <Signature>[Accessibility] Accessibility.IAccessible</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[Accessibility] Accessibility.IAccessible</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ChildId</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_WindowHandle</Name>
                  <Signature>native int</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>native int</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Index</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CachedParent</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CachedValue</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Cached</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_BadMsaaWindowClassnames</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CachedChildren</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;CachedWindow&gt;k__BackingField</Name>
                  <Signature>native int</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>native int</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_CachedWindow</Name>
                  <Signature>native int get_CachedWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CachedWindow</Name>
                  <Signature>native int get_CachedWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CachedWindow</Name>
                  <Signature>void set_CachedWindow (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CachedWindow</Name>
                  <Signature>void set_CachedWindow (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRootMsaaObjectFromWindow</Name>
                  <Signature>static TestAutomationFX.Core.MsaaObject GetRootMsaaObjectFromWindow (native int)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static TestAutomationFX.Core.MsaaObject a (native int)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetFirstAvailableMsaaObjectWithRole</Name>
                  <Signature>static TestAutomationFX.Core.MsaaObject GetFirstAvailableMsaaObjectWithRole (native int, [System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static TestAutomationFX.Core.MsaaObject a (native int, [System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ChildSupportsRoleAndIsVisible</Name>
                  <Signature>static bool ChildSupportsRoleAndIsVisible (TestAutomationFX.Core.MsaaObject, [System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (TestAutomationFX.Core.MsaaObject, [System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([Accessibility] Accessibility.IAccessible)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([Accessibility] Accessibility.IAccessible)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([Accessibility] Accessibility.IAccessible, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([Accessibility] Accessibility.IAccessible, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Cached</Name>
                  <Signature>bool get_Cached ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Cached</Name>
                  <Signature>void set_Cached (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RefreshCache</Name>
                  <Signature>void RefreshCache ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RefreshCache</Name>
                  <Signature>void RefreshCache ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupObjectFromPointNative</Name>
                  <Signature>void SetupObjectFromPointNative (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupObjectFromPoint</Name>
                  <Signature>void SetupObjectFromPoint (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Accessible</Name>
                  <Signature>[Accessibility] Accessibility.IAccessible get_Accessible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Accessible</Name>
                  <Signature>[Accessibility] Accessibility.IAccessible get_Accessible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Accessible</Name>
                  <Signature>void set_Accessible ([Accessibility] Accessibility.IAccessible)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Accessible</Name>
                  <Signature>void set_Accessible ([Accessibility] Accessibility.IAccessible)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ChildId</Name>
                  <Signature>int32 get_ChildId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ChildId</Name>
                  <Signature>int32 get_ChildId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ChildId</Name>
                  <Signature>void set_ChildId (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ChildId</Name>
                  <Signature>void set_ChildId (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ChildFromPoint</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject ChildFromPoint (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject a (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ChildFromPoint</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject ChildFromPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject a ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Value</Name>
                  <Signature>string get_Value ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Value</Name>
                  <Signature>string get_Value ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Parent</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_Parent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Parent</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_Parent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CachedParent</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_CachedParent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CachedParent</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_CachedParent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CachedParent</Name>
                  <Signature>void set_CachedParent (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CachedParent</Name>
                  <Signature>void set_CachedParent (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle GetBounds ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle GetBounds ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TryCalculateBoundsForListItems</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle TryCalculateBoundsForListItems ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TryCalculateBoundsForListItems</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle TryCalculateBoundsForListItems ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; get_Children ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; get_Children ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CachedChildren</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; get_CachedChildren ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CachedChildren</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; get_CachedChildren ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CachedChildren</Name>
                  <Signature>void set_CachedChildren ([mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CachedChildren</Name>
                  <Signature>void set_CachedChildren ([mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetChildrenFromAccessibleChildren</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; GetChildrenFromAccessibleChildren ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetChildrenFromGetAccChild</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; GetChildrenFromGetAccChild ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetChildrenFromAccNavigate</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; GetChildrenFromAccNavigate ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ChildCount</Name>
                  <Signature>int32 get_ChildCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ChildCount</Name>
                  <Signature>int32 get_ChildCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_WindowHandle</Name>
                  <Signature>native int get_WindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_WindowHandle</Name>
                  <Signature>native int get_WindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Window</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_Window ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Window</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_Window ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoDefaultAction</Name>
                  <Signature>void DoDefaultAction ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoDefaultAction</Name>
                  <Signature>void DoDefaultAction ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DefaultAction</Name>
                  <Signature>string get_DefaultAction ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DefaultAction</Name>
                  <Signature>string get_DefaultAction ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindDescendantByRole</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject FindDescendantByRole ([System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindDescendantByRole</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject FindDescendantByRole ([System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindChildrenByRole</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; FindChildrenByRole ([System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindChildrenByRole</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; FindChildrenByRole ([System.Windows.Forms] System.Windows.Forms.AccessibleRole)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindDescendantByNameFast</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject FindDescendantByNameFast (string, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindDescendantByNameFast</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject FindDescendantByNameFast (string, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindDescendantByName</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject FindDescendantByName (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindDescendantByName</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject FindDescendantByName (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsVisible</Name>
                  <Signature>bool get_IsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsVisible</Name>
                  <Signature>bool get_IsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsUnavailable</Name>
                  <Signature>bool get_IsUnavailable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsUnavailable</Name>
                  <Signature>bool get_IsUnavailable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsCollapsed</Name>
                  <Signature>bool get_IsCollapsed ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsCollapsed</Name>
                  <Signature>bool get_IsCollapsed ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsExpanded</Name>
                  <Signature>bool get_IsExpanded ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsExpanded</Name>
                  <Signature>bool get_IsExpanded ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsSelected</Name>
                  <Signature>bool get_IsSelected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsSelected</Name>
                  <Signature>bool get_IsSelected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsSelectable</Name>
                  <Signature>bool get_IsSelectable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsSelectable</Name>
                  <Signature>bool get_IsSelectable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsChecked</Name>
                  <Signature>bool get_IsChecked ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsChecked</Name>
                  <Signature>bool get_IsChecked ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsFocused</Name>
                  <Signature>bool get_IsFocused ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsFocused</Name>
                  <Signature>bool get_IsFocused ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsFocusable</Name>
                  <Signature>bool get_IsFocusable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsFocusable</Name>
                  <Signature>bool get_IsFocusable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HasState</Name>
                  <Signature>bool HasState ([System.Windows.Forms] System.Windows.Forms.AccessibleStates)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ([System.Windows.Forms] System.Windows.Forms.AccessibleStates)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_State</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleStates get_State ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_State</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleStates get_State ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Role</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole get_Role ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Role</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole get_Role ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Index</Name>
                  <Signature>void set_Index (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Index</Name>
                  <Signature>void set_Index (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetIndex</Name>
                  <Signature>int32 GetIndex ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32 a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindDescendantFast</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject FindDescendantFast (TestAutomationFX.Core.FindMsaaInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindDescendantFast</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject FindDescendantFast (TestAutomationFX.Core.FindMsaaInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindDescendantsFast</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; FindDescendantsFast (TestAutomationFX.Core.FindMsaaInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindDescendantsFast</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; FindDescendantsFast (TestAutomationFX.Core.FindMsaaInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindDescendantFastInternal</Name>
                  <Signature>void FindDescendantFastInternal (TestAutomationFX.Core.FindMsaaInfo, [mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.FindMsaaInfo, [mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindDescendant</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject FindDescendant (TestAutomationFX.Core.FindMsaaInfo, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindDescendant</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject FindDescendant (TestAutomationFX.Core.FindMsaaInfo, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMatch</Name>
                  <Signature>bool IsMatch (TestAutomationFX.Core.FindMsaaInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsMatch</Name>
                  <Signature>bool IsMatch (TestAutomationFX.Core.FindMsaaInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsBadWindow</Name>
                  <Signature>static bool IsBadWindow (native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>CachedWindow</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>CachedWindow</Name>
                  <Signature>native int CachedWindow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Cached</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Accessible</Name>
                  <Signature>[Accessibility] Accessibility.IAccessible</Signature>
                </Original>
                <Obfuscated>
                  <Name>Accessible</Name>
                  <Signature>[Accessibility] Accessibility.IAccessible Accessible</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ChildId</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>ChildId</Name>
                  <Signature>int32 ChildId</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Name</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Name</Name>
                  <Signature>string Name</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Value</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Value</Name>
                  <Signature>string Value</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Description</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Description</Name>
                  <Signature>string Description</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Parent</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>Parent</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject Parent</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CachedParent</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>CachedParent</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject CachedParent</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle Bounds</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; Children</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CachedChildren</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>CachedChildren</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; CachedChildren</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ChildCount</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>ChildCount</Name>
                  <Signature>int32 ChildCount</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>WindowHandle</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>WindowHandle</Name>
                  <Signature>native int WindowHandle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Window</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                </Original>
                <Obfuscated>
                  <Name>Window</Name>
                  <Signature>TestAutomationFX.Core.WindowController Window</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DefaultAction</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>DefaultAction</Name>
                  <Signature>string DefaultAction</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsVisible</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsVisible</Name>
                  <Signature>bool IsVisible</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsUnavailable</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsUnavailable</Name>
                  <Signature>bool IsUnavailable</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsCollapsed</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsCollapsed</Name>
                  <Signature>bool IsCollapsed</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsExpanded</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsExpanded</Name>
                  <Signature>bool IsExpanded</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsSelected</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsSelected</Name>
                  <Signature>bool IsSelected</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsSelectable</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsSelectable</Name>
                  <Signature>bool IsSelectable</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsChecked</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsChecked</Name>
                  <Signature>bool IsChecked</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsFocused</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsFocused</Name>
                  <Signature>bool IsFocused</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsFocusable</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsFocusable</Name>
                  <Signature>bool IsFocusable</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>State</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleStates</Signature>
                </Original>
                <Obfuscated>
                  <Name>State</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleStates State</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Role</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole</Signature>
                </Original>
                <Obfuscated>
                  <Name>Role</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.AccessibleRole Role</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Index</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Index</Name>
                  <Signature>int32 Index</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Constants</Name>
              <NewName>TestAutomationFX.Core.Constants</NewName>
              <Field>
                <Original>
                  <Name>IndexUnknown</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IndexUnknown</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ControlIdUnknown</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ControlIdUnknown</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>DefaultTimeOut</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DefaultTimeOut</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MatchedPropertyCategoryName</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MatchedPropertyCategoryName</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SidebarDesktopWindowClassName</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SidebarDesktopWindowClassName</Name>
                  <Signature>string</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>BringToFrontOnAttachDescription</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>StartAutomaticallyDescription</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>CommandLineArgumentsDescription</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WorkingDirectoryDescription</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ImagePathDescription</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ProcessNameDescription</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>UsedMatchedProperties</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>IsDelphiSupportEnabledDescription</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>IsDelphiSupportCategory</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>UltraGridPropertyCategory</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>UltraExpandableGroupBoxPropertyCategory</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TestCancelledByUser</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ExitingTestCancelledByUser</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>FatalWindowParentChainxception</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>UltraExpandableGroupBoxTypeName</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>UltraTextEditorTypeName</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>UltraGridTypeName</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>UltraTreeTypeName</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>DataGridViewTypeName</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>string</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>AddParentWindowExceptions</Name>
                  <Signature>string[]</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddParentWindowExceptions</Name>
                  <Signature>string[]</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WaitForWindowDelay</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForWindowDelay</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>DesignTimeWaitForWindowDelay</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DesignTimeWaitForWindowDelay</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>PrePollingTimerDelay</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>PrePollingTimerDelay</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>PollingSleepIntervalShort</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>PollingSleepIntervalShort</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>PollingSleepIntervalMedium</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>PollingSleepIntervalMedium</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>PollingSleepIntervalLong</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>PollingSleepIntervalLong</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MinimumTimeToAttachAfterFailure</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MinimumTimeToAttachAfterFailure</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>KeyboardEventDelay</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyboardEventDelay</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SleepTimeBetweenCheckClicks</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SleepTimeBetweenCheckClicks</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MinimumDistanceToMouseUpToBeConsideredDrag</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MinimumDistanceToMouseUpToBeConsideredDrag</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>BeforeActionDelay</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>BeforeActionDelay</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>BetaExpireDate</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>BetaModeEnabled</Name>
                  <Signature>bool</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>EnsureNetInjectorNotLoadedImplicitly</Name>
                  <Signature>bool</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>EnsureNetInjectorNotLoadedImplicitly</Name>
                  <Signature>bool</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>RemoveLocalNetInjector</Name>
                  <Signature>bool</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RemoveLocalNetInjector</Name>
                  <Signature>bool</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>ExtractTime</Name>
                  <Signature>static [mscorlib] System.DateTime ExtractTime ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.DateTime a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.ITestStatusLogger</Name>
              <NewName>TestAutomationFX.Core.ITestStatusLogger</NewName>
              <Method>
                <Original>
                  <Name>ReportStatus</Name>
                  <Signature>void ReportStatus (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReportStatus</Name>
                  <Signature>void ReportStatus (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReportWaitProgress</Name>
                  <Signature>void ReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReportWaitProgress</Name>
                  <Signature>void ReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.MainWindowFinder</Name>
              <NewName>TestAutomationFX.Core.MainWindowFinder</NewName>
              <Field>
                <Original>
                  <Name>bestHandle</Name>
                  <Signature>native int</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>native int</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>processId</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>EnumWindowsCallback</Name>
                  <Signature>bool EnumWindowsCallback (native int, native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (native int, native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindMainWindow</Name>
                  <Signature>native int FindMainWindow (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindMainWindow</Name>
                  <Signature>native int FindMainWindow (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMainWindow</Name>
                  <Signature>bool IsMainWindow (native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MainWindowHandle</Name>
                  <Signature>native int get_MainWindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MainWindowHandle</Name>
                  <Signature>native int get_MainWindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForMainWindow</Name>
                  <Signature>static native int WaitForMainWindow ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForMainWindow</Name>
                  <Signature>static native int WaitForMainWindow ([System] System.Diagnostics.Process)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForMainWindow</Name>
                  <Signature>static native int WaitForMainWindow ([System] System.Diagnostics.Process, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForMainWindow</Name>
                  <Signature>static native int WaitForMainWindow ([System] System.Diagnostics.Process, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>MainWindowHandle</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>MainWindowHandle</Name>
                  <Signature>native int MainWindowHandle</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.KeyModifiers</Name>
              <NewName>TestAutomationFX.Core.KeyModifiers</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>None</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>None</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Alt</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Alt</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Ctrl</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Ctrl</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Shift</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Shift</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Win</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Win</Name>
                  <Signature>TestAutomationFX.Core.KeyModifiers</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.NativeMethods</Name>
              <NewName>TestAutomationFX.Core.NativeMethods</NewName>
              <Field>
                <Original>
                  <Name>KEYEVENTF_KEYUP</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KEYEVENTF_KEYUP</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_LBUTTONDOWN</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WM_LBUTTONDOWN</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_LBUTTONUP</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WM_LBUTTONUP</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_CHAR</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WM_CHAR</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_SETTEXT</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WM_SETTEXT</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_GETTEXT</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WM_GETTEXT</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_GETTEXTLENGTH</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WM_GETTEXTLENGTH</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_USER</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WM_USER</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_KEYDOWN</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WM_KEYDOWN</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>CB_SELECTSTRING</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CB_SELECTSTRING</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>LB_FINDSTRING</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>LB_FINDSTRING</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_COMMAND</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WM_COMMAND</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>GWL_STYLE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GWL_STYLE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>GWL_EXSTYLE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GWL_EXSTYLE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>GWL_ID</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GWL_ID</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>GW_OWNER</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GW_OWNER</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WS_EX_TRANSPARENT</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WS_EX_TRANSPARENT</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WS_MAXIMIZE</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WS_MAXIMIZE</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WS_MINIMIZE</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WS_MINIMIZE</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WS_BORDER</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WS_BORDER</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WS_DLGFRAME</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WS_DLGFRAME</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WS_CAPTION</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WS_CAPTION</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>HWND_BOTTOM</Name>
                  <Signature>native int</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>HWND_BOTTOM</Name>
                  <Signature>native int</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>HWND_MESSAGE</Name>
                  <Signature>native int</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>HWND_MESSAGE</Name>
                  <Signature>native int</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>HWND_NOTOPMOST</Name>
                  <Signature>native int</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>HWND_NOTOPMOST</Name>
                  <Signature>native int</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>HWND_TOP</Name>
                  <Signature>native int</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>HWND_TOP</Name>
                  <Signature>native int</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>HWND_TOPMOST</Name>
                  <Signature>native int</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>HWND_TOPMOST</Name>
                  <Signature>native int</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SWP_HIDEWINDOW</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SWP_HIDEWINDOW</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SWP_NOACTIVATE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SWP_NOACTIVATE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SWP_NOMOVE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SWP_NOMOVE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SWP_NOOWNERZORDER</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SWP_NOOWNERZORDER</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SWP_NOSIZE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SWP_NOSIZE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SWP_NOZORDER</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SWP_NOZORDER</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SWP_SHOWWINDOW</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SWP_SHOWWINDOW</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>DCX_WINDOW</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DCX_WINDOW</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>DCX_CACHE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DCX_CACHE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>DCX_INTERSECTRGN</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DCX_INTERSECTRGN</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>DCX_LOCKWINDOWUPDATE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DCX_LOCKWINDOWUPDATE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>DCX_UNDOCUMENTED</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DCX_UNDOCUMENTED</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SW_MAXIMIZE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SW_MAXIMIZE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SW_MINIMIZE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SW_MINIMIZE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SW_SHOWNOACTIVATE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SW_SHOWNOACTIVATE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SW_RESTORE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SW_RESTORE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SW_SHOWDEFAULT</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SW_SHOWDEFAULT</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>GA_PARENT</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GA_PARENT</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>GA_ROOT</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GA_ROOT</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>GA_ROOTOWNER</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GA_ROOTOWNER</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>RealSetProcessDPIAware</Name>
                  <Signature>static bool RealSetProcessDPIAware ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetProcessDPIAware</Name>
                  <Signature>static bool SetProcessDPIAware ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static bool b ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetWindowThreadProcessId</Name>
                  <Signature>static int32 GetWindowThreadProcessId ([mscorlib] System.Runtime.InteropServices.HandleRef, [out] int32&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetWindowThreadProcessId</Name>
                  <Signature>static int32 GetWindowThreadProcessId ([mscorlib] System.Runtime.InteropServices.HandleRef, [out] int32&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EnumWindows</Name>
                  <Signature>static bool EnumWindows (TestAutomationFX.Core.NativeMethods/EnumThreadWindowsCallback, native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>EnumWindows</Name>
                  <Signature>static bool EnumWindows (TestAutomationFX.Core.NativeMethods/EnumThreadWindowsCallback, native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetWindow</Name>
                  <Signature>static native int GetWindow ([mscorlib] System.Runtime.InteropServices.HandleRef, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetWindow</Name>
                  <Signature>static native int GetWindow ([mscorlib] System.Runtime.InteropServices.HandleRef, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsWindowVisible</Name>
                  <Signature>static bool IsWindowVisible ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsWindowVisible</Name>
                  <Signature>static bool IsWindowVisible ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetActiveWindow</Name>
                  <Signature>static native int SetActiveWindow ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetActiveWindow</Name>
                  <Signature>static native int SetActiveWindow ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetForegroundWindow</Name>
                  <Signature>static bool SetForegroundWindow ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetForegroundWindow</Name>
                  <Signature>static bool SetForegroundWindow ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetForegroundWindow</Name>
                  <Signature>static native int GetForegroundWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetForegroundWindow</Name>
                  <Signature>static native int GetForegroundWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindWindow</Name>
                  <Signature>static native int FindWindow (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindWindow</Name>
                  <Signature>static native int FindWindow (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SendMessageTimeout</Name>
                  <Signature>static native int SendMessageTimeout (native int, int32, native int, native int, int32, int32, [out] native int&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SendMessageTimeout</Name>
                  <Signature>static native int SendMessageTimeout (native int, int32, native int, native int, int32, int32, [out] native int&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Keybd_event</Name>
                  <Signature>static void Keybd_event (unsigned int8, unsigned int8, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Keybd_event</Name>
                  <Signature>static void Keybd_event (unsigned int8, unsigned int8, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Mouse_event</Name>
                  <Signature>static void Mouse_event (int32, int32, int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Mouse_event</Name>
                  <Signature>static void Mouse_event (int32, int32, int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetDlgItem</Name>
                  <Signature>static native int GetDlgItem ([mscorlib] System.Runtime.InteropServices.HandleRef, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetDlgItem</Name>
                  <Signature>static native int GetDlgItem ([mscorlib] System.Runtime.InteropServices.HandleRef, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>VkKeyScan</Name>
                  <Signature>static int16 VkKeyScan (char)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VkKeyScan</Name>
                  <Signature>static int16 VkKeyScan (char)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindWindowEx</Name>
                  <Signature>static native int FindWindowEx (native int, native int, string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindWindowEx</Name>
                  <Signature>static native int FindWindowEx (native int, native int, string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>PostMessage</Name>
                  <Signature>static int32 PostMessage (native int, unsigned int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>PostMessage</Name>
                  <Signature>static int32 PostMessage (native int, unsigned int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SendMessage1</Name>
                  <Signature>static bool SendMessage1 (native int, unsigned int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SendMessage1</Name>
                  <Signature>static bool SendMessage1 (native int, unsigned int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SendMessage2</Name>
                  <Signature>static bool SendMessage2 (native int, unsigned int32, int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SendMessage2</Name>
                  <Signature>static bool SendMessage2 (native int, unsigned int32, int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SendMessage3</Name>
                  <Signature>static int32 SendMessage3 (native int, unsigned int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SendMessage3</Name>
                  <Signature>static int32 SendMessage3 (native int, unsigned int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SendMessage4</Name>
                  <Signature>static int32 SendMessage4 (native int, unsigned int32, int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SendMessage4</Name>
                  <Signature>static int32 SendMessage4 (native int, unsigned int32, int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SendMessage5</Name>
                  <Signature>static int32 SendMessage5 (native int, unsigned int32, int32, [mscorlib] System.Text.StringBuilder)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SendMessage5</Name>
                  <Signature>static int32 SendMessage5 (native int, unsigned int32, int32, [mscorlib] System.Text.StringBuilder)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetFocus</Name>
                  <Signature>static native int SetFocus ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetFocus</Name>
                  <Signature>static native int SetFocus ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLastActivePopup</Name>
                  <Signature>static native int GetLastActivePopup (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetLastActivePopup</Name>
                  <Signature>static native int GetLastActivePopup (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMenu</Name>
                  <Signature>static native int GetMenu (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetMenu</Name>
                  <Signature>static native int GetMenu (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetSubMenu</Name>
                  <Signature>static native int GetSubMenu (native int, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetSubMenu</Name>
                  <Signature>static native int GetSubMenu (native int, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMenuItemID</Name>
                  <Signature>static int32 GetMenuItemID (native int, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetMenuItemID</Name>
                  <Signature>static int32 GetMenuItemID (native int, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetTopWindow</Name>
                  <Signature>static native int GetTopWindow (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetTopWindow</Name>
                  <Signature>static native int GetTopWindow (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetWindowLong</Name>
                  <Signature>static int32 GetWindowLong (native int, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetWindowLong</Name>
                  <Signature>static int32 GetWindowLong (native int, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetWindowLong</Name>
                  <Signature>static int32 SetWindowLong (native int, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetWindowLong</Name>
                  <Signature>static int32 SetWindowLong (native int, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetWindowPos</Name>
                  <Signature>static bool SetWindowPos (native int, native int, int32, int32, int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetWindowPos</Name>
                  <Signature>static bool SetWindowPos (native int, native int, int32, int32, int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowWindow</Name>
                  <Signature>static bool ShowWindow (native int, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ShowWindow</Name>
                  <Signature>static bool ShowWindow (native int, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WindowFromPoint</Name>
                  <Signature>static native int WindowFromPoint (TestAutomationFX.Core.NativeMethods/POINTSTRUCT)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WindowFromPoint</Name>
                  <Signature>static native int WindowFromPoint (TestAutomationFX.Core.NativeMethods/POINTSTRUCT)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetWindowRect</Name>
                  <Signature>static bool GetWindowRect ([mscorlib] System.Runtime.InteropServices.HandleRef, [out] TestAutomationFX.Core.NativeMethods/RECT&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetWindowRect</Name>
                  <Signature>static bool GetWindowRect ([mscorlib] System.Runtime.InteropServices.HandleRef, [out] TestAutomationFX.Core.NativeMethods/RECT&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetWindowText</Name>
                  <Signature>static int32 GetWindowText ([mscorlib] System.Runtime.InteropServices.HandleRef, [mscorlib] System.Text.StringBuilder, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetWindowText</Name>
                  <Signature>static int32 GetWindowText ([mscorlib] System.Runtime.InteropServices.HandleRef, [mscorlib] System.Text.StringBuilder, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetWindowTextLength</Name>
                  <Signature>static int32 GetWindowTextLength ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetWindowTextLength</Name>
                  <Signature>static int32 GetWindowTextLength ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetParent</Name>
                  <Signature>static native int GetParent ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetParent</Name>
                  <Signature>static native int GetParent ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsChild</Name>
                  <Signature>static bool IsChild ([mscorlib] System.Runtime.InteropServices.HandleRef, [mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsChild</Name>
                  <Signature>static bool IsChild ([mscorlib] System.Runtime.InteropServices.HandleRef, [mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EnumChildWindows</Name>
                  <Signature>static bool EnumChildWindows ([mscorlib] System.Runtime.InteropServices.HandleRef, TestAutomationFX.Core.NativeMethods/EnumChildrenCallback, [mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>EnumChildWindows</Name>
                  <Signature>static bool EnumChildWindows ([mscorlib] System.Runtime.InteropServices.HandleRef, TestAutomationFX.Core.NativeMethods/EnumChildrenCallback, [mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AccessibleObjectFromPoint</Name>
                  <Signature>static int32 AccessibleObjectFromPoint (int32, int32, [out] [Accessibility] Accessibility.IAccessible&amp;, [out] object&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AccessibleObjectFromPoint</Name>
                  <Signature>static int32 AccessibleObjectFromPoint (int32, int32, [out] [Accessibility] Accessibility.IAccessible&amp;, [out] object&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AccessibleObjectFromWindow</Name>
                  <Signature>static int32 AccessibleObjectFromWindow (native int, unsigned int32, [out] [mscorlib] System.Guid&amp;, [out] [Accessibility] Accessibility.IAccessible&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AccessibleObjectFromWindow</Name>
                  <Signature>static int32 AccessibleObjectFromWindow (native int, unsigned int32, [out] [mscorlib] System.Guid&amp;, [out] [Accessibility] Accessibility.IAccessible&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AccessibleChildren</Name>
                  <Signature>static int32 AccessibleChildren ([Accessibility] Accessibility.IAccessible, int32, int32, object[], [out] int32&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AccessibleChildren</Name>
                  <Signature>static int32 AccessibleChildren ([Accessibility] Accessibility.IAccessible, int32, int32, object[], [out] int32&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WindowFromAccessibleObject</Name>
                  <Signature>static int32 WindowFromAccessibleObject ([Accessibility] Accessibility.IAccessible, [out] native int&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WindowFromAccessibleObject</Name>
                  <Signature>static int32 WindowFromAccessibleObject ([Accessibility] Accessibility.IAccessible, [out] native int&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetClassName</Name>
                  <Signature>static string GetClassName (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetClassName</Name>
                  <Signature>static string GetClassName (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetClassName</Name>
                  <Signature>static int32 GetClassName (native int, [mscorlib] System.Text.StringBuilder, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static int32 a (native int, [mscorlib] System.Text.StringBuilder, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReleaseCapture</Name>
                  <Signature>static bool ReleaseCapture ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReleaseCapture</Name>
                  <Signature>static bool ReleaseCapture ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsWindow</Name>
                  <Signature>static bool IsWindow (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsWindow</Name>
                  <Signature>static bool IsWindow (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BitBlt</Name>
                  <Signature>static int32 BitBlt ([mscorlib] System.Runtime.InteropServices.HandleRef, int32, int32, int32, int32, [mscorlib] System.Runtime.InteropServices.HandleRef, int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>BitBlt</Name>
                  <Signature>static int32 BitBlt ([mscorlib] System.Runtime.InteropServices.HandleRef, int32, int32, int32, int32, [mscorlib] System.Runtime.InteropServices.HandleRef, int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IntGetDC</Name>
                  <Signature>static native int IntGetDC ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IntGetDC</Name>
                  <Signature>static native int IntGetDC ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IntGetDCEx</Name>
                  <Signature>static native int IntGetDCEx ([mscorlib] System.Runtime.InteropServices.HandleRef, [mscorlib] System.Runtime.InteropServices.HandleRef, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IntGetDCEx</Name>
                  <Signature>static native int IntGetDCEx ([mscorlib] System.Runtime.InteropServices.HandleRef, [mscorlib] System.Runtime.InteropServices.HandleRef, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IntDeleteDC</Name>
                  <Signature>static bool IntDeleteDC ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IntDeleteDC</Name>
                  <Signature>static bool IntDeleteDC ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Beep</Name>
                  <Signature>static bool Beep (unsigned int32, unsigned int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Beep</Name>
                  <Signature>static bool Beep (unsigned int32, unsigned int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsWindowEnabled</Name>
                  <Signature>static bool IsWindowEnabled ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsWindowEnabled</Name>
                  <Signature>static bool IsWindowEnabled ([mscorlib] System.Runtime.InteropServices.HandleRef)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetFocus</Name>
                  <Signature>static native int GetFocus ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetFocus</Name>
                  <Signature>static native int GetFocus ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetGUIThreadInfo</Name>
                  <Signature>static bool GetGUIThreadInfo (unsigned int32, [out] TestAutomationFX.Core.NativeMethods/GUITHREADINFO&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetGUIThreadInfo</Name>
                  <Signature>static bool GetGUIThreadInfo (unsigned int32, [out] TestAutomationFX.Core.NativeMethods/GUITHREADINFO&amp;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToAscii</Name>
                  <Signature>static int32 ToAscii (int32, int32, unsigned int8[], unsigned int8[], int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ToAscii</Name>
                  <Signature>static int32 ToAscii (int32, int32, unsigned int8[], unsigned int8[], int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetKeyboardState</Name>
                  <Signature>static int32 GetKeyboardState (unsigned int8[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetKeyboardState</Name>
                  <Signature>static int32 GetKeyboardState (unsigned int8[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetKeyState</Name>
                  <Signature>static int16 GetKeyState (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetKeyState</Name>
                  <Signature>static int16 GetKeyState (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MapVirtualKey</Name>
                  <Signature>static unsigned int32 MapVirtualKey (unsigned int32, unsigned int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MapVirtualKey</Name>
                  <Signature>static unsigned int32 MapVirtualKey (unsigned int32, unsigned int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExtractIconEx</Name>
                  <Signature>static int32 ExtractIconEx (string, int32, [out] native int&amp;, [out] native int&amp;, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ExtractIconEx</Name>
                  <Signature>static int32 ExtractIconEx (string, int32, [out] native int&amp;, [out] native int&amp;, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DestroyIcon</Name>
                  <Signature>static bool DestroyIcon (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DestroyIcon</Name>
                  <Signature>static bool DestroyIcon (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetCursorPos</Name>
                  <Signature>static bool SetCursorPos (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetCursorPos</Name>
                  <Signature>static bool SetCursorPos (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsIconic</Name>
                  <Signature>static bool IsIconic (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsIconic</Name>
                  <Signature>static bool IsIconic (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsZoomed</Name>
                  <Signature>static bool IsZoomed (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsZoomed</Name>
                  <Signature>static bool IsZoomed (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetAncestor</Name>
                  <Signature>static native int GetAncestor ([mscorlib] System.Runtime.InteropServices.HandleRef, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetAncestor</Name>
                  <Signature>static native int GetAncestor ([mscorlib] System.Runtime.InteropServices.HandleRef, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetDesktopWindow</Name>
                  <Signature>static native int GetDesktopWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetDesktopWindow</Name>
                  <Signature>static native int GetDesktopWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InternalChildWindowFromPointEx</Name>
                  <Signature>static native int InternalChildWindowFromPointEx ([mscorlib] System.Runtime.InteropServices.HandleRef, TestAutomationFX.Core.NativeMethods/POINTSTRUCT, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static native int a ([mscorlib] System.Runtime.InteropServices.HandleRef, TestAutomationFX.Core.NativeMethods/POINTSTRUCT, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ChildWindowFromPointEx</Name>
                  <Signature>static native int ChildWindowFromPointEx ([mscorlib] System.Runtime.InteropServices.HandleRef, int32, int32, TestAutomationFX.Core.NativeMethods/GetChildAtPointSkip)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ChildWindowFromPointEx</Name>
                  <Signature>static native int ChildWindowFromPointEx ([mscorlib] System.Runtime.InteropServices.HandleRef, int32, int32, TestAutomationFX.Core.NativeMethods/GetChildAtPointSkip)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InternalRealChildWindowFromPoint</Name>
                  <Signature>static native int InternalRealChildWindowFromPoint ([mscorlib] System.Runtime.InteropServices.HandleRef, TestAutomationFX.Core.NativeMethods/POINTSTRUCT)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static native int a ([mscorlib] System.Runtime.InteropServices.HandleRef, TestAutomationFX.Core.NativeMethods/POINTSTRUCT)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RealChildWindowFromPoint</Name>
                  <Signature>static native int RealChildWindowFromPoint ([mscorlib] System.Runtime.InteropServices.HandleRef, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RealChildWindowFromPoint</Name>
                  <Signature>static native int RealChildWindowFromPoint ([mscorlib] System.Runtime.InteropServices.HandleRef, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ScreenToClient</Name>
                  <Signature>static int32 ScreenToClient ([mscorlib] System.Runtime.InteropServices.HandleRef, TestAutomationFX.Core.NativeMethods/POINT)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ScreenToClient</Name>
                  <Signature>static int32 ScreenToClient ([mscorlib] System.Runtime.InteropServices.HandleRef, TestAutomationFX.Core.NativeMethods/POINT)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WindowFromPoint</Name>
                  <Signature>static native int WindowFromPoint (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WindowFromPoint</Name>
                  <Signature>static native int WindowFromPoint (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <NestedType>
                <Name>POINTSTRUCT</Name>
                <NewName>POINTSTRUCT</NewName>
                <Field>
                  <Original>
                    <Name>x</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>x</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>y</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>y</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32, int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32, int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>EnumThreadWindowsCallback</Name>
                <NewName>EnumThreadWindowsCallback</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>bool Invoke (native int, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>bool Invoke (native int, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (native int, native int, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (native int, native int, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>bool EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>bool EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>POINT</Name>
                <NewName>POINT</NewName>
                <Field>
                  <Original>
                    <Name>x</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>x</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>y</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>y</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32, int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32, int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>RECT</Name>
                <NewName>RECT</NewName>
                <Field>
                  <Original>
                    <Name>left</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>left</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>top</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>top</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>right</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>right</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>bottom</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>bottom</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32, int32, int32, int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32, int32, int32, int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ([System.Drawing] System.Drawing.Rectangle)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ([System.Drawing] System.Drawing.Rectangle)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>FromXYWH</Name>
                    <Signature>static TestAutomationFX.Core.NativeMethods/RECT FromXYWH (int32, int32, int32, int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>FromXYWH</Name>
                    <Signature>static TestAutomationFX.Core.NativeMethods/RECT FromXYWH (int32, int32, int32, int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>get_Size</Name>
                    <Signature>[System.Drawing] System.Drawing.Size get_Size ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>get_Size</Name>
                    <Signature>[System.Drawing] System.Drawing.Size get_Size ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>get_Rectangle</Name>
                    <Signature>[System.Drawing] System.Drawing.Rectangle get_Rectangle ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>get_Rectangle</Name>
                    <Signature>[System.Drawing] System.Drawing.Rectangle get_Rectangle ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Property>
                  <Original>
                    <Name>Size</Name>
                    <Signature>[System.Drawing] System.Drawing.Size</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>Size</Name>
                    <Signature>[System.Drawing] System.Drawing.Size Size</Signature>
                  </Obfuscated>
                </Property>
                <Property>
                  <Original>
                    <Name>Rectangle</Name>
                    <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>Rectangle</Name>
                    <Signature>[System.Drawing] System.Drawing.Rectangle Rectangle</Signature>
                  </Obfuscated>
                </Property>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>EnumChildrenCallback</Name>
                <NewName>EnumChildrenCallback</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>bool Invoke (native int, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>bool Invoke (native int, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (native int, native int, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (native int, native int, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>bool EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>bool EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>GUITHREADINFO</Name>
                <NewName>GUITHREADINFO</NewName>
                <Field>
                  <Original>
                    <Name>cbSize</Name>
                    <Signature>unsigned int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>cbSize</Name>
                    <Signature>unsigned int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>flags</Name>
                    <Signature>unsigned int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>flags</Name>
                    <Signature>unsigned int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>hwndActive</Name>
                    <Signature>native int</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>hwndActive</Name>
                    <Signature>native int</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>hwndFocus</Name>
                    <Signature>native int</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>hwndFocus</Name>
                    <Signature>native int</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>hwndCapture</Name>
                    <Signature>native int</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>hwndCapture</Name>
                    <Signature>native int</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>hwndMenuOwner</Name>
                    <Signature>native int</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>hwndMenuOwner</Name>
                    <Signature>native int</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>hwndMoveSize</Name>
                    <Signature>native int</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>hwndMoveSize</Name>
                    <Signature>native int</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>hwndCaret</Name>
                    <Signature>native int</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>hwndCaret</Name>
                    <Signature>native int</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>rcCaret</Name>
                    <Signature>TestAutomationFX.Core.NativeMethods/RECT</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>rcCaret</Name>
                    <Signature>TestAutomationFX.Core.NativeMethods/RECT</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>GetChildAtPointSkip</Name>
                <NewName>GetChildAtPointSkip</NewName>
                <Field>
                  <Original>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Disabled</Name>
                    <Signature>TestAutomationFX.Core.NativeMethods/GetChildAtPointSkip</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Disabled</Name>
                    <Signature>TestAutomationFX.Core.NativeMethods/GetChildAtPointSkip</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Invisible</Name>
                    <Signature>TestAutomationFX.Core.NativeMethods/GetChildAtPointSkip</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invisible</Name>
                    <Signature>TestAutomationFX.Core.NativeMethods/GetChildAtPointSkip</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>None</Name>
                    <Signature>TestAutomationFX.Core.NativeMethods/GetChildAtPointSkip</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>None</Name>
                    <Signature>TestAutomationFX.Core.NativeMethods/GetChildAtPointSkip</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Transparent</Name>
                    <Signature>TestAutomationFX.Core.NativeMethods/GetChildAtPointSkip</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Transparent</Name>
                    <Signature>TestAutomationFX.Core.NativeMethods/GetChildAtPointSkip</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.PollingTimer</Name>
              <NewName>TestAutomationFX.Core.PollingTimer</NewName>
              <Field>
                <Original>
                  <Name>m_Timeout</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_SleepTime</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TimeoutMessage</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_StartTime</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PollResult</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_FirstRun</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_FailOnTimeOut</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (int32, int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (int32, int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Timeout</Name>
                  <Signature>int32 get_Timeout ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Timeout</Name>
                  <Signature>int32 get_Timeout ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Timeout</Name>
                  <Signature>void set_Timeout (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Timeout</Name>
                  <Signature>void set_Timeout (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TimeoutMessage</Name>
                  <Signature>string get_TimeoutMessage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TimeoutMessage</Name>
                  <Signature>string get_TimeoutMessage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TimeoutMessage</Name>
                  <Signature>void set_TimeoutMessage (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TimeoutMessage</Name>
                  <Signature>void set_TimeoutMessage (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TimePassed</Name>
                  <Signature>int32 get_TimePassed ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TimePassed</Name>
                  <Signature>int32 get_TimePassed ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_FailOnTimeOut</Name>
                  <Signature>bool get_FailOnTimeOut ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_FailOnTimeOut</Name>
                  <Signature>bool get_FailOnTimeOut ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_FailOnTimeOut</Name>
                  <Signature>void set_FailOnTimeOut (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_FailOnTimeOut</Name>
                  <Signature>void set_FailOnTimeOut (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TimedOut</Name>
                  <Signature>bool get_TimedOut ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TimedOut</Name>
                  <Signature>bool get_TimedOut ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_KeepRunning</Name>
                  <Signature>bool get_KeepRunning ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_KeepRunning</Name>
                  <Signature>bool get_KeepRunning ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PollResult</Name>
                  <Signature>bool get_PollResult ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_PollResult</Name>
                  <Signature>bool get_PollResult ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_PollResult</Name>
                  <Signature>void set_PollResult (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_PollResult</Name>
                  <Signature>void set_PollResult (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Run</Name>
                  <Signature>bool Run ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Run</Name>
                  <Signature>bool Run ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RunInternal</Name>
                  <Signature>bool RunInternal ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FailWithTimeoutMessage</Name>
                  <Signature>void FailWithTimeoutMessage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FailWithTimeoutMessage</Name>
                  <Signature>void FailWithTimeoutMessage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsTestTerminated</Name>
                  <Signature>bool get_IsTestTerminated ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Timeout</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Timeout</Name>
                  <Signature>int32 Timeout</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TimeoutMessage</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>TimeoutMessage</Name>
                  <Signature>string TimeoutMessage</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TimePassed</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>TimePassed</Name>
                  <Signature>int32 TimePassed</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>FailOnTimeOut</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>FailOnTimeOut</Name>
                  <Signature>bool FailOnTimeOut</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TimedOut</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>TimedOut</Name>
                  <Signature>bool TimedOut</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>KeepRunning</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>KeepRunning</Name>
                  <Signature>bool KeepRunning</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PollResult</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>PollResult</Name>
                  <Signature>bool PollResult</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsTestTerminated</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Properties.Resources</Name>
              <NewName>TestAutomationFX.Core.Properties.Resources</NewName>
              <Field>
                <Original>
                  <Name>resourceMan</Name>
                  <Signature>[mscorlib] System.Resources.ResourceManager</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Resources.ResourceManager</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>resourceCulture</Name>
                  <Signature>[mscorlib] System.Globalization.CultureInfo</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Globalization.CultureInfo</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ResourceManager</Name>
                  <Signature>static [mscorlib] System.Resources.ResourceManager get_ResourceManager ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.Resources.ResourceManager a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Culture</Name>
                  <Signature>static [mscorlib] System.Globalization.CultureInfo get_Culture ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.Globalization.CultureInfo a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Culture</Name>
                  <Signature>static void set_Culture ([mscorlib] System.Globalization.CultureInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ([mscorlib] System.Globalization.CultureInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AddTableHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_AddTableHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_check</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_check ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap b ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CheckSpellingHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_CheckSpellingHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap c ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CommentHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_CommentHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap d ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ControlPart</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_ControlPart ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap e ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CopyHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_CopyHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap f ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Critical</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_Critical ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap g ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Crosshairs</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_Crosshairs ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap h ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Delete</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_Delete ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap i ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DeleteHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_DeleteHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap j ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DesignerBackground</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_DesignerBackground ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap k ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DVSplit</Name>
                  <Signature>static unsigned int8[] get_DVSplit ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static unsigned int8[] a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_EditCodeHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_EditCodeHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>l</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap l ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Event</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_Event ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap m ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_FillDownHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_FillDownHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>n</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap n ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Folder</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_Folder ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>o</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap o ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_FolderClosed</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_FolderClosed ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>p</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap p ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_InfoFormBanner</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_InfoFormBanner ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>q</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap q ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_InfoFormBanner1</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_InfoFormBanner1 ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>r</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap r ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Information</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_Information ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>s</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap s ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Leaf</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_Leaf ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>t</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap t ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_loading_icon</Name>
                  <Signature>static unsigned int8[] get_loading_icon ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static unsigned int8[] b ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_minus</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_minus ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>u</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap u ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_NewWindow</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_NewWindow ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>v</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap v ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_OK</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_OK ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>w</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap w ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_openHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_openHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>x</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap x ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PauseHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_PauseHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>y</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap y ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PauseRecorderHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_PauseRecorderHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>z</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap z ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PlayHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_PlayHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>A</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap A ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_plus</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_plus ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>B</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap B ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PropertiesHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_PropertiesHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>C</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap C ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RecordHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_RecordHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>D</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap D ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Refresh</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_Refresh ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>E</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap E ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RepeatHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_RepeatHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>F</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap F ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RestartHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_RestartHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>G</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap G ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_saveHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_saveHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>H</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap H ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_StopHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_StopHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>I</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap I ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TableHS</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_TableHS ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>J</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap J ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_tafx</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_tafx ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>K</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap K ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TafxIcon</Name>
                  <Signature>static [System.Drawing] System.Drawing.Icon get_TafxIcon ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [System.Drawing] System.Drawing.Icon a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TrialExpireDate</Name>
                  <Signature>static string get_TrialExpireDate ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_uncheck</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_uncheck ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>L</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap L ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_unknown</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_unknown ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>M</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap M ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Warning</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap get_Warning ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>N</Name>
                  <Signature>static [System.Drawing] System.Drawing.Bitmap N ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ResourceManager</Name>
                  <Signature>[mscorlib] System.Resources.ResourceManager</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Resources.ResourceManager</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Culture</Name>
                  <Signature>[mscorlib] System.Globalization.CultureInfo</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Globalization.CultureInfo</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AddTableHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>check</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CheckSpellingHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CommentHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ControlPart</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CopyHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Critical</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Crosshairs</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Delete</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DeleteHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DesignerBackground</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DVSplit</Name>
                  <Signature>unsigned int8[]</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>unsigned int8[]</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>EditCodeHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Event</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>FillDownHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Folder</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>FolderClosed</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>InfoFormBanner</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>InfoFormBanner1</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Information</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Leaf</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>loading_icon</Name>
                  <Signature>unsigned int8[]</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>unsigned int8[]</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>minus</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>NewWindow</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>OK</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>openHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PauseHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PauseRecorderHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PlayHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>plus</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PropertiesHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RecordHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Refresh</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RepeatHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RestartHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>saveHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>StopHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TableHS</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>tafx</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TafxIcon</Name>
                  <Signature>[System.Drawing] System.Drawing.Icon</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Icon</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TrialExpireDate</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>uncheck</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>unknown</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Warning</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Recording.EventRecordedEventArgs</Name>
              <NewName>TestAutomationFX.Core.Recording.EventRecordedEventArgs</NewName>
              <Field>
                <Original>
                  <Name>&lt;RecordedEvent&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedEvent</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedEvent</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Handled&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_RecordedEvent</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedEvent get_RecordedEvent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RecordedEvent</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedEvent get_RecordedEvent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_RecordedEvent</Name>
                  <Signature>void set_RecordedEvent (TestAutomationFX.Core.Recording.RecordedEvent)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_RecordedEvent</Name>
                  <Signature>void set_RecordedEvent (TestAutomationFX.Core.Recording.RecordedEvent)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.Recording.RecordedEvent)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.Recording.RecordedEvent)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Handled</Name>
                  <Signature>bool get_Handled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Handled</Name>
                  <Signature>bool get_Handled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Handled</Name>
                  <Signature>void set_Handled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Handled</Name>
                  <Signature>void set_Handled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>RecordedEvent</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedEvent</Signature>
                </Original>
                <Obfuscated>
                  <Name>RecordedEvent</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedEvent RecordedEvent</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Handled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Handled</Name>
                  <Signature>bool Handled</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Recording.RecordedEvent</Name>
              <NewName>TestAutomationFX.Core.Recording.RecordedEvent</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Recording.KeyboardRecordedEvent</Name>
              <NewName>TestAutomationFX.Core.Recording.KeyboardRecordedEvent</NewName>
              <Field>
                <Original>
                  <Name>&lt;KeyboardEvent&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.KeyboardEvent</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.KeyboardEvent</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_KeyboardEvent</Name>
                  <Signature>TestAutomationFX.Core.KeyboardEvent get_KeyboardEvent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_KeyboardEvent</Name>
                  <Signature>TestAutomationFX.Core.KeyboardEvent get_KeyboardEvent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_KeyboardEvent</Name>
                  <Signature>void set_KeyboardEvent (TestAutomationFX.Core.KeyboardEvent)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_KeyboardEvent</Name>
                  <Signature>void set_KeyboardEvent (TestAutomationFX.Core.KeyboardEvent)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>KeyboardEvent</Name>
                  <Signature>TestAutomationFX.Core.KeyboardEvent</Signature>
                </Original>
                <Obfuscated>
                  <Name>KeyboardEvent</Name>
                  <Signature>TestAutomationFX.Core.KeyboardEvent KeyboardEvent</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Recording.MouseRecordedEvent</Name>
              <NewName>TestAutomationFX.Core.Recording.MouseRecordedEvent</NewName>
              <Field>
                <Original>
                  <Name>&lt;Location&gt;k__BackingField</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Button&gt;k__BackingField</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;MouseEventType&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Location</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_Location ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Location</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_Location ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Location</Name>
                  <Signature>void set_Location ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Location</Name>
                  <Signature>void set_Location ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Button</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons get_Button ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Button</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons get_Button ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Button</Name>
                  <Signature>void set_Button ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Button</Name>
                  <Signature>void set_Button ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MouseEventType</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType get_MouseEventType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MouseEventType</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType get_MouseEventType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MouseEventType</Name>
                  <Signature>void set_MouseEventType (TestAutomationFX.Core.Hooks.MouseEventType)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MouseEventType</Name>
                  <Signature>void set_MouseEventType (TestAutomationFX.Core.Hooks.MouseEventType)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Location</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                </Original>
                <Obfuscated>
                  <Name>Location</Name>
                  <Signature>[System.Drawing] System.Drawing.Point Location</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Button</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons</Signature>
                </Original>
                <Obfuscated>
                  <Name>Button</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons Button</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MouseEventType</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType</Signature>
                </Original>
                <Obfuscated>
                  <Name>MouseEventType</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType MouseEventType</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Recording.Recorder</Name>
              <NewName>TestAutomationFX.Core.Recording.Recorder</NewName>
              <Field>
                <Original>
                  <Name>m_UserActivityHook</Name>
                  <Signature>TestAutomationFX.Core.Hooks.UserActivityHook</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Hooks.UserActivityHook</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_RecordedActions</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.Recording.RecordedAction &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.Recording.RecordedAction &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_IsRecording</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>EventRecorded</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Recording.EventRecordedEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Recording.EventRecordedEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>IsRecordingChanged</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;IsLowLevel&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsRecording</Name>
                  <Signature>bool get_IsRecording ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsRecording</Name>
                  <Signature>bool get_IsRecording ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsRecording</Name>
                  <Signature>void set_IsRecording (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsRecording</Name>
                  <Signature>void set_IsRecording (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsLowLevel</Name>
                  <Signature>bool get_IsLowLevel ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsLowLevel</Name>
                  <Signature>bool get_IsLowLevel ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsLowLevel</Name>
                  <Signature>void set_IsLowLevel (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsLowLevel</Name>
                  <Signature>void set_IsLowLevel (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_EventRecorded</Name>
                  <Signature>void add_EventRecorded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Recording.EventRecordedEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_EventRecorded</Name>
                  <Signature>void add_EventRecorded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Recording.EventRecordedEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_EventRecorded</Name>
                  <Signature>void remove_EventRecorded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Recording.EventRecordedEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_EventRecorded</Name>
                  <Signature>void remove_EventRecorded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Recording.EventRecordedEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_IsRecordingChanged</Name>
                  <Signature>void add_IsRecordingChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_IsRecordingChanged</Name>
                  <Signature>void add_IsRecordingChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_IsRecordingChanged</Name>
                  <Signature>void remove_IsRecordingChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_IsRecordingChanged</Name>
                  <Signature>void remove_IsRecordingChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateUserActivityHook</Name>
                  <Signature>void CreateUserActivityHook ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnKeyPress</Name>
                  <Signature>void OnKeyPress (object, TestAutomationFX.Core.Hooks.KeyPressEventArgsEx)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, TestAutomationFX.Core.Hooks.KeyPressEventArgsEx)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnMouseHookEvent</Name>
                  <Signature>void OnMouseHookEvent (object, TestAutomationFX.Core.Hooks.MouseHookEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, TestAutomationFX.Core.Hooks.MouseHookEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireEventRecorded</Name>
                  <Signature>bool FireEventRecorded (TestAutomationFX.Core.Recording.RecordedEvent)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (TestAutomationFX.Core.Recording.RecordedEvent)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddRecordedAction</Name>
                  <Signature>void AddRecordedAction (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddRecordedAction</Name>
                  <Signature>void AddRecordedAction (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCodeForRecordedActions</Name>
                  <Signature>string GetCodeForRecordedActions ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetCodeForRecordedActions</Name>
                  <Signature>string GetCodeForRecordedActions ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearRecordedActions</Name>
                  <Signature>void ClearRecordedActions ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ClearRecordedActions</Name>
                  <Signature>void ClearRecordedActions ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddRecordedAction</Name>
                  <Signature>void AddRecordedAction (TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddRecordedAction</Name>
                  <Signature>void AddRecordedAction (TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemoveRecordedAction</Name>
                  <Signature>void RemoveRecordedAction (TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RemoveRecordedAction</Name>
                  <Signature>void RemoveRecordedAction (TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MergeActions</Name>
                  <Signature>void MergeActions ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MergeActions</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedAction MergeActions (TestAutomationFX.Core.Recording.RecordedAction, TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedAction a (TestAutomationFX.Core.Recording.RecordedAction, TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MergeToCellEnterText</Name>
                  <Signature>static TestAutomationFX.Core.Recording.RecordedAction MergeToCellEnterText (TestAutomationFX.Core.Recording.RecordedAction, TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static TestAutomationFX.Core.Recording.RecordedAction b (TestAutomationFX.Core.Recording.RecordedAction, TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MergeToDragAction</Name>
                  <Signature>static TestAutomationFX.Core.Recording.RecordedAction MergeToDragAction (TestAutomationFX.Core.Recording.RecordedAction, TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>static TestAutomationFX.Core.Recording.RecordedAction c (TestAutomationFX.Core.Recording.RecordedAction, TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MergeToDoubleClickAction</Name>
                  <Signature>static TestAutomationFX.Core.Recording.RecordedAction MergeToDoubleClickAction (TestAutomationFX.Core.Recording.RecordedAction, TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>static TestAutomationFX.Core.Recording.RecordedAction d (TestAutomationFX.Core.Recording.RecordedAction, TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>IsRecording</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsRecording</Name>
                  <Signature>bool IsRecording</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsLowLevel</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsLowLevel</Name>
                  <Signature>bool IsLowLevel</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>EventRecorded</Name>
                </Original>
                <Obfuscated>
                  <Name>EventRecorded</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>IsRecordingChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>IsRecordingChanged</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestBase</Name>
              <NewName>TestAutomationFX.Core.TestBase</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (int32, string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetProcessByName</Name>
                  <Signature>static [System] System.Diagnostics.Process GetProcessByName (int32, string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Wait</Name>
                  <Signature>static void Wait (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Wait</Name>
                  <Signature>static void Wait (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.ActionMethodTypes.MessageActionMethods</Name>
              <NewName>TestAutomationFX.Core.TestRunner.ActionMethodTypes.MessageActionMethods</NewName>
              <Method>
                <Original>
                  <Name>ShowMessageBox</Name>
                  <Signature>void ShowMessageBox ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ShowMessageBox</Name>
                  <Signature>void ShowMessageBox ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Beep</Name>
                  <Signature>void Beep ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Beep</Name>
                  <Signature>void Beep ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.ReportStatusArgs</Name>
              <NewName>TestAutomationFX.Core.TestRunner.ReportStatusArgs</NewName>
              <Field>
                <Original>
                  <Name>&lt;StatusMessage&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_StatusMessage</Name>
                  <Signature>string get_StatusMessage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_StatusMessage</Name>
                  <Signature>string get_StatusMessage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_StatusMessage</Name>
                  <Signature>void set_StatusMessage (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_StatusMessage</Name>
                  <Signature>void set_StatusMessage (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>StatusMessage</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>StatusMessage</Name>
                  <Signature>string StatusMessage</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.ReportWaitProgressArgs</Name>
              <NewName>TestAutomationFX.Core.TestRunner.ReportWaitProgressArgs</NewName>
              <Field>
                <Original>
                  <Name>&lt;CurrentTime&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;TotalTime&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Message&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_CurrentTime</Name>
                  <Signature>int32 get_CurrentTime ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CurrentTime</Name>
                  <Signature>int32 get_CurrentTime ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CurrentTime</Name>
                  <Signature>void set_CurrentTime (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CurrentTime</Name>
                  <Signature>void set_CurrentTime (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TotalTime</Name>
                  <Signature>int32 get_TotalTime ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TotalTime</Name>
                  <Signature>int32 get_TotalTime ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TotalTime</Name>
                  <Signature>void set_TotalTime (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TotalTime</Name>
                  <Signature>void set_TotalTime (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Message</Name>
                  <Signature>string get_Message ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Message</Name>
                  <Signature>string get_Message ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Message</Name>
                  <Signature>void set_Message (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Message</Name>
                  <Signature>void set_Message (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>CurrentTime</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>CurrentTime</Name>
                  <Signature>int32 CurrentTime</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TotalTime</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>TotalTime</Name>
                  <Signature>int32 TotalTime</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Message</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Message</Name>
                  <Signature>string Message</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.TestRunner.LogLevelIcons</Name>
              <NewName>TestAutomationFX.UI.TestRunner.LogLevelIcons</NewName>
              <Field>
                <Original>
                  <Name>Critical</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Critical</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Warning</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Warning</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>OK</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OK</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Information</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Information</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Event</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Event</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.Proxy</Name>
              <NewName>TestAutomationFX.Core.TestRunner.Proxy</NewName>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestProjectServer</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProjectServer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProjectServer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;TestedObject&gt;k__BackingField</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;TypeName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;AssemblyFullName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Location&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_TestedObject</Name>
                  <Signature>object get_TestedObject ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestedObject</Name>
                  <Signature>void set_TestedObject (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TypeName</Name>
                  <Signature>string get_TypeName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TypeName</Name>
                  <Signature>string get_TypeName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TypeName</Name>
                  <Signature>void set_TypeName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TypeName</Name>
                  <Signature>void set_TypeName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AssemblyFullName</Name>
                  <Signature>string get_AssemblyFullName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AssemblyFullName</Name>
                  <Signature>string get_AssemblyFullName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AssemblyFullName</Name>
                  <Signature>void set_AssemblyFullName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AssemblyFullName</Name>
                  <Signature>void set_AssemblyFullName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Location</Name>
                  <Signature>string get_Location ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Location</Name>
                  <Signature>string get_Location ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Location</Name>
                  <Signature>void set_Location (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Location</Name>
                  <Signature>void set_Location (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Invoke</Name>
                  <Signature>void Invoke (string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Invoke</Name>
                  <Signature>void Invoke (string, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetTestMethodsFromAssembly</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestMethodInfo[] GetTestMethodsFromAssembly (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetTestMethodsFromAssembly</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestMethodInfo[] GetTestMethodsFromAssembly (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetTestMethodsFromAssembly</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestMethodInfo[] GetTestMethodsFromAssembly ([mscorlib] System.Reflection.Assembly)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetTestMethodsFromAssembly</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestMethodInfo[] GetTestMethodsFromAssembly ([mscorlib] System.Reflection.Assembly)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetTestMethodsFromType</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestMethodInfo[] GetTestMethodsFromType ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetTestMethodsFromType</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestMethodInfo[] GetTestMethodsFromType ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeRemoteServerObject</Name>
                  <Signature>void InitializeRemoteServerObject ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>TestedObject</Name>
                  <Signature>object</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>object</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TypeName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>TypeName</Name>
                  <Signature>string TypeName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AssemblyFullName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>AssemblyFullName</Name>
                  <Signature>string AssemblyFullName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Location</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Location</Name>
                  <Signature>string Location</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.RemotingHelper</Name>
              <NewName>TestAutomationFX.Core.TestRunner.RemotingHelper</NewName>
              <Field>
                <Original>
                  <Name>m_IsServerTypeRegistered</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>RegisterServerType</Name>
                  <Signature>static void RegisterServerType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RegisterServerType</Name>
                  <Signature>static void RegisterServerType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RegisterClientType</Name>
                  <Signature>static void RegisterClientType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RegisterClientType</Name>
                  <Signature>static void RegisterClientType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsServerTypeRegistered</Name>
                  <Signature>static bool get_IsServerTypeRegistered ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsServerTypeRegistered</Name>
                  <Signature>static bool get_IsServerTypeRegistered ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>IsServerTypeRegistered</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsServerTypeRegistered</Name>
                  <Signature>bool IsServerTypeRegistered</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.TestRunner.TestApplication</Name>
              <NewName>TestAutomationFX.UI.TestRunner.TestApplication</NewName>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestRunnerForm</Name>
                  <Signature>TestAutomationFX.UI.TestRunner.TestRunnerForm</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.TestRunner.TestRunnerForm</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ParseCommandLine</Name>
                  <Signature>static void ParseCommandLine ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsRunTestFlagEnabled</Name>
                  <Signature>static bool IsRunTestFlagEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsRunTestFlagEnabled</Name>
                  <Signature>static bool IsRunTestFlagEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Run</Name>
                  <Signature>static void Run (TestAutomationFX.UI.UIMap[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Run</Name>
                  <Signature>static void Run (TestAutomationFX.UI.UIMap[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RunMultiple</Name>
                  <Signature>static void RunMultiple (TestAutomationFX.UI.UIMap[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RunMultiple</Name>
                  <Signature>static void RunMultiple (TestAutomationFX.UI.UIMap[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnApplicationThreadException</Name>
                  <Signature>static void OnApplicationThreadException (object, [System] System.Threading.ThreadExceptionEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (object, [System] System.Threading.ThreadExceptionEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCurrentDomainAssemblyResolve</Name>
                  <Signature>static [mscorlib] System.Reflection.Assembly OnCurrentDomainAssemblyResolve (object, [mscorlib] System.ResolveEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.Reflection.Assembly a (object, [mscorlib] System.ResolveEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCurrentDomainUnhandledException</Name>
                  <Signature>static void OnCurrentDomainUnhandledException (object, [mscorlib] System.UnhandledExceptionEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (object, [mscorlib] System.UnhandledExceptionEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>LogError</Name>
                  <Signature>static void LogError ([mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ([mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.TestSuiteItem</Name>
              <NewName>TestAutomationFX.Core.TestRunner.TestSuiteItem</NewName>
              <Field>
                <Original>
                  <Name>&lt;Count&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Enabled&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Count</Name>
                  <Signature>int32 get_Count ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Count</Name>
                  <Signature>int32 get_Count ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Count</Name>
                  <Signature>void set_Count (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Count</Name>
                  <Signature>void set_Count (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Enabled</Name>
                  <Signature>bool get_Enabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Enabled</Name>
                  <Signature>bool get_Enabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Enabled</Name>
                  <Signature>void set_Enabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Enabled</Name>
                  <Signature>void set_Enabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Run</Name>
                  <Signature>void Run ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Run</Name>
                  <Signature>void Run ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Count</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Count</Name>
                  <Signature>int32 Count</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Enabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Enabled</Name>
                  <Signature>bool Enabled</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.TestCallItem</Name>
              <NewName>TestAutomationFX.Core.TestRunner.TestCallItem</NewName>
              <Field>
                <Original>
                  <Name>&lt;ItemToCallId&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Guid</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Guid</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_ItemToCallId</Name>
                  <Signature>[mscorlib] System.Guid get_ItemToCallId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ItemToCallId</Name>
                  <Signature>[mscorlib] System.Guid get_ItemToCallId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ItemToCallId</Name>
                  <Signature>void set_ItemToCallId ([mscorlib] System.Guid)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ItemToCallId</Name>
                  <Signature>void set_ItemToCallId ([mscorlib] System.Guid)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Run</Name>
                  <Signature>void Run ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Run</Name>
                  <Signature>void Run ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestMethodInfo</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestMethodInfo get_TestMethodInfo ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestMethodInfo</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestMethodInfo get_TestMethodInfo ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ItemToCallId</Name>
                  <Signature>[mscorlib] System.Guid</Signature>
                </Original>
                <Obfuscated>
                  <Name>ItemToCallId</Name>
                  <Signature>[mscorlib] System.Guid ItemToCallId</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestMethodInfo</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestMethodInfo</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestMethodInfo</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestMethodInfo TestMethodInfo</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.TestRunner.TestFixtureInfo</Name>
              <NewName>TestAutomationFX.UI.TestRunner.TestFixtureInfo</NewName>
              <Field>
                <Original>
                  <Name>m_TestMethods</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Reflection.MethodInfo &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Reflection.MethodInfo &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_IgnoredTestMethods</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Reflection.MethodInfo &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Reflection.MethodInfo &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestFixtureType</Name>
                  <Signature>[mscorlib] System.Type</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Type</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestFixtureObject</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestFixtureObject</Name>
                  <Signature>object get_TestFixtureObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestFixtureObject</Name>
                  <Signature>object get_TestFixtureObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestMethods</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Reflection.MethodInfo &gt; get_TestMethods ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestMethods</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Reflection.MethodInfo &gt; get_TestMethods ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IgnoredTestMethods</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Reflection.MethodInfo &gt; get_IgnoredTestMethods ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Reflection.MethodInfo &gt; a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestFixtureType</Name>
                  <Signature>[mscorlib] System.Type get_TestFixtureType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestFixtureType</Name>
                  <Signature>[mscorlib] System.Type get_TestFixtureType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsTestFixture</Name>
                  <Signature>bool get_IsTestFixture ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsTestFixture</Name>
                  <Signature>bool get_IsTestFixture ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupTestMethods</Name>
                  <Signature>void SetupTestMethods ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IgnoreTest</Name>
                  <Signature>bool IgnoreTest ([mscorlib] System.Reflection.MethodInfo, [out] string&amp;)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ([mscorlib] System.Reflection.MethodInfo, [out] string&amp;)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>TestFixtureObject</Name>
                  <Signature>object</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestFixtureObject</Name>
                  <Signature>object TestFixtureObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestMethods</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Reflection.MethodInfo &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestMethods</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Reflection.MethodInfo &gt; TestMethods</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IgnoredTestMethods</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Reflection.MethodInfo &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Reflection.MethodInfo &gt;</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestFixtureType</Name>
                  <Signature>[mscorlib] System.Type</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestFixtureType</Name>
                  <Signature>[mscorlib] System.Type TestFixtureType</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsTestFixture</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsTestFixture</Name>
                  <Signature>bool IsTestFixture</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.TestMethodInfo</Name>
              <NewName>TestAutomationFX.Core.TestRunner.TestMethodInfo</NewName>
              <Field>
                <Original>
                  <Name>m_Id</Name>
                  <Signature>[mscorlib] System.Guid</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Guid</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MethodInfo</Name>
                  <Signature>[mscorlib] System.Reflection.MethodInfo</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Reflection.MethodInfo</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;AssemblyFullName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;MethodName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Name&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;TypeName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Location&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_AssemblyFullName</Name>
                  <Signature>string get_AssemblyFullName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AssemblyFullName</Name>
                  <Signature>string get_AssemblyFullName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AssemblyFullName</Name>
                  <Signature>void set_AssemblyFullName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AssemblyFullName</Name>
                  <Signature>void set_AssemblyFullName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MethodName</Name>
                  <Signature>string get_MethodName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MethodName</Name>
                  <Signature>string get_MethodName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MethodName</Name>
                  <Signature>void set_MethodName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MethodName</Name>
                  <Signature>void set_MethodName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Name</Name>
                  <Signature>void set_Name (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Name</Name>
                  <Signature>void set_Name (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TypeName</Name>
                  <Signature>string get_TypeName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TypeName</Name>
                  <Signature>string get_TypeName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TypeName</Name>
                  <Signature>void set_TypeName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TypeName</Name>
                  <Signature>void set_TypeName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Location</Name>
                  <Signature>string get_Location ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Location</Name>
                  <Signature>string get_Location ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Location</Name>
                  <Signature>void set_Location (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Location</Name>
                  <Signature>void set_Location (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Reflection.MethodInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Reflection.MethodInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Id</Name>
                  <Signature>[mscorlib] System.Guid get_Id ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Id</Name>
                  <Signature>[mscorlib] System.Guid get_Id ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Id</Name>
                  <Signature>void set_Id ([mscorlib] System.Guid)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Id</Name>
                  <Signature>void set_Id ([mscorlib] System.Guid)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MethodInfo</Name>
                  <Signature>[mscorlib] System.Reflection.MethodInfo get_MethodInfo ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MethodInfo</Name>
                  <Signature>[mscorlib] System.Reflection.MethodInfo get_MethodInfo ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MethodInfo</Name>
                  <Signature>void set_MethodInfo ([mscorlib] System.Reflection.MethodInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MethodInfo</Name>
                  <Signature>void set_MethodInfo ([mscorlib] System.Reflection.MethodInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExtractMethodInfo</Name>
                  <Signature>void ExtractMethodInfo ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Invoke</Name>
                  <Signature>void Invoke ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Invoke</Name>
                  <Signature>void Invoke ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>AssemblyFullName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>AssemblyFullName</Name>
                  <Signature>string AssemblyFullName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MethodName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>MethodName</Name>
                  <Signature>string MethodName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Name</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Name</Name>
                  <Signature>string Name</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TypeName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>TypeName</Name>
                  <Signature>string TypeName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Location</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Location</Name>
                  <Signature>string Location</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Id</Name>
                  <Signature>[mscorlib] System.Guid</Signature>
                </Original>
                <Obfuscated>
                  <Name>Id</Name>
                  <Signature>[mscorlib] System.Guid Id</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MethodInfo</Name>
                  <Signature>[mscorlib] System.Reflection.MethodInfo</Signature>
                </Original>
                <Obfuscated>
                  <Name>MethodInfo</Name>
                  <Signature>[mscorlib] System.Reflection.MethodInfo MethodInfo</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.TestRunner.TestMethodInfosControl</Name>
              <NewName>TestAutomationFX.UI.TestRunner.TestMethodInfosControl</NewName>
              <Field>
                <Original>
                  <Name>m_TestProject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ViewCrossReference</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; TestAutomationFX.Core.TestRunner.TestMethodInfo, [System.Windows.Forms] System.Windows.Forms.TreeNode &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; TestAutomationFX.Core.TestRunner.TestMethodInfo, [System.Windows.Forms] System.Windows.Forms.TreeNode &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SelectionChanged</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>AddTestMethodToSuite</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestMethodsTreeView</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeView</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeView</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ContextMenuStrip</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ContextMenuStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ContextMenuStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>addTestMethodToSuiteToolStripMenuItem</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>add_SelectionChanged</Name>
                  <Signature>void add_SelectionChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_SelectionChanged</Name>
                  <Signature>void add_SelectionChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_SelectionChanged</Name>
                  <Signature>void remove_SelectionChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_SelectionChanged</Name>
                  <Signature>void remove_SelectionChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_AddTestMethodToSuite</Name>
                  <Signature>void add_AddTestMethodToSuite ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_AddTestMethodToSuite</Name>
                  <Signature>void add_AddTestMethodToSuite ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_AddTestMethodToSuite</Name>
                  <Signature>void remove_AddTestMethodToSuite ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_AddTestMethodToSuite</Name>
                  <Signature>void remove_AddTestMethodToSuite ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestProject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject get_TestProject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestProject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject get_TestProject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestProject</Name>
                  <Signature>void set_TestProject (TestAutomationFX.Core.TestRunner.TestProject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestProject</Name>
                  <Signature>void set_TestProject (TestAutomationFX.Core.TestRunner.TestProject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SelectedObject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestMethodInfo get_SelectedObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SelectedObject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestMethodInfo get_SelectedObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnListChanged</Name>
                  <Signature>void OnListChanged (object, [System] System.ComponentModel.ListChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.ListChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemovedNodesFromList</Name>
                  <Signature>void RemovedNodesFromList ([System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestMethodInfo &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestMethodInfo &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemoveNode</Name>
                  <Signature>void RemoveNode (TestAutomationFX.Core.TestRunner.TestMethodInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.TestRunner.TestMethodInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddNodesFromList</Name>
                  <Signature>void AddNodesFromList ([System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestMethodInfo &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ([System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestMethodInfo &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAddingNew</Name>
                  <Signature>void OnAddingNew (object, [System] System.ComponentModel.AddingNewEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.AddingNewEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddEventHandlers</Name>
                  <Signature>void AddEventHandlers ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemoveEventHandlers</Name>
                  <Signature>void RemoveEventHandlers ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BuildView</Name>
                  <Signature>void BuildView ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddNode</Name>
                  <Signature>void AddNode (TestAutomationFX.Core.TestRunner.TestMethodInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (TestAutomationFX.Core.TestRunner.TestMethodInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearView</Name>
                  <Signature>void ClearView ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnSelected</Name>
                  <Signature>void OnSelected (object, [System.Windows.Forms] System.Windows.Forms.TreeViewEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.TreeViewEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireSelectionChanged</Name>
                  <Signature>void FireSelectionChanged ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireAddTestMethodToSuite</Name>
                  <Signature>void FireAddTestMethodToSuite ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FireAddTestMethodToSuite</Name>
                  <Signature>void FireAddTestMethodToSuite ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAddTestMethodToSuite</Name>
                  <Signature>void OnAddTestMethodToSuite (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnContextMenuOpening</Name>
                  <Signature>void OnContextMenuOpening (object, [System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnMouseDown</Name>
                  <Signature>void OnMouseDown (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>TestProject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestProject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject TestProject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SelectedObject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestMethodInfo</Signature>
                </Original>
                <Obfuscated>
                  <Name>SelectedObject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestMethodInfo SelectedObject</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>SelectionChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>SelectionChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>AddTestMethodToSuite</Name>
                </Original>
                <Obfuscated>
                  <Name>AddTestMethodToSuite</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.TestProject</Name>
              <NewName>TestAutomationFX.Core.TestRunner.TestProject</NewName>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_IsTestRunning</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AsyncResult</Name>
                  <Signature>[mscorlib] System.IAsyncResult</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.IAsyncResult</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CurrentAppDomain</Name>
                  <Signature>[mscorlib] System.AppDomain</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.AppDomain</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestProxy</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.Proxy</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.Proxy</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestProjectServerManager</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProjectServerManager</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProjectServerManager</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Name&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;TestMethodInfos&gt;k__BackingField</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestMethodInfo &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestMethodInfo &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;TestSuites&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.TestRunner.TestSuite &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.TestRunner.TestSuite &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;MainTestSuite&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Name</Name>
                  <Signature>void set_Name (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Name</Name>
                  <Signature>void set_Name (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestMethodInfos</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestMethodInfo &gt; get_TestMethodInfos ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestMethodInfos</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestMethodInfo &gt; get_TestMethodInfos ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestMethodInfos</Name>
                  <Signature>void set_TestMethodInfos ([System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestMethodInfo &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestMethodInfos</Name>
                  <Signature>void set_TestMethodInfos ([System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestMethodInfo &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestSuites</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.TestRunner.TestSuite &gt; get_TestSuites ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestSuites</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.TestRunner.TestSuite &gt; get_TestSuites ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestSuites</Name>
                  <Signature>void set_TestSuites ([mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.TestRunner.TestSuite &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestSuites</Name>
                  <Signature>void set_TestSuites ([mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.TestRunner.TestSuite &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MainTestSuite</Name>
                  <Signature>string get_MainTestSuite ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MainTestSuite</Name>
                  <Signature>string get_MainTestSuite ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MainTestSuite</Name>
                  <Signature>void set_MainTestSuite (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MainTestSuite</Name>
                  <Signature>void set_MainTestSuite (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>m_TestProjectServerManager_ReportWaitProgress</Name>
                  <Signature>void m_TestProjectServerManager_ReportWaitProgress (object, TestAutomationFX.Core.TestRunner.ReportWaitProgressArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, TestAutomationFX.Core.TestRunner.ReportWaitProgressArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>m_TestProjectServerManager_ReportStatus</Name>
                  <Signature>void m_TestProjectServerManager_ReportStatus (object, TestAutomationFX.Core.TestRunner.ReportStatusArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, TestAutomationFX.Core.TestRunner.ReportStatusArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Run</Name>
                  <Signature>void Run ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Run</Name>
                  <Signature>void Run ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AsyncRun</Name>
                  <Signature>void AsyncRun ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RunCallBack</Name>
                  <Signature>void RunCallBack ([mscorlib] System.IAsyncResult)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([mscorlib] System.IAsyncResult)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsTestRunning</Name>
                  <Signature>bool get_IsTestRunning ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsTestRunning</Name>
                  <Signature>bool get_IsTestRunning ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsTestRunning</Name>
                  <Signature>void set_IsTestRunning (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsTestRunning</Name>
                  <Signature>void set_IsTestRunning (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateTestProxy</Name>
                  <Signature>object CreateTestProxy (string, string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateTestProxy</Name>
                  <Signature>object CreateTestProxy (string, string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddTestMethodsFromAssembly</Name>
                  <Signature>void AddTestMethodsFromAssembly (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddTestMethodsFromAssembly</Name>
                  <Signature>void AddTestMethodsFromAssembly (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddTestMethodsFromType</Name>
                  <Signature>void AddTestMethodsFromType ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddTestMethodsFromType</Name>
                  <Signature>void AddTestMethodsFromType ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddTestMethodsFromObject</Name>
                  <Signature>void AddTestMethodsFromObject (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddTestMethodsFromObject</Name>
                  <Signature>void AddTestMethodsFromObject (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateProxy</Name>
                  <Signature>void CreateProxy ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearProxies</Name>
                  <Signature>void ClearProxies ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Name</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Name</Name>
                  <Signature>string Name</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestMethodInfos</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestMethodInfo &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestMethodInfos</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestMethodInfo &gt; TestMethodInfos</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestSuites</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.TestRunner.TestSuite &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestSuites</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.TestRunner.TestSuite &gt; TestSuites</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MainTestSuite</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>MainTestSuite</Name>
                  <Signature>string MainTestSuite</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsTestRunning</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsTestRunning</Name>
                  <Signature>bool IsTestRunning</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>System.ComponentModel.INotifyPropertyChanged.PropertyChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.INotifyPropertyChanged.PropertyChanged</Name>
                </Obfuscated>
              </Event>
              <NestedType>
                <Name>RunDelegate</Name>
                <NewName>RunDelegate</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.TestProjectFactory</Name>
              <NewName>TestAutomationFX.Core.TestRunner.TestProjectFactory</NewName>
              <Field>
                <Original>
                  <Name>&lt;CurrentProject&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_CurrentProject</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestProject get_CurrentProject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CurrentProject</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestProject get_CurrentProject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CurrentProject</Name>
                  <Signature>static void set_CurrentProject (TestAutomationFX.Core.TestRunner.TestProject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CurrentProject</Name>
                  <Signature>static void set_CurrentProject (TestAutomationFX.Core.TestRunner.TestProject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateTestProject</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestProject CreateTestProject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateTestProject</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestProject CreateTestProject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetTestMethodFromId</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestMethodInfo GetTestMethodFromId ([mscorlib] System.Guid)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetTestMethodFromId</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestMethodInfo GetTestMethodFromId ([mscorlib] System.Guid)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Load</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestProject Load (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Load</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestProject Load (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Save</Name>
                  <Signature>static void Save (string, TestAutomationFX.Core.TestRunner.TestProject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Save</Name>
                  <Signature>static void Save (string, TestAutomationFX.Core.TestRunner.TestProject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>CurrentProject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject</Signature>
                </Original>
                <Obfuscated>
                  <Name>CurrentProject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject CurrentProject</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.TestProjectServer</Name>
              <NewName>TestAutomationFX.Core.TestRunner.TestProjectServer</NewName>
              <Field>
                <Original>
                  <Name>m_TotalNumberOfInstances</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_RemoteTestStatusLogger</Name>
                  <Signature>TestAutomationFX.Core.ITestStatusLogger</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m_RemoteTestStatusLogger</Name>
                  <Signature>TestAutomationFX.Core.ITestStatusLogger</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_RemoteTestStatusLogger</Name>
                  <Signature>TestAutomationFX.Core.ITestStatusLogger get_RemoteTestStatusLogger ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RemoteTestStatusLogger</Name>
                  <Signature>TestAutomationFX.Core.ITestStatusLogger get_RemoteTestStatusLogger ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_RemoteTestStatusLogger</Name>
                  <Signature>void set_RemoteTestStatusLogger (TestAutomationFX.Core.ITestStatusLogger)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_RemoteTestStatusLogger</Name>
                  <Signature>void set_RemoteTestStatusLogger (TestAutomationFX.Core.ITestStatusLogger)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Finalize</Name>
                  <Signature>void Finalize ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Finalize</Name>
                  <Signature>void Finalize ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReportStatus</Name>
                  <Signature>void ReportStatus (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReportStatus</Name>
                  <Signature>void ReportStatus (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReportWaitProgress</Name>
                  <Signature>void ReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReportWaitProgress</Name>
                  <Signature>void ReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.Core.ITestStatusLogger.ReportWaitProgress</Name>
                  <Signature>void TestAutomationFX.Core.ITestStatusLogger.ReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.Core.ITestStatusLogger.ReportWaitProgress</Name>
                  <Signature>void TestAutomationFX.Core.ITestStatusLogger.ReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.Core.ITestStatusLogger.ReportStatus</Name>
                  <Signature>void TestAutomationFX.Core.ITestStatusLogger.ReportStatus (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.Core.ITestStatusLogger.ReportStatus</Name>
                  <Signature>void TestAutomationFX.Core.ITestStatusLogger.ReportStatus (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>RemoteTestStatusLogger</Name>
                  <Signature>TestAutomationFX.Core.ITestStatusLogger</Signature>
                </Original>
                <Obfuscated>
                  <Name>RemoteTestStatusLogger</Name>
                  <Signature>TestAutomationFX.Core.ITestStatusLogger RemoteTestStatusLogger</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.TestProjectServerManager</Name>
              <NewName>TestAutomationFX.Core.TestRunner.TestProjectServerManager</NewName>
              <Field>
                <Original>
                  <Name>m_Instance</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProjectServerManager</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProjectServerManager</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestProjectServer</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProjectServer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProjectServer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ReportStatus</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.TestRunner.ReportStatusArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.TestRunner.ReportStatusArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ReportWaitProgress</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.TestRunner.ReportWaitProgressArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.TestRunner.ReportWaitProgressArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>add_ReportStatus</Name>
                  <Signature>void add_ReportStatus ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.TestRunner.ReportStatusArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_ReportStatus</Name>
                  <Signature>void add_ReportStatus ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.TestRunner.ReportStatusArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_ReportStatus</Name>
                  <Signature>void remove_ReportStatus ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.TestRunner.ReportStatusArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_ReportStatus</Name>
                  <Signature>void remove_ReportStatus ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.TestRunner.ReportStatusArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_ReportWaitProgress</Name>
                  <Signature>void add_ReportWaitProgress ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.TestRunner.ReportWaitProgressArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_ReportWaitProgress</Name>
                  <Signature>void add_ReportWaitProgress ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.TestRunner.ReportWaitProgressArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_ReportWaitProgress</Name>
                  <Signature>void remove_ReportWaitProgress ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.TestRunner.ReportWaitProgressArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_ReportWaitProgress</Name>
                  <Signature>void remove_ReportWaitProgress ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.TestRunner.ReportWaitProgressArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireReportStatus</Name>
                  <Signature>void FireReportStatus (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FireReportStatus</Name>
                  <Signature>void FireReportStatus (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireReportWaitProgress</Name>
                  <Signature>void FireReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FireReportWaitProgress</Name>
                  <Signature>void FireReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Instance</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestProjectServerManager get_Instance ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Instance</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestProjectServerManager get_Instance ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.Core.ITestStatusLogger.ReportWaitProgress</Name>
                  <Signature>void TestAutomationFX.Core.ITestStatusLogger.ReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.Core.ITestStatusLogger.ReportWaitProgress</Name>
                  <Signature>void TestAutomationFX.Core.ITestStatusLogger.ReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.Core.ITestStatusLogger.ReportStatus</Name>
                  <Signature>void TestAutomationFX.Core.ITestStatusLogger.ReportStatus (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.Core.ITestStatusLogger.ReportStatus</Name>
                  <Signature>void TestAutomationFX.Core.ITestStatusLogger.ReportStatus (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Instance</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProjectServerManager</Signature>
                </Original>
                <Obfuscated>
                  <Name>Instance</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProjectServerManager Instance</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>ReportStatus</Name>
                </Original>
                <Obfuscated>
                  <Name>ReportStatus</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>ReportWaitProgress</Name>
                </Original>
                <Obfuscated>
                  <Name>ReportWaitProgress</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.TestRepository</Name>
              <NewName>w</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.TestRunner.TestRunner</Name>
              <NewName>TestAutomationFX.UI.TestRunner.TestRunner</NewName>
              <Field>
                <Original>
                  <Name>TestFailed</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TestCanceledByUser</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ExitingTestCanceledByUser</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestRunnerThread</Name>
                  <Signature>[mscorlib] System.Threading.Thread</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Threading.Thread</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestRunnerThreadApartmentState</Name>
                  <Signature>[mscorlib] System.Threading.ApartmentState</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Threading.ApartmentState</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PassedTests</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_FailedTests</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_IgnoredTests</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestFixtures</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.UI.TestRunner.TestFixtureInfo &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.UI.TestRunner.TestFixtureInfo &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestFinished</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;TestFinishStatus&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_TestFinishStatus</Name>
                  <Signature>TestAutomationFX.Core.LogLevel get_TestFinishStatus ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestFinishStatus</Name>
                  <Signature>TestAutomationFX.Core.LogLevel get_TestFinishStatus ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestFinishStatus</Name>
                  <Signature>void set_TestFinishStatus (TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestFinishStatus</Name>
                  <Signature>void set_TestFinishStatus (TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ResetStats</Name>
                  <Signature>void ResetStats ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_TestFinished</Name>
                  <Signature>void add_TestFinished ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_TestFinished</Name>
                  <Signature>void add_TestFinished ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_TestFinished</Name>
                  <Signature>void remove_TestFinished ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_TestFinished</Name>
                  <Signature>void remove_TestFinished ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestFixtures</Name>
                  <Signature>TestAutomationFX.UI.TestRunner.TestFixtureInfo[] get_TestFixtures ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestFixtures</Name>
                  <Signature>TestAutomationFX.UI.TestRunner.TestFixtureInfo[] get_TestFixtures ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestableObjects</Name>
                  <Signature>void set_TestableObjects (object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestableObjects</Name>
                  <Signature>void set_TestableObjects (object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestResultOK</Name>
                  <Signature>bool get_TestResultOK ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestResultOK</Name>
                  <Signature>bool get_TestResultOK ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StartTest</Name>
                  <Signature>void StartTest ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>StartTest</Name>
                  <Signature>void StartTest ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StopTest</Name>
                  <Signature>void StopTest ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>StopTest</Name>
                  <Signature>void StopTest ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TerminateThread</Name>
                  <Signature>void TerminateThread ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StartTestThread</Name>
                  <Signature>void StartTestThread ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReportStatus</Name>
                  <Signature>void ReportStatus (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReportStatus</Name>
                  <Signature>void ReportStatus (string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReportStatus</Name>
                  <Signature>void ReportStatus (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireTestFinished</Name>
                  <Signature>void FireTestFinished ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestRunnerThreadLoop</Name>
                  <Signature>void TestRunnerThreadLoop ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DeactivateTestRunnerThread</Name>
                  <Signature>void DeactivateTestRunnerThread ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RunTests</Name>
                  <Signature>void RunTests ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>void g ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RunTestsOnTestFixture</Name>
                  <Signature>void RunTestsOnTestFixture (TestAutomationFX.UI.TestRunner.TestFixtureInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.UI.TestRunner.TestFixtureInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsTestTerminated</Name>
                  <Signature>bool get_IsTestTerminated ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsThreadStopped</Name>
                  <Signature>bool get_IsThreadStopped ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsThreadTerminated</Name>
                  <Signature>bool get_IsThreadTerminated ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestFinishStatusMessage</Name>
                  <Signature>string get_TestFinishStatusMessage ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RunTestMethods</Name>
                  <Signature>void RunTestMethods (TestAutomationFX.UI.TestRunner.TestFixtureInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (TestAutomationFX.UI.TestRunner.TestFixtureInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RunTestsOnTestFixture</Name>
                  <Signature>void RunTestsOnTestFixture ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RunTestsOnTestFixture</Name>
                  <Signature>void RunTestsOnTestFixture ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RunTestsOnTestFixture</Name>
                  <Signature>void RunTestsOnTestFixture (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RunTestsOnTestFixture</Name>
                  <Signature>void RunTestsOnTestFixture (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RunTestMethod</Name>
                  <Signature>void RunTestMethod (object, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RunTestMethod</Name>
                  <Signature>void RunTestMethod (object, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RunTestMethod</Name>
                  <Signature>void RunTestMethod (object, [mscorlib] System.Reflection.MethodInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.Reflection.MethodInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RunTestMethodWithDataFIle</Name>
                  <Signature>void RunTestMethodWithDataFIle (object, [mscorlib] System.Reflection.MethodInfo, TestAutomationFX.Core.TestDataFile)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RunTestMethodWithDataFIle</Name>
                  <Signature>void RunTestMethodWithDataFIle (object, [mscorlib] System.Reflection.MethodInfo, TestAutomationFX.Core.TestDataFile)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RunTestMethodWithTestDataTable</Name>
                  <Signature>void RunTestMethodWithTestDataTable (object, [mscorlib] System.Reflection.MethodInfo, TestAutomationFX.Core.TestDataTable)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RunTestMethodWithTestDataTable</Name>
                  <Signature>void RunTestMethodWithTestDataTable (object, [mscorlib] System.Reflection.MethodInfo, TestAutomationFX.Core.TestDataTable)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RunTestMethodWithTestDataRow</Name>
                  <Signature>void RunTestMethodWithTestDataRow (object, [mscorlib] System.Reflection.MethodInfo, TestAutomationFX.Core.TestDataRow, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RunTestMethodWithTestDataRow</Name>
                  <Signature>void RunTestMethodWithTestDataRow (object, [mscorlib] System.Reflection.MethodInfo, TestAutomationFX.Core.TestDataRow, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HandleTestException</Name>
                  <Signature>void HandleTestException (TestAutomationFX.Exceptions.TestException)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Exceptions.TestException)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HandleException</Name>
                  <Signature>void HandleException ([mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateLogDataForException</Name>
                  <Signature>static TestAutomationFX.Core.Logging.LogDataMessage CreateLogDataForException ([mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static TestAutomationFX.Core.Logging.LogDataMessage a ([mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.IDisposable.Dispose</Name>
                  <Signature>void System.IDisposable.Dispose ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.IDisposable.Dispose</Name>
                  <Signature>void System.IDisposable.Dispose ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>PauseTest</Name>
                  <Signature>void PauseTest ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>void h ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ResumeTest</Name>
                  <Signature>void ResumeTest ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>void i ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>TestFinishStatus</Name>
                  <Signature>TestAutomationFX.Core.LogLevel</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestFinishStatus</Name>
                  <Signature>TestAutomationFX.Core.LogLevel TestFinishStatus</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestFixtures</Name>
                  <Signature>TestAutomationFX.UI.TestRunner.TestFixtureInfo[]</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestFixtures</Name>
                  <Signature>TestAutomationFX.UI.TestRunner.TestFixtureInfo[] TestFixtures</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestableObjects</Name>
                  <Signature>object[]</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestableObjects</Name>
                  <Signature>object[] TestableObjects</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestResultOK</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestResultOK</Name>
                  <Signature>bool TestResultOK</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsTestTerminated</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsThreadStopped</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsThreadTerminated</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestFinishStatusMessage</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>TestFinished</Name>
                </Original>
                <Obfuscated>
                  <Name>TestFinished</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.TestRunner.TestRunnerForm</Name>
              <NewName>TestAutomationFX.UI.TestRunner.TestRunnerForm</NewName>
              <Field>
                <Original>
                  <Name>DBL_Opacity</Name>
                  <Signature>float64</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>float64</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>LogFilesSubFolderName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestRunner</Name>
                  <Signature>TestAutomationFX.UI.TestRunner.TestRunner</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.TestRunner.TestRunner</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TransparentWindow</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_IsTestStopped</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestableObjects</Name>
                  <Signature>object[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_DefaultLogFileName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestCount</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_BlockInputStarted</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ContextMenu</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ContextMenuStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ContextMenuStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ClearToolStripMenuItem</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ToolTipInfo</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolTip</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolTip</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ToolStrip</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ToolStripStartButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ToolStripStopButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>toolStripSeparator1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripSeparator</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripSeparator</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ToolStripCycleButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestStatusLogControl</Name>
                  <Signature>TestAutomationFX.UI.TestRunner.TestStatusLogControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.TestRunner.TestStatusLogControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ShowEventsButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AutoScrollButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_OpenLogFileButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_OpenFileDialog</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.OpenFileDialog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.OpenFileDialog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;OriginWindowStyle&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_OriginWindowStyle</Name>
                  <Signature>int32 get_OriginWindowStyle ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32 a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_OriginWindowStyle</Name>
                  <Signature>void set_OriginWindowStyle (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Show</Name>
                  <Signature>void Show ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Show</Name>
                  <Signature>void Show ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnShown</Name>
                  <Signature>void OnShown ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnShown</Name>
                  <Signature>void OnShown ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ForceShow</Name>
                  <Signature>void ForceShow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ForceShow</Name>
                  <Signature>void ForceShow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestFixtures</Name>
                  <Signature>TestAutomationFX.UI.TestRunner.TestFixtureInfo[] get_TestFixtures ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestFixtures</Name>
                  <Signature>TestAutomationFX.UI.TestRunner.TestFixtureInfo[] get_TestFixtures ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestFixtures</Name>
                  <Signature>void set_TestFixtures (TestAutomationFX.UI.TestRunner.TestFixtureInfo[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestFixtures</Name>
                  <Signature>void set_TestFixtures (TestAutomationFX.UI.TestRunner.TestFixtureInfo[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StartBlockInput</Name>
                  <Signature>void StartBlockInput ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>StartBlockInput</Name>
                  <Signature>void StartBlockInput ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StopBlockInput</Name>
                  <Signature>void StopBlockInput ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>StopBlockInput</Name>
                  <Signature>void StopBlockInput ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnInputUnblocked</Name>
                  <Signature>void OnInputUnblocked (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnInputUnblocked</Name>
                  <Signature>void OnInputUnblocked (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnInputBlockedCanceled</Name>
                  <Signature>void OnInputBlockedCanceled (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnInputBlockedCanceled</Name>
                  <Signature>void OnInputBlockedCanceled (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HideInputBlock</Name>
                  <Signature>void HideInputBlock ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>HideInputBlock</Name>
                  <Signature>void HideInputBlock ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HideInputBlockSafe</Name>
                  <Signature>void HideInputBlockSafe ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>HideInputBlockSafe</Name>
                  <Signature>void HideInputBlockSafe ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnInputBlocked</Name>
                  <Signature>void OnInputBlocked (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnInputBlocked</Name>
                  <Signature>void OnInputBlocked (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FlashInputBlock</Name>
                  <Signature>void FlashInputBlock ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FlashInputBlockSafe</Name>
                  <Signature>void FlashInputBlockSafe ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SafeClose</Name>
                  <Signature>void SafeClose ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SafeCloseFormThatMightNotBeCreated</Name>
                  <Signature>void SafeCloseFormThatMightNotBeCreated ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SafeEnableStartTestControls</Name>
                  <Signature>void SafeEnableStartTestControls ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SafeStartTest</Name>
                  <Signature>void SafeStartTest ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>void g ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CycleRestart</Name>
                  <Signature>void CycleRestart ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>void h ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnTestFinished</Name>
                  <Signature>void OnTestFinished (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MakeSureTestFormIsVisibleWhenTestStops</Name>
                  <Signature>void MakeSureTestFormIsVisibleWhenTestStops ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>void i ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SafeForceShow</Name>
                  <Signature>void SafeForceShow ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>void j ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SaveLogFile</Name>
                  <Signature>void SaveLogFile ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>void k ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLogFilePath</Name>
                  <Signature>string GetLogFilePath ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>l</Name>
                  <Signature>string l ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupLogFilename</Name>
                  <Signature>void SetupLogFilename ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m</Name>
                  <Signature>void m ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SaveOriginWindowStyle</Name>
                  <Signature>void SaveOriginWindowStyle ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>n</Name>
                  <Signature>void n ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnLoad</Name>
                  <Signature>void OnLoad ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnLoad</Name>
                  <Signature>void OnLoad ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MakeWindowClickTrough</Name>
                  <Signature>void MakeWindowClickTrough ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>o</Name>
                  <Signature>void o ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MakeWindowOpaque</Name>
                  <Signature>void MakeWindowOpaque ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>p</Name>
                  <Signature>void p ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StartIfAutoStartTestIsTrue</Name>
                  <Signature>void StartIfAutoStartTestIsTrue ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>q</Name>
                  <Signature>void q ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AutoStartTest</Name>
                  <Signature>void AutoStartTest ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>r</Name>
                  <Signature>void r ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetWindowCaption</Name>
                  <Signature>void SetWindowCaption ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>s</Name>
                  <Signature>void s ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnStartButtonClick</Name>
                  <Signature>void OnStartButtonClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnStopButtonClick</Name>
                  <Signature>void OnStopButtonClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StartTest</Name>
                  <Signature>void StartTest ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>t</Name>
                  <Signature>void t ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StopTest</Name>
                  <Signature>void StopTest ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>u</Name>
                  <Signature>void u ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StopTestSafe</Name>
                  <Signature>void StopTestSafe ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>v</Name>
                  <Signature>void v ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EnableStartTestControls</Name>
                  <Signature>void EnableStartTestControls ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>w</Name>
                  <Signature>void w ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsCycleTestEnabled</Name>
                  <Signature>bool get_IsCycleTestEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsCycleTestEnabled</Name>
                  <Signature>bool get_IsCycleTestEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsCycleTestEnabled</Name>
                  <Signature>void set_IsCycleTestEnabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsCycleTestEnabled</Name>
                  <Signature>void set_IsCycleTestEnabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnTestRunnerFormFormClosing</Name>
                  <Signature>void OnTestRunnerFormFormClosing (object, [System.Windows.Forms] System.Windows.Forms.FormClosingEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.FormClosingEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ShowEvents</Name>
                  <Signature>bool get_ShowEvents ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ShowEvents</Name>
                  <Signature>bool get_ShowEvents ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ShowEvents</Name>
                  <Signature>void set_ShowEvents (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ShowEvents</Name>
                  <Signature>void set_ShowEvents (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateShowEventStatus</Name>
                  <Signature>void UpdateShowEventStatus (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnShowEventsButtonCheckedChanged</Name>
                  <Signature>void OnShowEventsButtonCheckedChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAutoScrollButtonCheckedChanged</Name>
                  <Signature>void OnAutoScrollButtonCheckedChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnToolStripMouseEnter</Name>
                  <Signature>void OnToolStripMouseEnter (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnOpenLogFileButtonClick</Name>
                  <Signature>void OnOpenLogFileButtonClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>void g (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnClearToolStripMenuItemClick</Name>
                  <Signature>void OnClearToolStripMenuItemClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>void h (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>PauseTest</Name>
                  <Signature>void PauseTest ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>PauseTest</Name>
                  <Signature>void PauseTest ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ResumeTest</Name>
                  <Signature>void ResumeTest ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ResumeTest</Name>
                  <Signature>void ResumeTest ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>x</Name>
                  <Signature>void x ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>OriginWindowStyle</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestFixtures</Name>
                  <Signature>TestAutomationFX.UI.TestRunner.TestFixtureInfo[]</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestFixtures</Name>
                  <Signature>TestAutomationFX.UI.TestRunner.TestFixtureInfo[] TestFixtures</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsCycleTestEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsCycleTestEnabled</Name>
                  <Signature>bool IsCycleTestEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ShowEvents</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ShowEvents</Name>
                  <Signature>bool ShowEvents</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>VoidDelegate</Name>
                <NewName>VoidDelegate</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.TestRunnerThreadTerminateEvent</Name>
              <NewName>TestAutomationFX.Core.TestRunner.TestRunnerThreadTerminateEvent</NewName>
              <Field>
                <Original>
                  <Name>m_TestRunnerMonitorObject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestRunnerThreadTerminateEvent</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestRunnerThreadTerminateEvent</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Instance</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestRunnerThreadTerminateEvent get_Instance ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Instance</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestRunnerThreadTerminateEvent get_Instance ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsThreadTerminated</Name>
                  <Signature>bool get_IsThreadTerminated ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsThreadTerminated</Name>
                  <Signature>bool get_IsThreadTerminated ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Instance</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestRunnerThreadTerminateEvent</Signature>
                </Original>
                <Obfuscated>
                  <Name>Instance</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestRunnerThreadTerminateEvent Instance</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsThreadTerminated</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsThreadTerminated</Name>
                  <Signature>bool IsThreadTerminated</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.TestRunnerThreadStatus</Name>
              <NewName>TestAutomationFX.Core.TestRunner.TestRunnerThreadStatus</NewName>
              <Field>
                <Original>
                  <Name>m_Instance</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestRunnerThreadStatus</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestRunnerThreadStatus</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ThreadHasBeenStarted</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Instance</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestRunnerThreadStatus get_Instance ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Instance</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestRunnerThreadStatus get_Instance ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsTestTerminated</Name>
                  <Signature>bool get_IsTestTerminated ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsTestTerminated</Name>
                  <Signature>bool get_IsTestTerminated ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsThreadStopped</Name>
                  <Signature>bool get_IsThreadStopped ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsThreadStopped</Name>
                  <Signature>bool get_IsThreadStopped ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsThreadTerminated</Name>
                  <Signature>bool get_IsThreadTerminated ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsThreadTerminated</Name>
                  <Signature>bool get_IsThreadTerminated ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ThreadHasBeenStarted</Name>
                  <Signature>bool get_ThreadHasBeenStarted ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ThreadHasBeenStarted</Name>
                  <Signature>bool get_ThreadHasBeenStarted ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ThreadHasBeenStarted</Name>
                  <Signature>void set_ThreadHasBeenStarted (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ThreadHasBeenStarted</Name>
                  <Signature>void set_ThreadHasBeenStarted (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Instance</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestRunnerThreadStatus</Signature>
                </Original>
                <Obfuscated>
                  <Name>Instance</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestRunnerThreadStatus Instance</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsTestTerminated</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsTestTerminated</Name>
                  <Signature>bool IsTestTerminated</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsThreadStopped</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsThreadStopped</Name>
                  <Signature>bool IsThreadStopped</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsThreadTerminated</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsThreadTerminated</Name>
                  <Signature>bool IsThreadTerminated</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ThreadHasBeenStarted</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ThreadHasBeenStarted</Name>
                  <Signature>bool ThreadHasBeenStarted</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.TestRunner.TestStatusReporterBase</Name>
              <NewName>TestAutomationFX.UI.TestRunner.TestStatusReporterBase</NewName>
              <Method>
                <Original>
                  <Name>AddStatusMessage</Name>
                  <Signature>void AddStatusMessage (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddStatusMessage</Name>
                  <Signature>void AddStatusMessage (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetProgress</Name>
                  <Signature>void SetProgress (int32, int32, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetProgress</Name>
                  <Signature>void SetProgress (int32, int32, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReportStatus</Name>
                  <Signature>void ReportStatus (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReportStatus</Name>
                  <Signature>void ReportStatus (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReportWaitProgress</Name>
                  <Signature>void ReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReportWaitProgress</Name>
                  <Signature>void ReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.Core.ITestStatusLogger.ReportStatus</Name>
                  <Signature>void TestAutomationFX.Core.ITestStatusLogger.ReportStatus (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.Core.ITestStatusLogger.ReportStatus</Name>
                  <Signature>void TestAutomationFX.Core.ITestStatusLogger.ReportStatus (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.Core.ITestStatusLogger.ReportWaitProgress</Name>
                  <Signature>void TestAutomationFX.Core.ITestStatusLogger.ReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.Core.ITestStatusLogger.ReportWaitProgress</Name>
                  <Signature>void TestAutomationFX.Core.ITestStatusLogger.ReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <NestedType>
                <Name>AddStatusMessageDelegate</Name>
                <NewName>a</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>SetProgressDelegate</Name>
                <NewName>b</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke (int32, int32, string)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke (int32, int32, string)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (int32, int32, string, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (int32, int32, string, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.TestRunner.TestStatusLogControl</Name>
              <NewName>TestAutomationFX.UI.TestRunner.TestStatusLogControl</NewName>
              <Field>
                <Original>
                  <Name>m_TreeModel</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeModel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeModel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_LastNonDebugLevelNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ScrollToAdded</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ShowEvents</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_LogFile</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogFile</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Logging.LogFile</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TreeView</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>statusStrip1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.StatusStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.StatusStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>toolStripStatusLabel1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripStatusLabel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripStatusLabel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ProgressBar</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripProgressBar</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripProgressBar</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>nodeTextBox1</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeTextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeTextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>nodeStateIcon1</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeStateIcon</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeStateIcon</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TreeContextMenu</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ContextMenuStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ContextMenuStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ShowMenuItem</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearTree</Name>
                  <Signature>void ClearTree ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScrollToAdded</Name>
                  <Signature>bool get_ScrollToAdded ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ScrollToAdded</Name>
                  <Signature>bool get_ScrollToAdded ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ScrollToAdded</Name>
                  <Signature>void set_ScrollToAdded (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ScrollToAdded</Name>
                  <Signature>void set_ScrollToAdded (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ShowEvents</Name>
                  <Signature>bool get_ShowEvents ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ShowEvents</Name>
                  <Signature>bool get_ShowEvents ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ShowEvents</Name>
                  <Signature>void set_ShowEvents (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ShowEvents</Name>
                  <Signature>void set_ShowEvents (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetIcon</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap GetIcon (TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap a (TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddStatusMessage</Name>
                  <Signature>void AddStatusMessage (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddStatusMessage</Name>
                  <Signature>void AddStatusMessage (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddToTreeView</Name>
                  <Signature>void AddToTreeView (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExpandNode</Name>
                  <Signature>void ExpandNode (TestAutomationFX.Controls.Tree.Node)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.Node)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ScrollToNode</Name>
                  <Signature>void ScrollToNode (TestAutomationFX.Controls.Tree.Node)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (TestAutomationFX.Controls.Tree.Node)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetProgress</Name>
                  <Signature>void SetProgress (int32, int32, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetProgress</Name>
                  <Signature>void SetProgress (int32, int32, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SaveLogFile</Name>
                  <Signature>void SaveLogFile (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SaveLogFile</Name>
                  <Signature>void SaveLogFile (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>LoadLogFile</Name>
                  <Signature>void LoadLogFile (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>LoadLogFile</Name>
                  <Signature>void LoadLogFile (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnShowMenuItemClick</Name>
                  <Signature>void OnShowMenuItemClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetSelectedNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node GetSelectedNode ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Clear</Name>
                  <Signature>void Clear ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Clear</Name>
                  <Signature>void Clear ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnTreeContextMenuOpening</Name>
                  <Signature>void OnTreeContextMenuOpening (object, [System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ScrollToAdded</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ScrollToAdded</Name>
                  <Signature>bool ScrollToAdded</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ShowEvents</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ShowEvents</Name>
                  <Signature>bool ShowEvents</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.TestRunner.TestStatusReporter</Name>
              <NewName>TestAutomationFX.UI.TestRunner.TestStatusReporter</NewName>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_StatusReportListBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TimeoutProgressMessage</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ProgressBar</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ProgressBar</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ProgressBar</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddStatusMessage</Name>
                  <Signature>void AddStatusMessage (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddStatusMessage</Name>
                  <Signature>void AddStatusMessage (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetProgress</Name>
                  <Signature>void SetProgress (int32, int32, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetProgress</Name>
                  <Signature>void SetProgress (int32, int32, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.TestSuite</Name>
              <NewName>TestAutomationFX.Core.TestRunner.TestSuite</NewName>
              <Field>
                <Original>
                  <Name>&lt;Name&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;TestSuiteItems&gt;k__BackingField</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestSuiteItem &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestSuiteItem &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Name</Name>
                  <Signature>void set_Name (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Name</Name>
                  <Signature>void set_Name (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestSuiteItems</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestSuiteItem &gt; get_TestSuiteItems ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestSuiteItems</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestSuiteItem &gt; get_TestSuiteItems ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestSuiteItems</Name>
                  <Signature>void set_TestSuiteItems ([System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestSuiteItem &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestSuiteItems</Name>
                  <Signature>void set_TestSuiteItems ([System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestSuiteItem &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Run</Name>
                  <Signature>void Run ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Run</Name>
                  <Signature>void Run ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Name</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Name</Name>
                  <Signature>string Name</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestSuiteItems</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestSuiteItem &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestSuiteItems</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.Core.TestRunner.TestSuiteItem &gt; TestSuiteItems</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.TestRunner.TestSuiteControl</Name>
              <NewName>TestAutomationFX.UI.TestRunner.TestSuiteControl</NewName>
              <Field>
                <Original>
                  <Name>m_TestSuite</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestSuite</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestSuite</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ListBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestSuite</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestSuite get_TestSuite ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestSuite</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestSuite get_TestSuite ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestSuite</Name>
                  <Signature>void set_TestSuite (TestAutomationFX.Core.TestRunner.TestSuite)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestSuite</Name>
                  <Signature>void set_TestSuite (TestAutomationFX.Core.TestRunner.TestSuite)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddEventHandlers</Name>
                  <Signature>void AddEventHandlers ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnListChanged</Name>
                  <Signature>void OnListChanged (object, [System] System.ComponentModel.ListChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.ListChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAddingNew</Name>
                  <Signature>void OnAddingNew (object, [System] System.ComponentModel.AddingNewEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.AddingNewEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemoveEventHandlers</Name>
                  <Signature>void RemoveEventHandlers ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateView</Name>
                  <Signature>void UpdateView ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnDragDrop</Name>
                  <Signature>void OnDragDrop (object, [System.Windows.Forms] System.Windows.Forms.DragEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.DragEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateId</Name>
                  <Signature>void UpdateId (TestAutomationFX.Core.TestRunner.TestMethodInfo, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.TestRunner.TestMethodInfo, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddTestCallItem</Name>
                  <Signature>void AddTestCallItem (TestAutomationFX.Core.TestRunner.TestMethodInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.TestRunner.TestMethodInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnDragEnter</Name>
                  <Signature>void OnDragEnter (object, [System.Windows.Forms] System.Windows.Forms.DragEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [System.Windows.Forms] System.Windows.Forms.DragEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>TestSuite</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestSuite</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestSuite</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestSuite TestSuite</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestRunner.TestRunnerThreadActiveEvent</Name>
              <NewName>TestAutomationFX.Core.TestRunner.TestRunnerThreadActiveEvent</NewName>
              <Field>
                <Original>
                  <Name>m_ThreadActivateHelperObject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestRunnerThreadActiveEvent</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestRunnerThreadActiveEvent</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ThreadStoppedEvent</Name>
                  <Signature>[mscorlib] System.Threading.ManualResetEvent</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Threading.ManualResetEvent</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Instance</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestRunnerThreadActiveEvent get_Instance ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Instance</Name>
                  <Signature>static TestAutomationFX.Core.TestRunner.TestRunnerThreadActiveEvent get_Instance ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetThreadAsActive</Name>
                  <Signature>void SetThreadAsActive ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetThreadAsActive</Name>
                  <Signature>void SetThreadAsActive ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsThreadStopped</Name>
                  <Signature>bool get_IsThreadStopped ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsThreadStopped</Name>
                  <Signature>bool get_IsThreadStopped ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Set</Name>
                  <Signature>bool Set ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Set</Name>
                  <Signature>bool Set ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Reset</Name>
                  <Signature>bool Reset ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Reset</Name>
                  <Signature>bool Reset ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForThreadDeactivated</Name>
                  <Signature>void WaitForThreadDeactivated (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WaitForThreadDeactivated</Name>
                  <Signature>void WaitForThreadDeactivated (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Instance</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestRunnerThreadActiveEvent</Signature>
                </Original>
                <Obfuscated>
                  <Name>Instance</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestRunnerThreadActiveEvent Instance</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsThreadStopped</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsThreadStopped</Name>
                  <Signature>bool IsThreadStopped</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.TestRunner.TestSuiteListControl</Name>
              <NewName>TestAutomationFX.UI.TestRunner.TestSuiteListControl</NewName>
              <Field>
                <Original>
                  <Name>m_TestProject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SelectedTestSuiteChanged</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TreeView</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeView</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeView</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;SelectedTestSuite&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestSuite</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestSuite</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_SelectedTestSuiteChanged</Name>
                  <Signature>void add_SelectedTestSuiteChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_SelectedTestSuiteChanged</Name>
                  <Signature>void add_SelectedTestSuiteChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_SelectedTestSuiteChanged</Name>
                  <Signature>void remove_SelectedTestSuiteChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_SelectedTestSuiteChanged</Name>
                  <Signature>void remove_SelectedTestSuiteChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestProject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject get_TestProject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestProject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject get_TestProject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestProject</Name>
                  <Signature>void set_TestProject (TestAutomationFX.Core.TestRunner.TestProject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestProject</Name>
                  <Signature>void set_TestProject (TestAutomationFX.Core.TestRunner.TestProject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BuildView</Name>
                  <Signature>void BuildView ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearView</Name>
                  <Signature>void ClearView ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireSelectedTestSuiteChanged</Name>
                  <Signature>void FireSelectedTestSuiteChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FireSelectedTestSuiteChanged</Name>
                  <Signature>void FireSelectedTestSuiteChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AfterSelect</Name>
                  <Signature>void AfterSelect (object, [System.Windows.Forms] System.Windows.Forms.TreeViewEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.TreeViewEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_SelectedTestSuite</Name>
                  <Signature>void set_SelectedTestSuite (TestAutomationFX.Core.TestRunner.TestSuite)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_SelectedTestSuite</Name>
                  <Signature>void set_SelectedTestSuite (TestAutomationFX.Core.TestRunner.TestSuite)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SelectedTestSuite</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestSuite get_SelectedTestSuite ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SelectedTestSuite</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestSuite get_SelectedTestSuite ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>TestProject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestProject</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestProject TestProject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SelectedTestSuite</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestSuite</Signature>
                </Original>
                <Obfuscated>
                  <Name>SelectedTestSuite</Name>
                  <Signature>TestAutomationFX.Core.TestRunner.TestSuite SelectedTestSuite</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>SelectedTestSuiteChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>SelectedTestSuiteChanged</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestSettings</Name>
              <NewName>TestAutomationFX.Core.TestSettings</NewName>
              <Field>
                <Original>
                  <Name>m_Current</Name>
                  <Signature>TestAutomationFX.Core.Settings.TafxSettings</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Settings.TafxSettings</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Current</Name>
                  <Signature>static TestAutomationFX.Core.Settings.TafxSettings get_Current ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Current</Name>
                  <Signature>static TestAutomationFX.Core.Settings.TafxSettings get_Current ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Current</Name>
                  <Signature>static void set_Current (TestAutomationFX.Core.Settings.TafxSettings)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Current</Name>
                  <Signature>static void set_Current (TestAutomationFX.Core.Settings.TafxSettings)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_StopOnFailedTest</Name>
                  <Signature>static bool get_StopOnFailedTest ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_StopOnFailedTest</Name>
                  <Signature>static bool get_StopOnFailedTest ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_StopOnFailedTest</Name>
                  <Signature>static void set_StopOnFailedTest (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_StopOnFailedTest</Name>
                  <Signature>static void set_StopOnFailedTest (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LogFilePath</Name>
                  <Signature>static string get_LogFilePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LogFilePath</Name>
                  <Signature>static string get_LogFilePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LogFilePath</Name>
                  <Signature>static void set_LogFilePath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_LogFilePath</Name>
                  <Signature>static void set_LogFilePath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SaveScreenShotOnTestFailure</Name>
                  <Signature>static bool get_SaveScreenShotOnTestFailure ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SaveScreenShotOnTestFailure</Name>
                  <Signature>static bool get_SaveScreenShotOnTestFailure ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_SaveScreenShotOnTestFailure</Name>
                  <Signature>static void set_SaveScreenShotOnTestFailure (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_SaveScreenShotOnTestFailure</Name>
                  <Signature>static void set_SaveScreenShotOnTestFailure (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LogObjectImageOnAttach</Name>
                  <Signature>static bool get_LogObjectImageOnAttach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LogObjectImageOnAttach</Name>
                  <Signature>static bool get_LogObjectImageOnAttach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LogObjectImageOnAttach</Name>
                  <Signature>static void set_LogObjectImageOnAttach (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_LogObjectImageOnAttach</Name>
                  <Signature>static void set_LogObjectImageOnAttach (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutoStartTests</Name>
                  <Signature>static bool get_AutoStartTests ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutoStartTests</Name>
                  <Signature>static bool get_AutoStartTests ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AutoStartTests</Name>
                  <Signature>static void set_AutoStartTests (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AutoStartTests</Name>
                  <Signature>static void set_AutoStartTests (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CloseTestFormAfterTests</Name>
                  <Signature>static bool get_CloseTestFormAfterTests ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CloseTestFormAfterTests</Name>
                  <Signature>static bool get_CloseTestFormAfterTests ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CloseTestFormAfterTests</Name>
                  <Signature>static void set_CloseTestFormAfterTests (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CloseTestFormAfterTests</Name>
                  <Signature>static void set_CloseTestFormAfterTests (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestFormIsHidden</Name>
                  <Signature>static bool get_TestFormIsHidden ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestFormIsHidden</Name>
                  <Signature>static bool get_TestFormIsHidden ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestFormIsHidden</Name>
                  <Signature>static void set_TestFormIsHidden (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestFormIsHidden</Name>
                  <Signature>static void set_TestFormIsHidden (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestFormIsTransparent</Name>
                  <Signature>static bool get_TestFormIsTransparent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestFormIsTransparent</Name>
                  <Signature>static bool get_TestFormIsTransparent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestFormIsTransparent</Name>
                  <Signature>static void set_TestFormIsTransparent (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestFormIsTransparent</Name>
                  <Signature>static void set_TestFormIsTransparent (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_BlockUserInput</Name>
                  <Signature>static bool get_BlockUserInput ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_BlockUserInput</Name>
                  <Signature>static bool get_BlockUserInput ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_BlockUserInput</Name>
                  <Signature>static void set_BlockUserInput (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_BlockUserInput</Name>
                  <Signature>static void set_BlockUserInput (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ShowEvents</Name>
                  <Signature>static bool get_ShowEvents ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ShowEvents</Name>
                  <Signature>static bool get_ShowEvents ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ShowEvents</Name>
                  <Signature>static void set_ShowEvents (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ShowEvents</Name>
                  <Signature>static void set_ShowEvents (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Current</Name>
                  <Signature>TestAutomationFX.Core.Settings.TafxSettings</Signature>
                </Original>
                <Obfuscated>
                  <Name>Current</Name>
                  <Signature>TestAutomationFX.Core.Settings.TafxSettings Current</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>StopOnFailedTest</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>StopOnFailedTest</Name>
                  <Signature>bool StopOnFailedTest</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LogFilePath</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>LogFilePath</Name>
                  <Signature>string LogFilePath</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SaveScreenShotOnTestFailure</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>SaveScreenShotOnTestFailure</Name>
                  <Signature>bool SaveScreenShotOnTestFailure</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LogObjectImageOnAttach</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>LogObjectImageOnAttach</Name>
                  <Signature>bool LogObjectImageOnAttach</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutoStartTests</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutoStartTests</Name>
                  <Signature>bool AutoStartTests</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CloseTestFormAfterTests</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>CloseTestFormAfterTests</Name>
                  <Signature>bool CloseTestFormAfterTests</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestFormIsHidden</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestFormIsHidden</Name>
                  <Signature>bool TestFormIsHidden</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestFormIsTransparent</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestFormIsTransparent</Name>
                  <Signature>bool TestFormIsTransparent</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>BlockUserInput</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>BlockUserInput</Name>
                  <Signature>bool BlockUserInput</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ShowEvents</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ShowEvents</Name>
                  <Signature>bool ShowEvents</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Settings.PlaybackSettings</Name>
              <NewName>TestAutomationFX.Core.Settings.PlaybackSettings</NewName>
              <Field>
                <Original>
                  <Name>&lt;StopOnFailedTest&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;LogFilePath&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;SaveScreenShotOnTestFailure&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;LogObjectImageOnAttach&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;AutoStartTests&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;CloseTestFormAfterTests&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;TestFormIsHidden&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;TestFormIsTransparent&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;BlockUserInput&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ShowEvents&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_StopOnFailedTest</Name>
                  <Signature>bool get_StopOnFailedTest ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_StopOnFailedTest</Name>
                  <Signature>bool get_StopOnFailedTest ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_StopOnFailedTest</Name>
                  <Signature>void set_StopOnFailedTest (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_StopOnFailedTest</Name>
                  <Signature>void set_StopOnFailedTest (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LogFilePath</Name>
                  <Signature>string get_LogFilePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LogFilePath</Name>
                  <Signature>string get_LogFilePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LogFilePath</Name>
                  <Signature>void set_LogFilePath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_LogFilePath</Name>
                  <Signature>void set_LogFilePath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SaveScreenShotOnTestFailure</Name>
                  <Signature>bool get_SaveScreenShotOnTestFailure ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SaveScreenShotOnTestFailure</Name>
                  <Signature>bool get_SaveScreenShotOnTestFailure ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_SaveScreenShotOnTestFailure</Name>
                  <Signature>void set_SaveScreenShotOnTestFailure (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_SaveScreenShotOnTestFailure</Name>
                  <Signature>void set_SaveScreenShotOnTestFailure (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LogObjectImageOnAttach</Name>
                  <Signature>bool get_LogObjectImageOnAttach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LogObjectImageOnAttach</Name>
                  <Signature>bool get_LogObjectImageOnAttach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LogObjectImageOnAttach</Name>
                  <Signature>void set_LogObjectImageOnAttach (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_LogObjectImageOnAttach</Name>
                  <Signature>void set_LogObjectImageOnAttach (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutoStartTests</Name>
                  <Signature>bool get_AutoStartTests ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutoStartTests</Name>
                  <Signature>bool get_AutoStartTests ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AutoStartTests</Name>
                  <Signature>void set_AutoStartTests (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AutoStartTests</Name>
                  <Signature>void set_AutoStartTests (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CloseTestFormAfterTests</Name>
                  <Signature>bool get_CloseTestFormAfterTests ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CloseTestFormAfterTests</Name>
                  <Signature>bool get_CloseTestFormAfterTests ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CloseTestFormAfterTests</Name>
                  <Signature>void set_CloseTestFormAfterTests (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CloseTestFormAfterTests</Name>
                  <Signature>void set_CloseTestFormAfterTests (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestFormIsHidden</Name>
                  <Signature>bool get_TestFormIsHidden ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestFormIsHidden</Name>
                  <Signature>bool get_TestFormIsHidden ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestFormIsHidden</Name>
                  <Signature>void set_TestFormIsHidden (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestFormIsHidden</Name>
                  <Signature>void set_TestFormIsHidden (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestFormIsTransparent</Name>
                  <Signature>bool get_TestFormIsTransparent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestFormIsTransparent</Name>
                  <Signature>bool get_TestFormIsTransparent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestFormIsTransparent</Name>
                  <Signature>void set_TestFormIsTransparent (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestFormIsTransparent</Name>
                  <Signature>void set_TestFormIsTransparent (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_BlockUserInput</Name>
                  <Signature>bool get_BlockUserInput ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_BlockUserInput</Name>
                  <Signature>bool get_BlockUserInput ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_BlockUserInput</Name>
                  <Signature>void set_BlockUserInput (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_BlockUserInput</Name>
                  <Signature>void set_BlockUserInput (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ShowEvents</Name>
                  <Signature>bool get_ShowEvents ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ShowEvents</Name>
                  <Signature>bool get_ShowEvents ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ShowEvents</Name>
                  <Signature>void set_ShowEvents (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ShowEvents</Name>
                  <Signature>void set_ShowEvents (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>StopOnFailedTest</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>StopOnFailedTest</Name>
                  <Signature>bool StopOnFailedTest</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LogFilePath</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>LogFilePath</Name>
                  <Signature>string LogFilePath</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SaveScreenShotOnTestFailure</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>SaveScreenShotOnTestFailure</Name>
                  <Signature>bool SaveScreenShotOnTestFailure</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LogObjectImageOnAttach</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>LogObjectImageOnAttach</Name>
                  <Signature>bool LogObjectImageOnAttach</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutoStartTests</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutoStartTests</Name>
                  <Signature>bool AutoStartTests</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CloseTestFormAfterTests</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>CloseTestFormAfterTests</Name>
                  <Signature>bool CloseTestFormAfterTests</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestFormIsHidden</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestFormIsHidden</Name>
                  <Signature>bool TestFormIsHidden</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestFormIsTransparent</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestFormIsTransparent</Name>
                  <Signature>bool TestFormIsTransparent</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>BlockUserInput</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>BlockUserInput</Name>
                  <Signature>bool BlockUserInput</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ShowEvents</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ShowEvents</Name>
                  <Signature>bool ShowEvents</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Settings.RecorderSettings</Name>
              <NewName>TestAutomationFX.Core.Settings.RecorderSettings</NewName>
              <Field>
                <Original>
                  <Name>&lt;UseMsaaApiSupport&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;UseAutomationElementApiSupport&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;UseAutomationId&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ShowActionRecordDelay&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UseMsaaApiSupport</Name>
                  <Signature>bool get_UseMsaaApiSupport ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UseMsaaApiSupport</Name>
                  <Signature>bool get_UseMsaaApiSupport ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UseMsaaApiSupport</Name>
                  <Signature>void set_UseMsaaApiSupport (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UseMsaaApiSupport</Name>
                  <Signature>void set_UseMsaaApiSupport (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UseAutomationElementApiSupport</Name>
                  <Signature>bool get_UseAutomationElementApiSupport ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UseAutomationElementApiSupport</Name>
                  <Signature>bool get_UseAutomationElementApiSupport ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UseAutomationElementApiSupport</Name>
                  <Signature>void set_UseAutomationElementApiSupport (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UseAutomationElementApiSupport</Name>
                  <Signature>void set_UseAutomationElementApiSupport (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UseAutomationId</Name>
                  <Signature>bool get_UseAutomationId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UseAutomationId</Name>
                  <Signature>bool get_UseAutomationId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UseAutomationId</Name>
                  <Signature>void set_UseAutomationId (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UseAutomationId</Name>
                  <Signature>void set_UseAutomationId (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ShowActionRecordDelay</Name>
                  <Signature>bool get_ShowActionRecordDelay ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ShowActionRecordDelay</Name>
                  <Signature>bool get_ShowActionRecordDelay ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ShowActionRecordDelay</Name>
                  <Signature>void set_ShowActionRecordDelay (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ShowActionRecordDelay</Name>
                  <Signature>void set_ShowActionRecordDelay (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>UseMsaaApiSupport</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>UseMsaaApiSupport</Name>
                  <Signature>bool UseMsaaApiSupport</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UseAutomationElementApiSupport</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>UseAutomationElementApiSupport</Name>
                  <Signature>bool UseAutomationElementApiSupport</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UseAutomationId</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>UseAutomationId</Name>
                  <Signature>bool UseAutomationId</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ShowActionRecordDelay</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ShowActionRecordDelay</Name>
                  <Signature>bool ShowActionRecordDelay</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Settings.TafxSettings</Name>
              <NewName>TestAutomationFX.Core.Settings.TafxSettings</NewName>
              <Field>
                <Original>
                  <Name>&lt;RecorderSettings&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.Settings.RecorderSettings</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Settings.RecorderSettings</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;PlaybackSettings&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.Settings.PlaybackSettings</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Settings.PlaybackSettings</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RecorderSettings</Name>
                  <Signature>TestAutomationFX.Core.Settings.RecorderSettings get_RecorderSettings ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RecorderSettings</Name>
                  <Signature>TestAutomationFX.Core.Settings.RecorderSettings get_RecorderSettings ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_RecorderSettings</Name>
                  <Signature>void set_RecorderSettings (TestAutomationFX.Core.Settings.RecorderSettings)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.Settings.RecorderSettings)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PlaybackSettings</Name>
                  <Signature>TestAutomationFX.Core.Settings.PlaybackSettings get_PlaybackSettings ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_PlaybackSettings</Name>
                  <Signature>TestAutomationFX.Core.Settings.PlaybackSettings get_PlaybackSettings ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_PlaybackSettings</Name>
                  <Signature>void set_PlaybackSettings (TestAutomationFX.Core.Settings.PlaybackSettings)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.Settings.PlaybackSettings)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>RecorderSettings</Name>
                  <Signature>TestAutomationFX.Core.Settings.RecorderSettings</Signature>
                </Original>
                <Obfuscated>
                  <Name>RecorderSettings</Name>
                  <Signature>TestAutomationFX.Core.Settings.RecorderSettings RecorderSettings</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PlaybackSettings</Name>
                  <Signature>TestAutomationFX.Core.Settings.PlaybackSettings</Signature>
                </Original>
                <Obfuscated>
                  <Name>PlaybackSettings</Name>
                  <Signature>TestAutomationFX.Core.Settings.PlaybackSettings PlaybackSettings</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.TestStatusLoggerManager</Name>
              <NewName>TestAutomationFX.Core.TestStatusLoggerManager</NewName>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TestStatusLogger</Name>
                  <Signature>TestAutomationFX.Core.ITestStatusLogger</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.ITestStatusLogger</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;LogToConsoleEnabled&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_LogToConsoleEnabled</Name>
                  <Signature>static bool get_LogToConsoleEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LogToConsoleEnabled</Name>
                  <Signature>static bool get_LogToConsoleEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LogToConsoleEnabled</Name>
                  <Signature>static void set_LogToConsoleEnabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_LogToConsoleEnabled</Name>
                  <Signature>static void set_LogToConsoleEnabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RegisterLogger</Name>
                  <Signature>static void RegisterLogger (TestAutomationFX.Core.ITestStatusLogger)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RegisterLogger</Name>
                  <Signature>static void RegisterLogger (TestAutomationFX.Core.ITestStatusLogger)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ConfigureLog4Net</Name>
                  <Signature>static void ConfigureLog4Net ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>LogSystemInformation</Name>
                  <Signature>static void LogSystemInformation ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static void b ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReportStatus</Name>
                  <Signature>static void ReportStatus (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReportStatus</Name>
                  <Signature>static void ReportStatus (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReportStatus</Name>
                  <Signature>static void ReportStatus (string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReportStatus</Name>
                  <Signature>static void ReportStatus (string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMessageFilteredOut</Name>
                  <Signature>static bool IsMessageFilteredOut (TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WriteLogToConsole</Name>
                  <Signature>static void WriteLogToConsole (string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReportStatus</Name>
                  <Signature>static void ReportStatus (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReportStatus</Name>
                  <Signature>static void ReportStatus (string, TestAutomationFX.Core.LogLevel, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReportWaitProgress</Name>
                  <Signature>static void ReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ReportWaitProgress</Name>
                  <Signature>static void ReportWaitProgress (int32, int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>LogWithLog4Net</Name>
                  <Signature>static void LogWithLog4Net (string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static void b (string, TestAutomationFX.Core.LogLevel)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>LogToConsoleEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>LogToConsoleEnabled</Name>
                  <Signature>bool LogToConsoleEnabled</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.BitmapHelper</Name>
              <NewName>TestAutomationFX.Controls.BitmapHelper</NewName>
              <Method>
                <Original>
                  <Name>SetAlphaChannelValue</Name>
                  <Signature>static void SetAlphaChannelValue ([System.Drawing] System.Drawing.Bitmap, unsigned int8)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetAlphaChannelValue</Name>
                  <Signature>static void SetAlphaChannelValue ([System.Drawing] System.Drawing.Bitmap, unsigned int8)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.GifFrame</Name>
              <NewName>TestAutomationFX.Controls.GifFrame</NewName>
              <Field>
                <Original>
                  <Name>_image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_delay</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image get_Image ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image get_Image ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Delay</Name>
                  <Signature>int32 get_Delay ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Delay</Name>
                  <Signature>int32 get_Delay ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System.Drawing] System.Drawing.Image, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System.Drawing] System.Drawing.Image, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                </Original>
                <Obfuscated>
                  <Name>Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image Image</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Delay</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Delay</Name>
                  <Signature>int32 Delay</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.GifDecoder</Name>
              <NewName>TestAutomationFX.Controls.GifDecoder</NewName>
              <Field>
                <Original>
                  <Name>StatusOK</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>StatusOK</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>StatusFormatError</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>StatusFormatError</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>StatusOpenError</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>StatusOpenError</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MaxStackSize</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>inStream</Name>
                  <Signature>[mscorlib] System.IO.Stream</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.IO.Stream</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>status</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>width</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>height</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>gctFlag</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>gctSize</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>loopCount</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>gct</Name>
                  <Signature>int32[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>lct</Name>
                  <Signature>int32[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>act</Name>
                  <Signature>int32[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>int32[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>bgIndex</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>bgColor</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>lastBgColor</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>pixelAspect</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>lctFlag</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>interlace</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>lctSize</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ix</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>iy</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>l</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>iw</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ih</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>n</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>lastRect</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>bitmap</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>lastImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>block</Name>
                  <Signature>unsigned int8[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>unsigned int8[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>blockSize</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>o</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>dispose</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>p</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>lastDispose</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>q</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>transparency</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>delay</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>r</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>transIndex</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>s</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>prefix</Name>
                  <Signature>int16[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int16[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>suffix</Name>
                  <Signature>unsigned int8[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>unsigned int8[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>pixelStack</Name>
                  <Signature>unsigned int8[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>unsigned int8[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>pixels</Name>
                  <Signature>unsigned int8[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>unsigned int8[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>frames</Name>
                  <Signature>[mscorlib] System.Collections.ArrayList</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.ArrayList</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>frameCount</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>t</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_makeTransparent</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_FrameCount</Name>
                  <Signature>int32 get_FrameCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_FrameCount</Name>
                  <Signature>int32 get_FrameCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image get_Image ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image get_Image ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LoopCount</Name>
                  <Signature>int32 get_LoopCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LoopCount</Name>
                  <Signature>int32 get_LoopCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.IO.Stream, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.IO.Stream, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPixels</Name>
                  <Signature>int32[] GetPixels ([System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32[] a ([System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetPixels</Name>
                  <Signature>void SetPixels (int32[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (int32[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetPixels</Name>
                  <Signature>void SetPixels ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetFrame</Name>
                  <Signature>TestAutomationFX.Controls.GifFrame GetFrame (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetFrame</Name>
                  <Signature>TestAutomationFX.Controls.GifFrame GetFrame (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_FrameSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size get_FrameSize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_FrameSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size get_FrameSize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Read</Name>
                  <Signature>int32 Read ([mscorlib] System.IO.Stream)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32 a ([mscorlib] System.IO.Stream)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DecodeImageData</Name>
                  <Signature>void DecodeImageData ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Error</Name>
                  <Signature>bool Error ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Init</Name>
                  <Signature>void Init ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Read</Name>
                  <Signature>int32 Read ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32 a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReadBlock</Name>
                  <Signature>int32 ReadBlock ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32 b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReadColorTable</Name>
                  <Signature>int32[] ReadColorTable (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32[] a (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReadContents</Name>
                  <Signature>void ReadContents ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReadGraphicControlExt</Name>
                  <Signature>void ReadGraphicControlExt ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReadHeader</Name>
                  <Signature>void ReadHeader ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReadImage</Name>
                  <Signature>void ReadImage ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>void g ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReadLSD</Name>
                  <Signature>void ReadLSD ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>void h ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReadNetscapeExt</Name>
                  <Signature>void ReadNetscapeExt ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>void i ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReadShort</Name>
                  <Signature>int32 ReadShort ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>int32 c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ResetFrame</Name>
                  <Signature>void ResetFrame ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>void j ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Skip</Name>
                  <Signature>void Skip ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>void k ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>FrameCount</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>FrameCount</Name>
                  <Signature>int32 FrameCount</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                </Original>
                <Obfuscated>
                  <Name>Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image Image</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LoopCount</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>LoopCount</Name>
                  <Signature>int32 LoopCount</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>FrameSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size</Signature>
                </Original>
                <Obfuscated>
                  <Name>FrameSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size FrameSize</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.NumericTextBox</Name>
              <NewName>TestAutomationFX.Controls.NumericTextBox</NewName>
              <Field>
                <Original>
                  <Name>WM_PASTE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>numberStyle</Name>
                  <Signature>[mscorlib] System.Globalization.NumberStyles</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Globalization.NumberStyles</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>allowNegativeSign</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>allowDecimalSeperator</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>OnKeyPress</Name>
                  <Signature>void OnKeyPress ([System.Windows.Forms] System.Windows.Forms.KeyPressEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnKeyPress</Name>
                  <Signature>void OnKeyPress ([System.Windows.Forms] System.Windows.Forms.KeyPressEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>invalidNumeric</Name>
                  <Signature>bool invalidNumeric (char)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (char)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WndProc</Name>
                  <Signature>void WndProc ([out] [System.Windows.Forms] System.Windows.Forms.Message&amp;)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WndProc</Name>
                  <Signature>void WndProc ([out] [System.Windows.Forms] System.Windows.Forms.Message&amp;)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IntValue</Name>
                  <Signature>int32 get_IntValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IntValue</Name>
                  <Signature>int32 get_IntValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DecimalValue</Name>
                  <Signature>[mscorlib] System.Decimal get_DecimalValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DecimalValue</Name>
                  <Signature>[mscorlib] System.Decimal get_DecimalValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AllowNegativeSign</Name>
                  <Signature>bool get_AllowNegativeSign ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AllowNegativeSign</Name>
                  <Signature>bool get_AllowNegativeSign ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AllowNegativeSign</Name>
                  <Signature>void set_AllowNegativeSign (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AllowNegativeSign</Name>
                  <Signature>void set_AllowNegativeSign (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AllowDecimalSeperator</Name>
                  <Signature>bool get_AllowDecimalSeperator ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AllowDecimalSeperator</Name>
                  <Signature>bool get_AllowDecimalSeperator ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AllowDecimalSeperator</Name>
                  <Signature>void set_AllowDecimalSeperator (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AllowDecimalSeperator</Name>
                  <Signature>void set_AllowDecimalSeperator (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>IntValue</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>IntValue</Name>
                  <Signature>int32 IntValue</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DecimalValue</Name>
                  <Signature>[mscorlib] System.Decimal</Signature>
                </Original>
                <Obfuscated>
                  <Name>DecimalValue</Name>
                  <Signature>[mscorlib] System.Decimal DecimalValue</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AllowNegativeSign</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>AllowNegativeSign</Name>
                  <Signature>bool AllowNegativeSign</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AllowDecimalSeperator</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>AllowDecimalSeperator</Name>
                  <Signature>bool AllowDecimalSeperator</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.PerformanceAnalyzer</Name>
              <NewName>TestAutomationFX.Controls.PerformanceAnalyzer</NewName>
              <Field>
                <Original>
                  <Name>_performances</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; string, TestAutomationFX.Controls.PerformanceAnalyzer/PerformanceInfo &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; string, TestAutomationFX.Controls.PerformanceAnalyzer/PerformanceInfo &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Performances</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.PerformanceAnalyzer/PerformanceInfo &gt; get_Performances ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Performances</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.PerformanceAnalyzer/PerformanceInfo &gt; get_Performances ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Start</Name>
                  <Signature>static void Start (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Start</Name>
                  <Signature>static void Start (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Finish</Name>
                  <Signature>static void Finish (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Finish</Name>
                  <Signature>static void Finish (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Reset</Name>
                  <Signature>static void Reset ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Reset</Name>
                  <Signature>static void Reset ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GenerateReport</Name>
                  <Signature>static string GenerateReport ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GenerateReport</Name>
                  <Signature>static string GenerateReport ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GenerateReport</Name>
                  <Signature>static string GenerateReport (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GenerateReport</Name>
                  <Signature>static string GenerateReport (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GenerateReport</Name>
                  <Signature>static string GenerateReport (float64)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GenerateReport</Name>
                  <Signature>static string GenerateReport (float64)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Performances</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.PerformanceAnalyzer/PerformanceInfo &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>Performances</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.PerformanceAnalyzer/PerformanceInfo &gt; Performances</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>PerformanceInfo</Name>
                <NewName>PerformanceInfo</NewName>
                <Field>
                  <Original>
                    <Name>_name</Name>
                    <Signature>string</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>string</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>_count</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>_totalTime</Name>
                    <Signature>float64</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>float64</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>_start</Name>
                    <Signature>int64</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>int64</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>get_Name</Name>
                    <Signature>string get_Name ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>get_Name</Name>
                    <Signature>string get_Name ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>get_Count</Name>
                    <Signature>int32 get_Count ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>get_Count</Name>
                    <Signature>int32 get_Count ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>set_Count</Name>
                    <Signature>void set_Count (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>set_Count</Name>
                    <Signature>void set_Count (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>get_TotalTime</Name>
                    <Signature>float64 get_TotalTime ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>get_TotalTime</Name>
                    <Signature>float64 get_TotalTime ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>set_TotalTime</Name>
                    <Signature>void set_TotalTime (float64)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>set_TotalTime</Name>
                    <Signature>void set_TotalTime (float64)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>get_Start</Name>
                    <Signature>int64 get_Start ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>get_Start</Name>
                    <Signature>int64 get_Start ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>set_Start</Name>
                    <Signature>void set_Start (int64)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>set_Start</Name>
                    <Signature>void set_Start (int64)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (string)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (string)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Property>
                  <Original>
                    <Name>Name</Name>
                    <Signature>string</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>Name</Name>
                    <Signature>string Name</Signature>
                  </Obfuscated>
                </Property>
                <Property>
                  <Original>
                    <Name>Count</Name>
                    <Signature>int32</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>Count</Name>
                    <Signature>int32 Count</Signature>
                  </Obfuscated>
                </Property>
                <Property>
                  <Original>
                    <Name>TotalTime</Name>
                    <Signature>float64</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>TotalTime</Name>
                    <Signature>float64 TotalTime</Signature>
                  </Obfuscated>
                </Property>
                <Property>
                  <Original>
                    <Name>Start</Name>
                    <Signature>int64</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>Start</Name>
                    <Signature>int64 Start</Signature>
                  </Obfuscated>
                </Property>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.ResourceHelper</Name>
              <NewName>TestAutomationFX.Controls.ResourceHelper</NewName>
              <Field>
                <Original>
                  <Name>_dVSplitCursor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_loadingIcon</Name>
                  <Signature>TestAutomationFX.Controls.GifDecoder</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.GifDecoder</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_DVSplitCursor</Name>
                  <Signature>static [System.Windows.Forms] System.Windows.Forms.Cursor get_DVSplitCursor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DVSplitCursor</Name>
                  <Signature>static [System.Windows.Forms] System.Windows.Forms.Cursor get_DVSplitCursor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LoadingIcon</Name>
                  <Signature>static TestAutomationFX.Controls.GifDecoder get_LoadingIcon ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LoadingIcon</Name>
                  <Signature>static TestAutomationFX.Controls.GifDecoder get_LoadingIcon ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCursor</Name>
                  <Signature>static [System.Windows.Forms] System.Windows.Forms.Cursor GetCursor (unsigned int8[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [System.Windows.Forms] System.Windows.Forms.Cursor a (unsigned int8[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetGifDecoder</Name>
                  <Signature>static TestAutomationFX.Controls.GifDecoder GetGifDecoder (unsigned int8[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static TestAutomationFX.Controls.GifDecoder a (unsigned int8[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>DVSplitCursor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor</Signature>
                </Original>
                <Obfuscated>
                  <Name>DVSplitCursor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor DVSplitCursor</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LoadingIcon</Name>
                  <Signature>TestAutomationFX.Controls.GifDecoder</Signature>
                </Original>
                <Obfuscated>
                  <Name>LoadingIcon</Name>
                  <Signature>TestAutomationFX.Controls.GifDecoder LoadingIcon</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.StringCollectionEditor</Name>
              <NewName>TestAutomationFX.Controls.StringCollectionEditor</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateCollectionItemType</Name>
                  <Signature>[mscorlib] System.Type CreateCollectionItemType ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateCollectionItemType</Name>
                  <Signature>[mscorlib] System.Type CreateCollectionItemType ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateInstance</Name>
                  <Signature>object CreateInstance ([mscorlib] System.Type)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateInstance</Name>
                  <Signature>object CreateInstance ([mscorlib] System.Type)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.TextHelper</Name>
              <NewName>TestAutomationFX.Controls.TextHelper</NewName>
              <Method>
                <Original>
                  <Name>TranslateAligment</Name>
                  <Signature>static [System.Drawing] System.Drawing.StringAlignment TranslateAligment ([System.Windows.Forms] System.Windows.Forms.HorizontalAlignment)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TranslateAligment</Name>
                  <Signature>static [System.Drawing] System.Drawing.StringAlignment TranslateAligment ([System.Windows.Forms] System.Windows.Forms.HorizontalAlignment)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TranslateAligmentToFlag</Name>
                  <Signature>static [System.Windows.Forms] System.Windows.Forms.TextFormatFlags TranslateAligmentToFlag ([System.Windows.Forms] System.Windows.Forms.HorizontalAlignment)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TranslateAligmentToFlag</Name>
                  <Signature>static [System.Windows.Forms] System.Windows.Forms.TextFormatFlags TranslateAligmentToFlag ([System.Windows.Forms] System.Windows.Forms.HorizontalAlignment)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TranslateTrimmingToFlag</Name>
                  <Signature>static [System.Windows.Forms] System.Windows.Forms.TextFormatFlags TranslateTrimmingToFlag ([System.Drawing] System.Drawing.StringTrimming)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TranslateTrimmingToFlag</Name>
                  <Signature>static [System.Windows.Forms] System.Windows.Forms.TextFormatFlags TranslateTrimmingToFlag ([System.Drawing] System.Drawing.StringTrimming)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Threading.AbortableThreadPool</Name>
              <NewName>TestAutomationFX.Controls.Threading.AbortableThreadPool</NewName>
              <Field>
                <Original>
                  <Name>_callbacks</Name>
                  <Signature>[System] System.Collections.Generic.LinkedList`1&lt; TestAutomationFX.Controls.Threading.WorkItem &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.Collections.Generic.LinkedList`1&lt; TestAutomationFX.Controls.Threading.WorkItem &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_threads</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; TestAutomationFX.Controls.Threading.WorkItem, [mscorlib] System.Threading.Thread &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; TestAutomationFX.Controls.Threading.WorkItem, [mscorlib] System.Threading.Thread &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>QueueUserWorkItem</Name>
                  <Signature>TestAutomationFX.Controls.Threading.WorkItem QueueUserWorkItem ([mscorlib] System.Threading.WaitCallback)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>QueueUserWorkItem</Name>
                  <Signature>TestAutomationFX.Controls.Threading.WorkItem QueueUserWorkItem ([mscorlib] System.Threading.WaitCallback)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>QueueUserWorkItem</Name>
                  <Signature>TestAutomationFX.Controls.Threading.WorkItem QueueUserWorkItem ([mscorlib] System.Threading.WaitCallback, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>QueueUserWorkItem</Name>
                  <Signature>TestAutomationFX.Controls.Threading.WorkItem QueueUserWorkItem ([mscorlib] System.Threading.WaitCallback, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HandleItem</Name>
                  <Signature>void HandleItem (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMyThread</Name>
                  <Signature>bool IsMyThread ([mscorlib] System.Threading.Thread)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsMyThread</Name>
                  <Signature>bool IsMyThread ([mscorlib] System.Threading.Thread)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Cancel</Name>
                  <Signature>TestAutomationFX.Controls.Threading.WorkItemStatus Cancel (TestAutomationFX.Controls.Threading.WorkItem, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Cancel</Name>
                  <Signature>TestAutomationFX.Controls.Threading.WorkItemStatus Cancel (TestAutomationFX.Controls.Threading.WorkItem, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CancelAll</Name>
                  <Signature>void CancelAll (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CancelAll</Name>
                  <Signature>void CancelAll (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <NestedType>
                <Name>&lt;&gt;c__DisplayClass2</Name>
                <NewName>&lt;&gt;c__DisplayClass2</NewName>
                <Field>
                  <Original>
                    <Name>item</Name>
                    <Signature>TestAutomationFX.Controls.Threading.WorkItem</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>item</Name>
                    <Signature>TestAutomationFX.Controls.Threading.WorkItem</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;HandleItem&gt;b__0</Name>
                    <Signature>void &lt;HandleItem&gt;b__0 (object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;HandleItem&gt;b__0</Name>
                    <Signature>void &lt;HandleItem&gt;b__0 (object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Threading.WorkItem</Name>
              <NewName>TestAutomationFX.Controls.Threading.WorkItem</NewName>
              <Field>
                <Original>
                  <Name>_callback</Name>
                  <Signature>[mscorlib] System.Threading.WaitCallback</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Threading.WaitCallback</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_state</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_ctx</Name>
                  <Signature>[mscorlib] System.Threading.ExecutionContext</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Threading.ExecutionContext</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Threading.WaitCallback, object, [mscorlib] System.Threading.ExecutionContext)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Threading.WaitCallback, object, [mscorlib] System.Threading.ExecutionContext)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Callback</Name>
                  <Signature>[mscorlib] System.Threading.WaitCallback get_Callback ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Threading.WaitCallback a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_State</Name>
                  <Signature>object get_State ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Context</Name>
                  <Signature>[mscorlib] System.Threading.ExecutionContext get_Context ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Threading.ExecutionContext a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Callback</Name>
                  <Signature>[mscorlib] System.Threading.WaitCallback</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Threading.WaitCallback</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>State</Name>
                  <Signature>object</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>object</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Context</Name>
                  <Signature>[mscorlib] System.Threading.ExecutionContext</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Threading.ExecutionContext</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Threading.WorkItemStatus</Name>
              <NewName>TestAutomationFX.Controls.Threading.WorkItemStatus</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Completed</Name>
                  <Signature>TestAutomationFX.Controls.Threading.WorkItemStatus</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Completed</Name>
                  <Signature>TestAutomationFX.Controls.Threading.WorkItemStatus</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Queued</Name>
                  <Signature>TestAutomationFX.Controls.Threading.WorkItemStatus</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Queued</Name>
                  <Signature>TestAutomationFX.Controls.Threading.WorkItemStatus</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Executing</Name>
                  <Signature>TestAutomationFX.Controls.Threading.WorkItemStatus</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Executing</Name>
                  <Signature>TestAutomationFX.Controls.Threading.WorkItemStatus</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Aborted</Name>
                  <Signature>TestAutomationFX.Controls.Threading.WorkItemStatus</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Aborted</Name>
                  <Signature>TestAutomationFX.Controls.Threading.WorkItemStatus</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.TimeCounter</Name>
              <NewName>TestAutomationFX.Controls.TimeCounter</NewName>
              <Field>
                <Original>
                  <Name>_start</Name>
                  <Signature>int64</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int64</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>Start</Name>
                  <Signature>static void Start ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Start</Name>
                  <Signature>static void Start ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetStartValue</Name>
                  <Signature>static int64 GetStartValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetStartValue</Name>
                  <Signature>static int64 GetStartValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Finish</Name>
                  <Signature>static float64 Finish ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Finish</Name>
                  <Signature>static float64 Finish ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Finish</Name>
                  <Signature>static float64 Finish (int64)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Finish</Name>
                  <Signature>static float64 Finish (int64)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>QueryPerformanceCounter</Name>
                  <Signature>static bool QueryPerformanceCounter ([out] int64&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a ([out] int64&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>QueryPerformanceFrequency</Name>
                  <Signature>static bool QueryPerformanceFrequency ([out] int64&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static bool b ([out] int64&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.IRowLayout</Name>
              <NewName>x</NewName>
              <Method>
                <Original>
                  <Name>get_PreferredRowHeight</Name>
                  <Signature>int32 get_PreferredRowHeight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_PreferredRowHeight</Name>
                  <Signature>int32 get_PreferredRowHeight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_PreferredRowHeight</Name>
                  <Signature>void set_PreferredRowHeight (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_PreferredRowHeight</Name>
                  <Signature>void set_PreferredRowHeight (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PageRowCount</Name>
                  <Signature>int32 get_PageRowCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_PageRowCount</Name>
                  <Signature>int32 get_PageRowCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CurrentPageSize</Name>
                  <Signature>int32 get_CurrentPageSize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CurrentPageSize</Name>
                  <Signature>int32 get_CurrentPageSize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRowBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle GetRowBounds (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRowBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle GetRowBounds (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRowAt</Name>
                  <Signature>int32 GetRowAt ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRowAt</Name>
                  <Signature>int32 GetRowAt ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetFirstRow</Name>
                  <Signature>int32 GetFirstRow (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetFirstRow</Name>
                  <Signature>int32 GetFirstRow (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearCache</Name>
                  <Signature>void ClearCache ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ClearCache</Name>
                  <Signature>void ClearCache ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>PreferredRowHeight</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>PreferredRowHeight</Name>
                  <Signature>int32 PreferredRowHeight</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PageRowCount</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>PageRowCount</Name>
                  <Signature>int32 PageRowCount</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CurrentPageSize</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>CurrentPageSize</Name>
                  <Signature>int32 CurrentPageSize</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.AutoRowHeightLayout</Name>
              <NewName>TestAutomationFX.Controls.Tree.AutoRowHeightLayout</NewName>
              <Field>
                <Original>
                  <Name>_measureContext</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_treeView</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_rowCache</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [System.Drawing] System.Drawing.Rectangle &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; [System.Drawing] System.Drawing.Rectangle &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_rowHeight</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PreferredRowHeight</Name>
                  <Signature>int32 get_PreferredRowHeight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_PreferredRowHeight</Name>
                  <Signature>int32 get_PreferredRowHeight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_PreferredRowHeight</Name>
                  <Signature>void set_PreferredRowHeight (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_PreferredRowHeight</Name>
                  <Signature>void set_PreferredRowHeight (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PageRowCount</Name>
                  <Signature>int32 get_PageRowCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_PageRowCount</Name>
                  <Signature>int32 get_PageRowCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CurrentPageSize</Name>
                  <Signature>int32 get_CurrentPageSize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CurrentPageSize</Name>
                  <Signature>int32 get_CurrentPageSize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRowBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle GetRowBounds (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRowBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle GetRowBounds (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRowHeight</Name>
                  <Signature>int32 GetRowHeight (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32 a (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRowAt</Name>
                  <Signature>int32 GetRowAt ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRowAt</Name>
                  <Signature>int32 GetRowAt ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetFirstRow</Name>
                  <Signature>int32 GetFirstRow (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetFirstRow</Name>
                  <Signature>int32 GetFirstRow (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearCache</Name>
                  <Signature>void ClearCache ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ClearCache</Name>
                  <Signature>void ClearCache ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>PreferredRowHeight</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>PreferredRowHeight</Name>
                  <Signature>int32 PreferredRowHeight</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PageRowCount</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>PageRowCount</Name>
                  <Signature>int32 PageRowCount</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CurrentPageSize</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>CurrentPageSize</Name>
                  <Signature>int32 CurrentPageSize</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.DrawContext</Name>
              <NewName>TestAutomationFX.Controls.Tree.DrawContext</NewName>
              <Field>
                <Original>
                  <Name>_graphics</Name>
                  <Signature>[System.Drawing] System.Drawing.Graphics</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Graphics</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Font</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_drawSelection</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawSelectionMode</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawSelectionMode</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_drawFocus</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_currentEditorOwner</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_enabled</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Graphics</Name>
                  <Signature>[System.Drawing] System.Drawing.Graphics get_Graphics ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Graphics</Name>
                  <Signature>[System.Drawing] System.Drawing.Graphics get_Graphics ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Graphics</Name>
                  <Signature>void set_Graphics ([System.Drawing] System.Drawing.Graphics)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Graphics</Name>
                  <Signature>void set_Graphics ([System.Drawing] System.Drawing.Graphics)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Bounds</Name>
                  <Signature>void set_Bounds ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Bounds</Name>
                  <Signature>void set_Bounds ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font get_Font ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font get_Font ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Font</Name>
                  <Signature>void set_Font ([System.Drawing] System.Drawing.Font)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Font</Name>
                  <Signature>void set_Font ([System.Drawing] System.Drawing.Font)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DrawSelection</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawSelectionMode get_DrawSelection ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DrawSelection</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawSelectionMode get_DrawSelection ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_DrawSelection</Name>
                  <Signature>void set_DrawSelection (TestAutomationFX.Controls.Tree.DrawSelectionMode)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_DrawSelection</Name>
                  <Signature>void set_DrawSelection (TestAutomationFX.Controls.Tree.DrawSelectionMode)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DrawFocus</Name>
                  <Signature>bool get_DrawFocus ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DrawFocus</Name>
                  <Signature>bool get_DrawFocus ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_DrawFocus</Name>
                  <Signature>void set_DrawFocus (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_DrawFocus</Name>
                  <Signature>void set_DrawFocus (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CurrentEditorOwner</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl get_CurrentEditorOwner ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CurrentEditorOwner</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl get_CurrentEditorOwner ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CurrentEditorOwner</Name>
                  <Signature>void set_CurrentEditorOwner (TestAutomationFX.Controls.Tree.NodeControls.NodeControl)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CurrentEditorOwner</Name>
                  <Signature>void set_CurrentEditorOwner (TestAutomationFX.Controls.Tree.NodeControls.NodeControl)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Enabled</Name>
                  <Signature>bool get_Enabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Enabled</Name>
                  <Signature>bool get_Enabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Enabled</Name>
                  <Signature>void set_Enabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Enabled</Name>
                  <Signature>void set_Enabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Graphics</Name>
                  <Signature>[System.Drawing] System.Drawing.Graphics</Signature>
                </Original>
                <Obfuscated>
                  <Name>Graphics</Name>
                  <Signature>[System.Drawing] System.Drawing.Graphics Graphics</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle Bounds</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font</Signature>
                </Original>
                <Obfuscated>
                  <Name>Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font Font</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DrawSelection</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawSelectionMode</Signature>
                </Original>
                <Obfuscated>
                  <Name>DrawSelection</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawSelectionMode DrawSelection</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DrawFocus</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>DrawFocus</Name>
                  <Signature>bool DrawFocus</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CurrentEditorOwner</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                </Original>
                <Obfuscated>
                  <Name>CurrentEditorOwner</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl CurrentEditorOwner</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Enabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Enabled</Name>
                  <Signature>bool Enabled</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.DropPosition</Name>
              <NewName>TestAutomationFX.Controls.Tree.DropPosition</NewName>
              <Field>
                <Original>
                  <Name>_node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_position</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodePosition</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodePosition</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_Node ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_Node ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Node</Name>
                  <Signature>void set_Node (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Node</Name>
                  <Signature>void set_Node (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Position</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodePosition get_Position ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Position</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodePosition get_Position ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Position</Name>
                  <Signature>void set_Position (TestAutomationFX.Controls.Tree.NodePosition)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Position</Name>
                  <Signature>void set_Position (TestAutomationFX.Controls.Tree.NodePosition)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Original>
                <Obfuscated>
                  <Name>Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv Node</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Position</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodePosition</Signature>
                </Original>
                <Obfuscated>
                  <Name>Position</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodePosition Position</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.EditorContext</Name>
              <NewName>TestAutomationFX.Controls.Tree.EditorContext</NewName>
              <Field>
                <Original>
                  <Name>_currentNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_editor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_owner</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_drawContext</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_CurrentNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_CurrentNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CurrentNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_CurrentNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CurrentNode</Name>
                  <Signature>void set_CurrentNode (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CurrentNode</Name>
                  <Signature>void set_CurrentNode (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Editor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control get_Editor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Editor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control get_Editor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Editor</Name>
                  <Signature>void set_Editor ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Editor</Name>
                  <Signature>void set_Editor ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Owner</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl get_Owner ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Owner</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl get_Owner ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Owner</Name>
                  <Signature>void set_Owner (TestAutomationFX.Controls.Tree.NodeControls.NodeControl)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Owner</Name>
                  <Signature>void set_Owner (TestAutomationFX.Controls.Tree.NodeControls.NodeControl)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Bounds</Name>
                  <Signature>void set_Bounds ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Bounds</Name>
                  <Signature>void set_Bounds ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DrawContext</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext get_DrawContext ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DrawContext</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext get_DrawContext ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_DrawContext</Name>
                  <Signature>void set_DrawContext (TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_DrawContext</Name>
                  <Signature>void set_DrawContext (TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>CurrentNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Original>
                <Obfuscated>
                  <Name>CurrentNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv CurrentNode</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Editor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control</Signature>
                </Original>
                <Obfuscated>
                  <Name>Editor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control Editor</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Owner</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                </Original>
                <Obfuscated>
                  <Name>Owner</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl Owner</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle Bounds</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DrawContext</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext</Signature>
                </Original>
                <Obfuscated>
                  <Name>DrawContext</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext DrawContext</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.DrawSelectionMode</Name>
              <NewName>TestAutomationFX.Controls.Tree.DrawSelectionMode</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>None</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawSelectionMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>None</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawSelectionMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Active</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawSelectionMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Active</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawSelectionMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Inactive</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawSelectionMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Inactive</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawSelectionMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>FullRowSelect</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawSelectionMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FullRowSelect</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawSelectionMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.TreeSelectionMode</Name>
              <NewName>TestAutomationFX.Controls.Tree.TreeSelectionMode</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Single</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeSelectionMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Single</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeSelectionMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Multi</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeSelectionMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Multi</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeSelectionMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MultiSameParent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeSelectionMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MultiSameParent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeSelectionMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodePosition</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodePosition</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Inside</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodePosition</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Inside</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodePosition</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Before</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodePosition</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Before</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodePosition</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>After</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodePosition</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>After</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodePosition</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.VerticalAlignment</Name>
              <NewName>TestAutomationFX.Controls.Tree.VerticalAlignment</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Top</Name>
                  <Signature>TestAutomationFX.Controls.Tree.VerticalAlignment</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Top</Name>
                  <Signature>TestAutomationFX.Controls.Tree.VerticalAlignment</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Bottom</Name>
                  <Signature>TestAutomationFX.Controls.Tree.VerticalAlignment</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Bottom</Name>
                  <Signature>TestAutomationFX.Controls.Tree.VerticalAlignment</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Center</Name>
                  <Signature>TestAutomationFX.Controls.Tree.VerticalAlignment</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Center</Name>
                  <Signature>TestAutomationFX.Controls.Tree.VerticalAlignment</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.IncrementalSearchMode</Name>
              <NewName>TestAutomationFX.Controls.Tree.IncrementalSearchMode</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>None</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IncrementalSearchMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>None</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IncrementalSearchMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Standard</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IncrementalSearchMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Standard</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IncrementalSearchMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Continuous</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IncrementalSearchMode</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Continuous</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IncrementalSearchMode</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.GridLineStyle</Name>
              <NewName>TestAutomationFX.Controls.Tree.GridLineStyle</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>None</Name>
                  <Signature>TestAutomationFX.Controls.Tree.GridLineStyle</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>None</Name>
                  <Signature>TestAutomationFX.Controls.Tree.GridLineStyle</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Horizontal</Name>
                  <Signature>TestAutomationFX.Controls.Tree.GridLineStyle</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Horizontal</Name>
                  <Signature>TestAutomationFX.Controls.Tree.GridLineStyle</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Vertical</Name>
                  <Signature>TestAutomationFX.Controls.Tree.GridLineStyle</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Vertical</Name>
                  <Signature>TestAutomationFX.Controls.Tree.GridLineStyle</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>HorizontalAndVertical</Name>
                  <Signature>TestAutomationFX.Controls.Tree.GridLineStyle</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>HorizontalAndVertical</Name>
                  <Signature>TestAutomationFX.Controls.Tree.GridLineStyle</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.FixedRowHeightLayout</Name>
              <NewName>y</NewName>
              <Field>
                <Original>
                  <Name>_treeView</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_rowHeight</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PreferredRowHeight</Name>
                  <Signature>int32 get_PreferredRowHeight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_PreferredRowHeight</Name>
                  <Signature>int32 get_PreferredRowHeight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_PreferredRowHeight</Name>
                  <Signature>void set_PreferredRowHeight (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_PreferredRowHeight</Name>
                  <Signature>void set_PreferredRowHeight (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRowBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle GetRowBounds (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRowBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle GetRowBounds (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PageRowCount</Name>
                  <Signature>int32 get_PageRowCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_PageRowCount</Name>
                  <Signature>int32 get_PageRowCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CurrentPageSize</Name>
                  <Signature>int32 get_CurrentPageSize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CurrentPageSize</Name>
                  <Signature>int32 get_CurrentPageSize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRowAt</Name>
                  <Signature>int32 GetRowAt ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRowAt</Name>
                  <Signature>int32 GetRowAt ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetFirstRow</Name>
                  <Signature>int32 GetFirstRow (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetFirstRow</Name>
                  <Signature>int32 GetFirstRow (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearCache</Name>
                  <Signature>void ClearCache ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ClearCache</Name>
                  <Signature>void ClearCache ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>PreferredRowHeight</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>PreferredRowHeight</Name>
                  <Signature>int32 PreferredRowHeight</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PageRowCount</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>PageRowCount</Name>
                  <Signature>int32 PageRowCount</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CurrentPageSize</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>CurrentPageSize</Name>
                  <Signature>int32 CurrentPageSize</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.IncrementalSearch</Name>
              <NewName>z</NewName>
              <Field>
                <Original>
                  <Name>SearchTimeout</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_tree</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_currentNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_searchString</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_lastKeyPressed</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.DateTime</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Search</Name>
                  <Signature>void Search (char)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (char)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ContinuousSearch</Name>
                  <Signature>void ContinuousSearch (char)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (char)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FirstCharSearch</Name>
                  <Signature>void FirstCharSearch (char)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (char)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EndSearch</Name>
                  <Signature>void EndSearch ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>EndSearch</Name>
                  <Signature>void EndSearch ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IterateNodeLabels</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; string &gt; IterateNodeLabels (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; string &gt; a (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetNodeLabels</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; string &gt; GetNodeLabels (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; string &gt; b (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoContinuousSearch</Name>
                  <Signature>bool DoContinuousSearch ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <NestedType>
                <Name>&lt;IterateNodeLabels&gt;d__0</Name>
                <NewName>&lt;IterateNodeLabels&gt;d__0</NewName>
                <Field>
                  <Original>
                    <Name>&lt;&gt;2__current</Name>
                    <Signature>string</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>string</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;1__state</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;l__initialThreadId</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>b</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Controls.Tree.IncrementalSearch</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>z</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>start</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>start</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;3__start</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;3__start</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;label&gt;5__1</Name>
                    <Signature>string</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;label&gt;5__1</Name>
                    <Signature>string</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;7__wrap2</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; string &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;7__wrap2</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; string &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; string &gt; System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; string &gt; System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerable.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerable.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>MoveNext</Name>
                    <Signature>bool MoveNext ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>MoveNext</Name>
                    <Signature>bool MoveNext ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current</Name>
                    <Signature>string System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current</Name>
                    <Signature>string System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerator.Reset</Name>
                    <Signature>void System.Collections.IEnumerator.Reset ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.Reset</Name>
                    <Signature>void System.Collections.IEnumerator.Reset ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.IDisposable.Dispose</Name>
                    <Signature>void System.IDisposable.Dispose ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.IDisposable.Dispose</Name>
                    <Signature>void System.IDisposable.Dispose ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerator.get_Current</Name>
                    <Signature>object System.Collections.IEnumerator.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.get_Current</Name>
                    <Signature>object System.Collections.IEnumerator.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;&gt;m__Finally3</Name>
                    <Signature>void &lt;&gt;m__Finally3 ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>void a ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Property>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.Current</Name>
                    <Signature>string</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.Current</Name>
                    <Signature>string System.Collections.Generic.IEnumerator&lt;System.String&gt;.Current</Signature>
                  </Obfuscated>
                </Property>
                <Property>
                  <Original>
                    <Name>System.Collections.IEnumerator.Current</Name>
                    <Signature>object</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.Current</Name>
                    <Signature>object System.Collections.IEnumerator.Current</Signature>
                  </Obfuscated>
                </Property>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>&lt;GetNodeLabels&gt;d__6</Name>
                <NewName>&lt;GetNodeLabels&gt;d__6</NewName>
                <Field>
                  <Original>
                    <Name>&lt;&gt;2__current</Name>
                    <Signature>string</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>string</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;1__state</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;l__initialThreadId</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>b</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Controls.Tree.IncrementalSearch</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>z</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>node</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>node</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;3__node</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;3__node</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;nc&gt;5__7</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;nc&gt;5__7</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;bc&gt;5__8</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControls.BindableControl</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;bc&gt;5__8</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControls.BindableControl</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;obj&gt;5__9</Name>
                    <Signature>object</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;obj&gt;5__9</Name>
                    <Signature>object</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;7__wrapa</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControl &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;7__wrapa</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControl &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; string &gt; System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; string &gt; System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerable.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerable.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>MoveNext</Name>
                    <Signature>bool MoveNext ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>MoveNext</Name>
                    <Signature>bool MoveNext ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current</Name>
                    <Signature>string System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current</Name>
                    <Signature>string System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerator.Reset</Name>
                    <Signature>void System.Collections.IEnumerator.Reset ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.Reset</Name>
                    <Signature>void System.Collections.IEnumerator.Reset ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.IDisposable.Dispose</Name>
                    <Signature>void System.IDisposable.Dispose ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.IDisposable.Dispose</Name>
                    <Signature>void System.IDisposable.Dispose ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerator.get_Current</Name>
                    <Signature>object System.Collections.IEnumerator.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.get_Current</Name>
                    <Signature>object System.Collections.IEnumerator.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;&gt;m__Finallyb</Name>
                    <Signature>void &lt;&gt;m__Finallyb ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>void a ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Property>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.Current</Name>
                    <Signature>string</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.Current</Name>
                    <Signature>string System.Collections.Generic.IEnumerator&lt;System.String&gt;.Current</Signature>
                  </Obfuscated>
                </Property>
                <Property>
                  <Original>
                    <Name>System.Collections.IEnumerator.Current</Name>
                    <Signature>object</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.Current</Name>
                    <Signature>object System.Collections.IEnumerator.Current</Signature>
                  </Obfuscated>
                </Property>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.InputState</Name>
              <NewName>A</NewName>
              <Field>
                <Original>
                  <Name>_tree</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Tree</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx get_Tree ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseMove</Name>
                  <Signature>bool MouseMove ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseMove</Name>
                  <Signature>bool MouseMove ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Tree</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.ColumnState</Name>
              <NewName>B</NewName>
              <Field>
                <Original>
                  <Name>_column</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Column</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn get_Column ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx, TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx, TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Column</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.ClickColumnState</Name>
              <NewName>C</NewName>
              <Field>
                <Original>
                  <Name>_location</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx, TestAutomationFX.Controls.Tree.TreeColumn, [System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx, TestAutomationFX.Controls.Tree.TreeColumn, [System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseMove</Name>
                  <Signature>bool MouseMove ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseMove</Name>
                  <Signature>bool MouseMove ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NormalInputState</Name>
              <NewName>D</NewName>
              <Field>
                <Original>
                  <Name>_mouseDownFlag</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>NavigateBackward</Name>
                  <Signature>void NavigateBackward (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>NavigateForward</Name>
                  <Signature>void NavigateForward (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDownAtEmptySpace</Name>
                  <Signature>void MouseDownAtEmptySpace (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDownAtEmptySpace</Name>
                  <Signature>void MouseDownAtEmptySpace (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FocusRow</Name>
                  <Signature>void FocusRow (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FocusRow</Name>
                  <Signature>void FocusRow (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CanSelect</Name>
                  <Signature>bool CanSelect (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoMouseOperation</Name>
                  <Signature>void DoMouseOperation (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoMouseOperation</Name>
                  <Signature>void DoMouseOperation (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.InputWithControl</Name>
              <NewName>E</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoMouseOperation</Name>
                  <Signature>void DoMouseOperation (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoMouseOperation</Name>
                  <Signature>void DoMouseOperation (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDownAtEmptySpace</Name>
                  <Signature>void MouseDownAtEmptySpace (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDownAtEmptySpace</Name>
                  <Signature>void MouseDownAtEmptySpace (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.InputWithShift</Name>
              <NewName>F</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FocusRow</Name>
                  <Signature>void FocusRow (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FocusRow</Name>
                  <Signature>void FocusRow (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoMouseOperation</Name>
                  <Signature>void DoMouseOperation (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoMouseOperation</Name>
                  <Signature>void DoMouseOperation (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDownAtEmptySpace</Name>
                  <Signature>void MouseDownAtEmptySpace (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDownAtEmptySpace</Name>
                  <Signature>void MouseDownAtEmptySpace (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SelectAllFromStart</Name>
                  <Signature>void SelectAllFromStart (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.ReorderColumnState</Name>
              <NewName>G</NewName>
              <Field>
                <Original>
                  <Name>_location</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_ghostImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_dropColumn</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_dragOffset</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Location</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_Location ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Point a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_GhostImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap get_GhostImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DropColumn</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn get_DropColumn ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DragOffset</Name>
                  <Signature>int32 get_DragOffset ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32 a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx, TestAutomationFX.Controls.Tree.TreeColumn, [System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx, TestAutomationFX.Controls.Tree.TreeColumn, [System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseMove</Name>
                  <Signature>bool MouseMove ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseMove</Name>
                  <Signature>bool MouseMove ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FinishResize</Name>
                  <Signature>void FinishResize ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Location</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>GhostImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DropColumn</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DragOffset</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.ResizeColumnState</Name>
              <NewName>H</NewName>
              <Field>
                <Original>
                  <Name>_initLocation</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_initWidth</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx, TestAutomationFX.Controls.Tree.TreeColumn, [System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx, TestAutomationFX.Controls.Tree.TreeColumn, [System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FinishResize</Name>
                  <Signature>void FinishResize ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseMove</Name>
                  <Signature>bool MouseMove ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseMove</Name>
                  <Signature>bool MouseMove ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.IToolTipProvider</Name>
              <NewName>TestAutomationFX.Controls.Tree.IToolTipProvider</NewName>
              <Method>
                <Original>
                  <Name>GetToolTip</Name>
                  <Signature>string GetToolTip (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.NodeControls.NodeControl)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetToolTip</Name>
                  <Signature>string GetToolTip (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.NodeControls.NodeControl)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.ITreeModel</Name>
              <NewName>TestAutomationFX.Controls.Tree.ITreeModel</NewName>
              <Method>
                <Original>
                  <Name>GetChildren</Name>
                  <Signature>[mscorlib] System.Collections.IEnumerable GetChildren (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetChildren</Name>
                  <Signature>[mscorlib] System.Collections.IEnumerable GetChildren (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsLeaf</Name>
                  <Signature>bool IsLeaf (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsLeaf</Name>
                  <Signature>bool IsLeaf (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_NodesChanged</Name>
                  <Signature>void add_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_NodesChanged</Name>
                  <Signature>void add_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_NodesChanged</Name>
                  <Signature>void remove_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_NodesChanged</Name>
                  <Signature>void remove_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_NodesInserted</Name>
                  <Signature>void add_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_NodesInserted</Name>
                  <Signature>void add_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_NodesInserted</Name>
                  <Signature>void remove_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_NodesInserted</Name>
                  <Signature>void remove_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_NodesRemoved</Name>
                  <Signature>void add_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_NodesRemoved</Name>
                  <Signature>void add_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_NodesRemoved</Name>
                  <Signature>void remove_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_NodesRemoved</Name>
                  <Signature>void remove_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_StructureChanged</Name>
                  <Signature>void add_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_StructureChanged</Name>
                  <Signature>void add_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_StructureChanged</Name>
                  <Signature>void remove_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_StructureChanged</Name>
                  <Signature>void remove_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Event>
                <Original>
                  <Name>NodesChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>NodesChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>NodesInserted</Name>
                </Original>
                <Obfuscated>
                  <Name>NodesInserted</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>NodesRemoved</Name>
                </Original>
                <Obfuscated>
                  <Name>NodesRemoved</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>StructureChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>StructureChanged</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.Node</Name>
              <NewName>TestAutomationFX.Controls.Tree.Node</NewName>
              <Field>
                <Original>
                  <Name>_model</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeModel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeModel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_nodes</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node/NodeCollection</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node/a</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_parent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_index</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_text</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_checkState</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckState</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckState</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_tag</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Model</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeModel get_Model ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeModel a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Model</Name>
                  <Signature>void set_Model (TestAutomationFX.Controls.Tree.TreeModel)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.TreeModel)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Nodes</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.Node &gt; get_Nodes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Nodes</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.Node &gt; get_Nodes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Parent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node get_Parent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Parent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node get_Parent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Parent</Name>
                  <Signature>void set_Parent (TestAutomationFX.Controls.Tree.Node)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Parent</Name>
                  <Signature>void set_Parent (TestAutomationFX.Controls.Tree.Node)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PreviousNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node get_PreviousNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_PreviousNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node get_PreviousNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_NextNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node get_NextNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_NextNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node get_NextNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Text</Name>
                  <Signature>void set_Text (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Text</Name>
                  <Signature>void set_Text (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CheckState</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckState get_CheckState ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CheckState</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckState get_CheckState ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CheckState</Name>
                  <Signature>void set_CheckState ([System.Windows.Forms] System.Windows.Forms.CheckState)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CheckState</Name>
                  <Signature>void set_CheckState ([System.Windows.Forms] System.Windows.Forms.CheckState)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image get_Image ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image get_Image ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Image</Name>
                  <Signature>void set_Image ([System.Drawing] System.Drawing.Image)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Image</Name>
                  <Signature>void set_Image ([System.Drawing] System.Drawing.Image)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Tag</Name>
                  <Signature>object get_Tag ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Tag</Name>
                  <Signature>object get_Tag ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Tag</Name>
                  <Signature>void set_Tag (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Tag</Name>
                  <Signature>void set_Tag (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsChecked</Name>
                  <Signature>bool get_IsChecked ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsChecked</Name>
                  <Signature>bool get_IsChecked ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsChecked</Name>
                  <Signature>void set_IsChecked (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsChecked</Name>
                  <Signature>void set_IsChecked (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsLeaf</Name>
                  <Signature>bool get_IsLeaf ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsLeaf</Name>
                  <Signature>bool get_IsLeaf ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindModel</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeModel FindModel ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeModel b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>NotifyModel</Name>
                  <Signature>void NotifyModel ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>NotifyModel</Name>
                  <Signature>void NotifyModel ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Model</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeModel</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeModel</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Nodes</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.Node &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>Nodes</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.Node &gt; Nodes</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Parent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                </Original>
                <Obfuscated>
                  <Name>Parent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node Parent</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Index</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Index</Name>
                  <Signature>int32 Index</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PreviousNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                </Original>
                <Obfuscated>
                  <Name>PreviousNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node PreviousNode</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>NextNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                </Original>
                <Obfuscated>
                  <Name>NextNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node NextNode</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Text</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Text</Name>
                  <Signature>string Text</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CheckState</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckState</Signature>
                </Original>
                <Obfuscated>
                  <Name>CheckState</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckState CheckState</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                </Original>
                <Obfuscated>
                  <Name>Image</Name>
                  <Signature>[System.Drawing] System.Drawing.Image Image</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Tag</Name>
                  <Signature>object</Signature>
                </Original>
                <Obfuscated>
                  <Name>Tag</Name>
                  <Signature>object Tag</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsChecked</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsChecked</Name>
                  <Signature>bool IsChecked</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsLeaf</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsLeaf</Name>
                  <Signature>bool IsLeaf</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>NodeCollection</Name>
                <NewName>a</NewName>
                <Field>
                  <Original>
                    <Name>_owner</Name>
                    <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (TestAutomationFX.Controls.Tree.Node)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (TestAutomationFX.Controls.Tree.Node)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>ClearItems</Name>
                    <Signature>void ClearItems ()</Signature>
                    <Accessibility>family</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>ClearItems</Name>
                    <Signature>void ClearItems ()</Signature>
                    <Accessibility>family</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>InsertItem</Name>
                    <Signature>void InsertItem (int32, TestAutomationFX.Controls.Tree.Node)</Signature>
                    <Accessibility>family</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>InsertItem</Name>
                    <Signature>void InsertItem (int32, TestAutomationFX.Controls.Tree.Node)</Signature>
                    <Accessibility>family</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>RemoveItem</Name>
                    <Signature>void RemoveItem (int32)</Signature>
                    <Accessibility>family</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>RemoveItem</Name>
                    <Signature>void RemoveItem (int32)</Signature>
                    <Accessibility>family</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>SetItem</Name>
                    <Signature>void SetItem (int32, TestAutomationFX.Controls.Tree.Node)</Signature>
                    <Accessibility>family</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>SetItem</Name>
                    <Signature>void SetItem (int32, TestAutomationFX.Controls.Tree.Node)</Signature>
                    <Accessibility>family</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControlInfo</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControlInfo</NewName>
              <Field>
                <Original>
                  <Name>Empty</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Empty</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_control</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Control</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl get_Control ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Control</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl get_Control ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_Node ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_Node ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.NodeControls.NodeControl, [System.Drawing] System.Drawing.Rectangle, TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.NodeControls.NodeControl, [System.Drawing] System.Drawing.Rectangle, TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Control</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                </Original>
                <Obfuscated>
                  <Name>Control</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl Control</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle Bounds</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Original>
                <Obfuscated>
                  <Name>Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv Node</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</NewName>
              <Field>
                <Original>
                  <Name>_parent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_toolTipProvider</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IToolTipProvider</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IToolTipProvider</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_parentColumn</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_verticalAlign</Name>
                  <Signature>TestAutomationFX.Controls.Tree.VerticalAlignment</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.VerticalAlignment</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_leftMargin</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>IsVisibleValueNeeded</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Parent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx get_Parent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Parent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx get_Parent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Parent</Name>
                  <Signature>void set_Parent (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Parent</Name>
                  <Signature>void set_Parent (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ToolTipProvider</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IToolTipProvider get_ToolTipProvider ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ToolTipProvider</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IToolTipProvider get_ToolTipProvider ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ToolTipProvider</Name>
                  <Signature>void set_ToolTipProvider (TestAutomationFX.Controls.Tree.IToolTipProvider)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ToolTipProvider</Name>
                  <Signature>void set_ToolTipProvider (TestAutomationFX.Controls.Tree.IToolTipProvider)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ParentColumn</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn get_ParentColumn ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ParentColumn</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn get_ParentColumn ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ParentColumn</Name>
                  <Signature>void set_ParentColumn (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ParentColumn</Name>
                  <Signature>void set_ParentColumn (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_VerticalAlign</Name>
                  <Signature>TestAutomationFX.Controls.Tree.VerticalAlignment get_VerticalAlign ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_VerticalAlign</Name>
                  <Signature>TestAutomationFX.Controls.Tree.VerticalAlignment get_VerticalAlign ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_VerticalAlign</Name>
                  <Signature>void set_VerticalAlign (TestAutomationFX.Controls.Tree.VerticalAlignment)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_VerticalAlign</Name>
                  <Signature>void set_VerticalAlign (TestAutomationFX.Controls.Tree.VerticalAlignment)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LeftMargin</Name>
                  <Signature>int32 get_LeftMargin ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LeftMargin</Name>
                  <Signature>int32 get_LeftMargin ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LeftMargin</Name>
                  <Signature>void set_LeftMargin (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_LeftMargin</Name>
                  <Signature>void set_LeftMargin (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AssignParent</Name>
                  <Signature>void AssignParent (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AssignParent</Name>
                  <Signature>void AssignParent (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle GetBounds (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle GetBounds (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CheckThread</Name>
                  <Signature>void CheckThread ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CheckThread</Name>
                  <Signature>void CheckThread ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsVisible</Name>
                  <Signature>bool IsVisible (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsVisible</Name>
                  <Signature>bool IsVisible (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetActualSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size GetActualSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Size a (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MeasureSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size MeasureSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MeasureSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size MeasureSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Draw</Name>
                  <Signature>void Draw (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Draw</Name>
                  <Signature>void Draw (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetToolTip</Name>
                  <Signature>string GetToolTip (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetToolTip</Name>
                  <Signature>string GetToolTip (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDoubleClick</Name>
                  <Signature>void MouseDoubleClick (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDoubleClick</Name>
                  <Signature>void MouseDoubleClick (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyUp</Name>
                  <Signature>void KeyUp ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyUp</Name>
                  <Signature>void KeyUp ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_IsVisibleValueNeeded</Name>
                  <Signature>void add_IsVisibleValueNeeded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_IsVisibleValueNeeded</Name>
                  <Signature>void add_IsVisibleValueNeeded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_IsVisibleValueNeeded</Name>
                  <Signature>void remove_IsVisibleValueNeeded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_IsVisibleValueNeeded</Name>
                  <Signature>void remove_IsVisibleValueNeeded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnIsVisibleValueNeeded</Name>
                  <Signature>void OnIsVisibleValueNeeded (TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnIsVisibleValueNeeded</Name>
                  <Signature>void OnIsVisibleValueNeeded (TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Parent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                </Original>
                <Obfuscated>
                  <Name>Parent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx Parent</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ToolTipProvider</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IToolTipProvider</Signature>
                </Original>
                <Obfuscated>
                  <Name>ToolTipProvider</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IToolTipProvider ToolTipProvider</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ParentColumn</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                </Original>
                <Obfuscated>
                  <Name>ParentColumn</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn ParentColumn</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>VerticalAlign</Name>
                  <Signature>TestAutomationFX.Controls.Tree.VerticalAlignment</Signature>
                </Original>
                <Obfuscated>
                  <Name>VerticalAlign</Name>
                  <Signature>TestAutomationFX.Controls.Tree.VerticalAlignment VerticalAlign</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LeftMargin</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>LeftMargin</Name>
                  <Signature>int32 LeftMargin</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>IsVisibleValueNeeded</Name>
                </Original>
                <Obfuscated>
                  <Name>IsVisibleValueNeeded</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.BindableControl</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.BindableControl</NewName>
              <Field>
                <Original>
                  <Name>_virtualMode</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_propertyName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_incrementalSearchEnabled</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ValueNeeded</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ValuePushed</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_VirtualMode</Name>
                  <Signature>bool get_VirtualMode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_VirtualMode</Name>
                  <Signature>bool get_VirtualMode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_VirtualMode</Name>
                  <Signature>void set_VirtualMode (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_VirtualMode</Name>
                  <Signature>void set_VirtualMode (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DataPropertyName</Name>
                  <Signature>string get_DataPropertyName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DataPropertyName</Name>
                  <Signature>string get_DataPropertyName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_DataPropertyName</Name>
                  <Signature>void set_DataPropertyName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_DataPropertyName</Name>
                  <Signature>void set_DataPropertyName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IncrementalSearchEnabled</Name>
                  <Signature>bool get_IncrementalSearchEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IncrementalSearchEnabled</Name>
                  <Signature>bool get_IncrementalSearchEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IncrementalSearchEnabled</Name>
                  <Signature>void set_IncrementalSearchEnabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IncrementalSearchEnabled</Name>
                  <Signature>void set_IncrementalSearchEnabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetValue</Name>
                  <Signature>object GetValue (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetValue</Name>
                  <Signature>object GetValue (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetValue</Name>
                  <Signature>void SetValue (TestAutomationFX.Controls.Tree.TreeNodeAdv, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetValue</Name>
                  <Signature>void SetValue (TestAutomationFX.Controls.Tree.TreeNodeAdv, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPropertyType</Name>
                  <Signature>[mscorlib] System.Type GetPropertyType (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetPropertyType</Name>
                  <Signature>[mscorlib] System.Type GetPropertyType (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMemberAdapter</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.BindableControl/MemberAdapter GetMemberAdapter (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.BindableControl/a a (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_ValueNeeded</Name>
                  <Signature>void add_ValueNeeded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_ValueNeeded</Name>
                  <Signature>void add_ValueNeeded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_ValueNeeded</Name>
                  <Signature>void remove_ValueNeeded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_ValueNeeded</Name>
                  <Signature>void remove_ValueNeeded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnValueNeeded</Name>
                  <Signature>void OnValueNeeded (TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_ValuePushed</Name>
                  <Signature>void add_ValuePushed ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_ValuePushed</Name>
                  <Signature>void add_ValuePushed ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_ValuePushed</Name>
                  <Signature>void remove_ValuePushed ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_ValuePushed</Name>
                  <Signature>void remove_ValuePushed ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnValuePushed</Name>
                  <Signature>void OnValuePushed (TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>VirtualMode</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>VirtualMode</Name>
                  <Signature>bool VirtualMode</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DataPropertyName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>DataPropertyName</Name>
                  <Signature>string DataPropertyName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IncrementalSearchEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IncrementalSearchEnabled</Name>
                  <Signature>bool IncrementalSearchEnabled</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>ValueNeeded</Name>
                </Original>
                <Obfuscated>
                  <Name>ValueNeeded</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>ValuePushed</Name>
                </Original>
                <Obfuscated>
                  <Name>ValuePushed</Name>
                </Obfuscated>
              </Event>
              <NestedType>
                <Name>MemberAdapter</Name>
                <NewName>a</NewName>
                <Field>
                  <Original>
                    <Name>_obj</Name>
                    <Signature>object</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>object</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>_pi</Name>
                    <Signature>[mscorlib] System.Reflection.PropertyInfo</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>[mscorlib] System.Reflection.PropertyInfo</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>_fi</Name>
                    <Signature>[mscorlib] System.Reflection.FieldInfo</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>[mscorlib] System.Reflection.FieldInfo</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Empty</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControls.BindableControl/MemberAdapter</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControls.BindableControl/a</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>get_MemberType</Name>
                    <Signature>[mscorlib] System.Type get_MemberType ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>[mscorlib] System.Type a ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>get_Value</Name>
                    <Signature>object get_Value ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>object a ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>set_Value</Name>
                    <Signature>void set_Value (object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>void a (object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, [mscorlib] System.Reflection.PropertyInfo)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, [mscorlib] System.Reflection.PropertyInfo)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, [mscorlib] System.Reflection.FieldInfo)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, [mscorlib] System.Reflection.FieldInfo)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>.cctor</Name>
                    <Signature>static void .cctor ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.cctor</Name>
                    <Signature>static void .cctor ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Property>
                  <Original>
                    <Name>MemberType</Name>
                    <Signature>[mscorlib] System.Type</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>_Deleted</Name>
                    <Signature>[mscorlib] System.Type</Signature>
                  </Obfuscated>
                </Property>
                <Property>
                  <Original>
                    <Name>Value</Name>
                    <Signature>object</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>_Deleted</Name>
                    <Signature>object</Signature>
                  </Obfuscated>
                </Property>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.InteractiveControl</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.InteractiveControl</NewName>
              <Field>
                <Original>
                  <Name>_editEnabled</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>IsEditEnabledValueNeeded</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_EditEnabled</Name>
                  <Signature>bool get_EditEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_EditEnabled</Name>
                  <Signature>bool get_EditEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_EditEnabled</Name>
                  <Signature>void set_EditEnabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_EditEnabled</Name>
                  <Signature>void set_EditEnabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsEditEnabled</Name>
                  <Signature>bool IsEditEnabled (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsEditEnabled</Name>
                  <Signature>bool IsEditEnabled (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_IsEditEnabledValueNeeded</Name>
                  <Signature>void add_IsEditEnabledValueNeeded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_IsEditEnabledValueNeeded</Name>
                  <Signature>void add_IsEditEnabledValueNeeded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_IsEditEnabledValueNeeded</Name>
                  <Signature>void remove_IsEditEnabledValueNeeded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_IsEditEnabledValueNeeded</Name>
                  <Signature>void remove_IsEditEnabledValueNeeded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnIsEditEnabledValueNeeded</Name>
                  <Signature>void OnIsEditEnabledValueNeeded (TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>EditEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>EditEnabled</Name>
                  <Signature>bool EditEnabled</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>IsEditEnabledValueNeeded</Name>
                </Original>
                <Obfuscated>
                  <Name>IsEditEnabledValueNeeded</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.EditableControl</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.EditableControl</NewName>
              <Field>
                <Original>
                  <Name>_timer</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_editFlag</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_editNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_editor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_editOnClick</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>EditorShowing</Name>
                  <Signature>[System] System.ComponentModel.CancelEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.CancelEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>EditorHided</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_EditNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_EditNode ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_EditNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_EditNode ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CurrentEditor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control get_CurrentEditor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CurrentEditor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control get_CurrentEditor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_EditOnClick</Name>
                  <Signature>bool get_EditOnClick ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_EditOnClick</Name>
                  <Signature>bool get_EditOnClick ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_EditOnClick</Name>
                  <Signature>void set_EditOnClick (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_EditOnClick</Name>
                  <Signature>void set_EditOnClick (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TimerTick</Name>
                  <Signature>void TimerTick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetEditorBounds</Name>
                  <Signature>void SetEditorBounds (TestAutomationFX.Controls.Tree.EditorContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetEditorBounds</Name>
                  <Signature>void SetEditorBounds (TestAutomationFX.Controls.Tree.EditorContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CalculateEditorSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size CalculateEditorSize (TestAutomationFX.Controls.Tree.EditorContext)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CalculateEditorSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size CalculateEditorSize (TestAutomationFX.Controls.Tree.EditorContext)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CanEdit</Name>
                  <Signature>bool CanEdit (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CanEdit</Name>
                  <Signature>bool CanEdit (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BeginEditByUser</Name>
                  <Signature>void BeginEditByUser ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>BeginEditByUser</Name>
                  <Signature>void BeginEditByUser ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BeginEdit</Name>
                  <Signature>void BeginEdit ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>BeginEdit</Name>
                  <Signature>void BeginEdit ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EditorKeyDown</Name>
                  <Signature>void EditorKeyDown (object, [System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EditorValidating</Name>
                  <Signature>void EditorValidating (object, [System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HideEditor</Name>
                  <Signature>void HideEditor ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EndEdit</Name>
                  <Signature>void EndEdit (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>EndEdit</Name>
                  <Signature>void EndEdit (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateEditor</Name>
                  <Signature>void UpdateEditor ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>UpdateEditor</Name>
                  <Signature>void UpdateEditor ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ApplyChanges</Name>
                  <Signature>void ApplyChanges ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ApplyChanges</Name>
                  <Signature>void ApplyChanges ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoApplyChanges</Name>
                  <Signature>void DoApplyChanges (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoApplyChanges</Name>
                  <Signature>void DoApplyChanges (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateEditor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control CreateEditor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateEditor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control CreateEditor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDoubleClick</Name>
                  <Signature>void MouseDoubleClick (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDoubleClick</Name>
                  <Signature>void MouseDoubleClick (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_EditorShowing</Name>
                  <Signature>void add_EditorShowing ([System] System.ComponentModel.CancelEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_EditorShowing</Name>
                  <Signature>void add_EditorShowing ([System] System.ComponentModel.CancelEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_EditorShowing</Name>
                  <Signature>void remove_EditorShowing ([System] System.ComponentModel.CancelEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_EditorShowing</Name>
                  <Signature>void remove_EditorShowing ([System] System.ComponentModel.CancelEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnEditorShowing</Name>
                  <Signature>void OnEditorShowing ([System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnEditorShowing</Name>
                  <Signature>void OnEditorShowing ([System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_EditorHided</Name>
                  <Signature>void add_EditorHided ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_EditorHided</Name>
                  <Signature>void add_EditorHided ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_EditorHided</Name>
                  <Signature>void remove_EditorHided ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_EditorHided</Name>
                  <Signature>void remove_EditorHided ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnEditorHided</Name>
                  <Signature>void OnEditorHided ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnEditorHided</Name>
                  <Signature>void OnEditorHided ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>EditNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Original>
                <Obfuscated>
                  <Name>EditNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv EditNode</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CurrentEditor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control</Signature>
                </Original>
                <Obfuscated>
                  <Name>CurrentEditor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control CurrentEditor</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>EditOnClick</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>EditOnClick</Name>
                  <Signature>bool EditOnClick</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>EditorShowing</Name>
                </Original>
                <Obfuscated>
                  <Name>EditorShowing</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>EditorHided</Name>
                </Original>
                <Obfuscated>
                  <Name>EditorHided</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.BaseTextControl</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.BaseTextControl</NewName>
              <Field>
                <Original>
                  <Name>_baseFormatFlags</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextFormatFlags</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextFormatFlags</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_formatFlags</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextFormatFlags</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextFormatFlags</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_focusPen</Name>
                  <Signature>[System.Drawing] System.Drawing.Pen</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Pen</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_format</Name>
                  <Signature>[System.Drawing] System.Drawing.StringFormat</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.StringFormat</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Font</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_textAlign</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.HorizontalAlignment</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.HorizontalAlignment</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_trimming</Name>
                  <Signature>[System.Drawing] System.Drawing.StringTrimming</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.StringTrimming</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_displayHiddenContentInToolTip</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_useCompatibleTextRendering</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_brushes</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; [System.Drawing] System.Drawing.Color, [System.Drawing] System.Drawing.Brush &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; [System.Drawing] System.Drawing.Color, [System.Drawing] System.Drawing.Brush &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>DrawText</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.DrawEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.DrawEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font get_Font ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font get_Font ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Font</Name>
                  <Signature>void set_Font ([System.Drawing] System.Drawing.Font)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Font</Name>
                  <Signature>void set_Font ([System.Drawing] System.Drawing.Font)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShouldSerializeFont</Name>
                  <Signature>bool ShouldSerializeFont ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ShouldSerializeFont</Name>
                  <Signature>bool ShouldSerializeFont ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TextAlign</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.HorizontalAlignment get_TextAlign ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TextAlign</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.HorizontalAlignment get_TextAlign ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TextAlign</Name>
                  <Signature>void set_TextAlign ([System.Windows.Forms] System.Windows.Forms.HorizontalAlignment)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TextAlign</Name>
                  <Signature>void set_TextAlign ([System.Windows.Forms] System.Windows.Forms.HorizontalAlignment)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Trimming</Name>
                  <Signature>[System.Drawing] System.Drawing.StringTrimming get_Trimming ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Trimming</Name>
                  <Signature>[System.Drawing] System.Drawing.StringTrimming get_Trimming ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Trimming</Name>
                  <Signature>void set_Trimming ([System.Drawing] System.Drawing.StringTrimming)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Trimming</Name>
                  <Signature>void set_Trimming ([System.Drawing] System.Drawing.StringTrimming)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DisplayHiddenContentInToolTip</Name>
                  <Signature>bool get_DisplayHiddenContentInToolTip ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DisplayHiddenContentInToolTip</Name>
                  <Signature>bool get_DisplayHiddenContentInToolTip ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_DisplayHiddenContentInToolTip</Name>
                  <Signature>void set_DisplayHiddenContentInToolTip (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_DisplayHiddenContentInToolTip</Name>
                  <Signature>void set_DisplayHiddenContentInToolTip (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UseCompatibleTextRendering</Name>
                  <Signature>bool get_UseCompatibleTextRendering ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UseCompatibleTextRendering</Name>
                  <Signature>bool get_UseCompatibleTextRendering ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UseCompatibleTextRendering</Name>
                  <Signature>void set_UseCompatibleTextRendering (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UseCompatibleTextRendering</Name>
                  <Signature>void set_UseCompatibleTextRendering (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetFormatFlags</Name>
                  <Signature>void SetFormatFlags ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MeasureSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size MeasureSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MeasureSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size MeasureSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLabelSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size GetLabelSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetLabelSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size GetLabelSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLabelSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size GetLabelSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetLabelSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size GetLabelSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetDrawingFont</Name>
                  <Signature>[System.Drawing] System.Drawing.Font GetDrawingFont (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetDrawingFont</Name>
                  <Signature>[System.Drawing] System.Drawing.Font GetDrawingFont (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetEditControlProperties</Name>
                  <Signature>void SetEditControlProperties ([System.Windows.Forms] System.Windows.Forms.Control, TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetEditControlProperties</Name>
                  <Signature>void SetEditControlProperties ([System.Windows.Forms] System.Windows.Forms.Control, TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Draw</Name>
                  <Signature>void Draw (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Draw</Name>
                  <Signature>void Draw (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetFrush</Name>
                  <Signature>static [System.Drawing] System.Drawing.Brush GetFrush ([System.Drawing] System.Drawing.Color)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [System.Drawing] System.Drawing.Brush a ([System.Drawing] System.Drawing.Color)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateBrushes</Name>
                  <Signature>void CreateBrushes (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext, string, [out] [System.Drawing] System.Drawing.Brush&amp;, [out] [System.Drawing] System.Drawing.Color&amp;, [out] [System.Drawing] System.Drawing.Font&amp;, [out] string&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext, string, [out] [System.Drawing] System.Drawing.Brush&amp;, [out] [System.Drawing] System.Drawing.Color&amp;, [out] [System.Drawing] System.Drawing.Font&amp;, [out] string&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLabel</Name>
                  <Signature>string GetLabel (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetLabel</Name>
                  <Signature>string GetLabel (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FormatLabel</Name>
                  <Signature>string FormatLabel (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FormatLabel</Name>
                  <Signature>string FormatLabel (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetLabel</Name>
                  <Signature>void SetLabel (TestAutomationFX.Controls.Tree.TreeNodeAdv, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetLabel</Name>
                  <Signature>void SetLabel (TestAutomationFX.Controls.Tree.TreeNodeAdv, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_DrawText</Name>
                  <Signature>void add_DrawText ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.DrawEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_DrawText</Name>
                  <Signature>void add_DrawText ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.DrawEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_DrawText</Name>
                  <Signature>void remove_DrawText ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.DrawEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_DrawText</Name>
                  <Signature>void remove_DrawText ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.NodeControls.DrawEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnDrawText</Name>
                  <Signature>void OnDrawText (TestAutomationFX.Controls.Tree.NodeControls.DrawEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnDrawText</Name>
                  <Signature>void OnDrawText (TestAutomationFX.Controls.Tree.NodeControls.DrawEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font</Signature>
                </Original>
                <Obfuscated>
                  <Name>Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font Font</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TextAlign</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.HorizontalAlignment</Signature>
                </Original>
                <Obfuscated>
                  <Name>TextAlign</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.HorizontalAlignment TextAlign</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Trimming</Name>
                  <Signature>[System.Drawing] System.Drawing.StringTrimming</Signature>
                </Original>
                <Obfuscated>
                  <Name>Trimming</Name>
                  <Signature>[System.Drawing] System.Drawing.StringTrimming Trimming</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DisplayHiddenContentInToolTip</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>DisplayHiddenContentInToolTip</Name>
                  <Signature>bool DisplayHiddenContentInToolTip</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UseCompatibleTextRendering</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>UseCompatibleTextRendering</Name>
                  <Signature>bool UseCompatibleTextRendering</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>DrawText</Name>
                </Original>
                <Obfuscated>
                  <Name>DrawText</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.NodeEventArgs</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.NodeEventArgs</NewName>
              <Field>
                <Original>
                  <Name>_node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_Node ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_Node ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Original>
                <Obfuscated>
                  <Name>Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv Node</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.DrawEventArgs</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.DrawEventArgs</NewName>
              <Field>
                <Original>
                  <Name>_context</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_textBrush</Name>
                  <Signature>[System.Drawing] System.Drawing.Brush</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Brush</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_backgroundBrush</Name>
                  <Signature>[System.Drawing] System.Drawing.Brush</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Drawing] System.Drawing.Brush</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Font</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_textColor</Name>
                  <Signature>[System.Drawing] System.Drawing.Color</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Color</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_text</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Context</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext get_Context ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Context</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext get_Context ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TextBrush</Name>
                  <Signature>[System.Drawing] System.Drawing.Brush get_TextBrush ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TextBrush</Name>
                  <Signature>[System.Drawing] System.Drawing.Brush get_TextBrush ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TextBrush</Name>
                  <Signature>void set_TextBrush ([System.Drawing] System.Drawing.Brush)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TextBrush</Name>
                  <Signature>void set_TextBrush ([System.Drawing] System.Drawing.Brush)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_BackgroundBrush</Name>
                  <Signature>[System.Drawing] System.Drawing.Brush get_BackgroundBrush ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_BackgroundBrush</Name>
                  <Signature>[System.Drawing] System.Drawing.Brush get_BackgroundBrush ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_BackgroundBrush</Name>
                  <Signature>void set_BackgroundBrush ([System.Drawing] System.Drawing.Brush)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_BackgroundBrush</Name>
                  <Signature>void set_BackgroundBrush ([System.Drawing] System.Drawing.Brush)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font get_Font ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font get_Font ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Font</Name>
                  <Signature>void set_Font ([System.Drawing] System.Drawing.Font)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Font</Name>
                  <Signature>void set_Font ([System.Drawing] System.Drawing.Font)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TextColor</Name>
                  <Signature>[System.Drawing] System.Drawing.Color get_TextColor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TextColor</Name>
                  <Signature>[System.Drawing] System.Drawing.Color get_TextColor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TextColor</Name>
                  <Signature>void set_TextColor ([System.Drawing] System.Drawing.Color)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TextColor</Name>
                  <Signature>void set_TextColor ([System.Drawing] System.Drawing.Color)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Context</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext</Signature>
                </Original>
                <Obfuscated>
                  <Name>Context</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext Context</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TextBrush</Name>
                  <Signature>[System.Drawing] System.Drawing.Brush</Signature>
                </Original>
                <Obfuscated>
                  <Name>TextBrush</Name>
                  <Signature>[System.Drawing] System.Drawing.Brush TextBrush</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>BackgroundBrush</Name>
                  <Signature>[System.Drawing] System.Drawing.Brush</Signature>
                </Original>
                <Obfuscated>
                  <Name>BackgroundBrush</Name>
                  <Signature>[System.Drawing] System.Drawing.Brush BackgroundBrush</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font</Signature>
                </Original>
                <Obfuscated>
                  <Name>Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font Font</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TextColor</Name>
                  <Signature>[System.Drawing] System.Drawing.Color</Signature>
                </Original>
                <Obfuscated>
                  <Name>TextColor</Name>
                  <Signature>[System.Drawing] System.Drawing.Color TextColor</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Text</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Text</Name>
                  <Signature>string Text</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.ExpandingIcon</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.ExpandingIcon</NewName>
              <Field>
                <Original>
                  <Name>_gif</Name>
                  <Signature>TestAutomationFX.Controls.GifDecoder</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.GifDecoder</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_index</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_animatingThread</Name>
                  <Signature>[mscorlib] System.Threading.Thread</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Threading.Thread</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>IconChanged</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>MeasureSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size MeasureSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MeasureSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size MeasureSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnIsVisibleValueNeeded</Name>
                  <Signature>void OnIsVisibleValueNeeded (TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnIsVisibleValueNeeded</Name>
                  <Signature>void OnIsVisibleValueNeeded (TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Draw</Name>
                  <Signature>void Draw (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Draw</Name>
                  <Signature>void Draw (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Start</Name>
                  <Signature>static void Start ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Start</Name>
                  <Signature>static void Start ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IterateIcons</Name>
                  <Signature>static void IterateIcons ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_IconChanged</Name>
                  <Signature>static void add_IconChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_IconChanged</Name>
                  <Signature>static void add_IconChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_IconChanged</Name>
                  <Signature>static void remove_IconChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_IconChanged</Name>
                  <Signature>static void remove_IconChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Event>
                <Original>
                  <Name>IconChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>IconChanged</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.NodeCheckBox</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.NodeCheckBox</NewName>
              <Field>
                <Original>
                  <Name>ImageSize</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ImageSize</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_check</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_uncheck</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_unknown</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_threeState</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>CheckStateChanged</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_ThreeState</Name>
                  <Signature>bool get_ThreeState ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ThreeState</Name>
                  <Signature>bool get_ThreeState ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ThreeState</Name>
                  <Signature>void set_ThreeState (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ThreeState</Name>
                  <Signature>void set_ThreeState (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MeasureSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size MeasureSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MeasureSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size MeasureSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Draw</Name>
                  <Signature>void Draw (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Draw</Name>
                  <Signature>void Draw (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCheckState</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckState GetCheckState (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetCheckState</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckState GetCheckState (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetCheckState</Name>
                  <Signature>void SetCheckState (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Windows.Forms] System.Windows.Forms.CheckState)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetCheckState</Name>
                  <Signature>void SetCheckState (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Windows.Forms] System.Windows.Forms.CheckState)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDoubleClick</Name>
                  <Signature>void MouseDoubleClick (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDoubleClick</Name>
                  <Signature>void MouseDoubleClick (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetNewState</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckState GetNewState ([System.Windows.Forms] System.Windows.Forms.CheckState)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckState a ([System.Windows.Forms] System.Windows.Forms.CheckState)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_CheckStateChanged</Name>
                  <Signature>void add_CheckStateChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_CheckStateChanged</Name>
                  <Signature>void add_CheckStateChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_CheckStateChanged</Name>
                  <Signature>void remove_CheckStateChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_CheckStateChanged</Name>
                  <Signature>void remove_CheckStateChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCheckStateChanged</Name>
                  <Signature>void OnCheckStateChanged (TestAutomationFX.Controls.Tree.TreePathEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnCheckStateChanged</Name>
                  <Signature>void OnCheckStateChanged (TestAutomationFX.Controls.Tree.TreePathEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCheckStateChanged</Name>
                  <Signature>void OnCheckStateChanged (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnCheckStateChanged</Name>
                  <Signature>void OnCheckStateChanged (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ThreeState</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ThreeState</Name>
                  <Signature>bool ThreeState</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>CheckStateChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>CheckStateChanged</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.NodeComboBox</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.NodeComboBox</NewName>
              <Field>
                <Original>
                  <Name>_editorWidth</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_dropDownItems</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; object &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; object &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_EditorWidth</Name>
                  <Signature>int32 get_EditorWidth ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_EditorWidth</Name>
                  <Signature>int32 get_EditorWidth ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_EditorWidth</Name>
                  <Signature>void set_EditorWidth (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_EditorWidth</Name>
                  <Signature>void set_EditorWidth (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DropDownItems</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; object &gt; get_DropDownItems ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DropDownItems</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; object &gt; get_DropDownItems ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CalculateEditorSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size CalculateEditorSize (TestAutomationFX.Controls.Tree.EditorContext)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CalculateEditorSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size CalculateEditorSize (TestAutomationFX.Controls.Tree.EditorContext)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateEditor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control CreateEditor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateEditor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control CreateEditor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EditorDropDownClosed</Name>
                  <Signature>void EditorDropDownClosed (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateEditor</Name>
                  <Signature>void UpdateEditor ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>UpdateEditor</Name>
                  <Signature>void UpdateEditor ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoApplyChanges</Name>
                  <Signature>void DoApplyChanges (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoApplyChanges</Name>
                  <Signature>void DoApplyChanges (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseUp</Name>
                  <Signature>void MouseUp (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>EditorWidth</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>EditorWidth</Name>
                  <Signature>int32 EditorWidth</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DropDownItems</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; object &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>DropDownItems</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; object &gt; DropDownItems</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.NodeControlsCollection</Name>
              <NewName>I</NewName>
              <Field>
                <Original>
                  <Name>_tree</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearItems</Name>
                  <Signature>void ClearItems ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ClearItems</Name>
                  <Signature>void ClearItems ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InsertItem</Name>
                  <Signature>void InsertItem (int32, TestAutomationFX.Controls.Tree.NodeControls.NodeControl)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>InsertItem</Name>
                  <Signature>void InsertItem (int32, TestAutomationFX.Controls.Tree.NodeControls.NodeControl)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemoveItem</Name>
                  <Signature>void RemoveItem (int32)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RemoveItem</Name>
                  <Signature>void RemoveItem (int32)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetItem</Name>
                  <Signature>void SetItem (int32, TestAutomationFX.Controls.Tree.NodeControls.NodeControl)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetItem</Name>
                  <Signature>void SetItem (int32, TestAutomationFX.Controls.Tree.NodeControls.NodeControl)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.NodeControlCollectionEditor</Name>
              <NewName>J</NewName>
              <Field>
                <Original>
                  <Name>_types</Name>
                  <Signature>[mscorlib] System.Type[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Type[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateNewItemTypes</Name>
                  <Signature>[mscorlib] System.Type[] CreateNewItemTypes ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateNewItemTypes</Name>
                  <Signature>[mscorlib] System.Type[] CreateNewItemTypes ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.NodeControlValueEventArgs</NewName>
              <Field>
                <Original>
                  <Name>_value</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Value</Name>
                  <Signature>object get_Value ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Value</Name>
                  <Signature>object get_Value ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Value</Name>
                  <Signature>void set_Value (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Value</Name>
                  <Signature>void set_Value (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Value</Name>
                  <Signature>object</Signature>
                </Original>
                <Obfuscated>
                  <Name>Value</Name>
                  <Signature>object Value</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.NodeTextBox</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.NodeTextBox</NewName>
              <Field>
                <Original>
                  <Name>MinTextBoxWidth</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_label</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>LabelChanged</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_EditorTextBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox get_EditorTextBox ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CalculateEditorSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size CalculateEditorSize (TestAutomationFX.Controls.Tree.EditorContext)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CalculateEditorSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size CalculateEditorSize (TestAutomationFX.Controls.Tree.EditorContext)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>KeyDown</Name>
                  <Signature>void KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateEditor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control CreateEditor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateEditor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control CreateEditor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateTextBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox CreateTextBox ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateTextBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox CreateTextBox ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>textBox_TextChanged</Name>
                  <Signature>void textBox_TextChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoApplyChanges</Name>
                  <Signature>void DoApplyChanges (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoApplyChanges</Name>
                  <Signature>void DoApplyChanges (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Cut</Name>
                  <Signature>void Cut ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Cut</Name>
                  <Signature>void Cut ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Copy</Name>
                  <Signature>void Copy ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Copy</Name>
                  <Signature>void Copy ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Paste</Name>
                  <Signature>void Paste ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Paste</Name>
                  <Signature>void Paste ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Delete</Name>
                  <Signature>void Delete ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Delete</Name>
                  <Signature>void Delete ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_LabelChanged</Name>
                  <Signature>void add_LabelChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_LabelChanged</Name>
                  <Signature>void add_LabelChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_LabelChanged</Name>
                  <Signature>void remove_LabelChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_LabelChanged</Name>
                  <Signature>void remove_LabelChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnLabelChanged</Name>
                  <Signature>void OnLabelChanged ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnLabelChanged</Name>
                  <Signature>void OnLabelChanged ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>EditorTextBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>LabelChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>LabelChanged</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.NodeDecimalTextBox</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.NodeDecimalTextBox</NewName>
              <Field>
                <Original>
                  <Name>_allowDecimalSeperator</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_allowNegativeSign</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_AllowDecimalSeperator</Name>
                  <Signature>bool get_AllowDecimalSeperator ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AllowDecimalSeperator</Name>
                  <Signature>bool get_AllowDecimalSeperator ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AllowDecimalSeperator</Name>
                  <Signature>void set_AllowDecimalSeperator (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AllowDecimalSeperator</Name>
                  <Signature>void set_AllowDecimalSeperator (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AllowNegativeSign</Name>
                  <Signature>bool get_AllowNegativeSign ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AllowNegativeSign</Name>
                  <Signature>bool get_AllowNegativeSign ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AllowNegativeSign</Name>
                  <Signature>void set_AllowNegativeSign (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AllowNegativeSign</Name>
                  <Signature>void set_AllowNegativeSign (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateTextBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox CreateTextBox ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateTextBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox CreateTextBox ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoApplyChanges</Name>
                  <Signature>void DoApplyChanges (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoApplyChanges</Name>
                  <Signature>void DoApplyChanges (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>AllowDecimalSeperator</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>AllowDecimalSeperator</Name>
                  <Signature>bool AllowDecimalSeperator</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AllowNegativeSign</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>AllowNegativeSign</Name>
                  <Signature>bool AllowNegativeSign</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.NodeIcon</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.NodeIcon</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MeasureSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size MeasureSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MeasureSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size MeasureSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Draw</Name>
                  <Signature>void Draw (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Draw</Name>
                  <Signature>void Draw (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetIcon</Name>
                  <Signature>[System.Drawing] System.Drawing.Image GetIcon (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetIcon</Name>
                  <Signature>[System.Drawing] System.Drawing.Image GetIcon (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.NodeIntegerTextBox</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.NodeIntegerTextBox</NewName>
              <Field>
                <Original>
                  <Name>_allowNegativeSign</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_AllowNegativeSign</Name>
                  <Signature>bool get_AllowNegativeSign ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AllowNegativeSign</Name>
                  <Signature>bool get_AllowNegativeSign ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AllowNegativeSign</Name>
                  <Signature>void set_AllowNegativeSign (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AllowNegativeSign</Name>
                  <Signature>void set_AllowNegativeSign (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateTextBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox CreateTextBox ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateTextBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox CreateTextBox ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoApplyChanges</Name>
                  <Signature>void DoApplyChanges (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoApplyChanges</Name>
                  <Signature>void DoApplyChanges (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>AllowNegativeSign</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>AllowNegativeSign</Name>
                  <Signature>bool AllowNegativeSign</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.NodeNumericUpDown</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.NodeNumericUpDown</NewName>
              <Field>
                <Original>
                  <Name>_editorWidth</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_decimalPlaces</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_increment</Name>
                  <Signature>[mscorlib] System.Decimal</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Decimal</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_minimum</Name>
                  <Signature>[mscorlib] System.Decimal</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.Decimal</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_maximum</Name>
                  <Signature>[mscorlib] System.Decimal</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[mscorlib] System.Decimal</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_EditorWidth</Name>
                  <Signature>int32 get_EditorWidth ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_EditorWidth</Name>
                  <Signature>int32 get_EditorWidth ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_EditorWidth</Name>
                  <Signature>void set_EditorWidth (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_EditorWidth</Name>
                  <Signature>void set_EditorWidth (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DecimalPlaces</Name>
                  <Signature>int32 get_DecimalPlaces ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DecimalPlaces</Name>
                  <Signature>int32 get_DecimalPlaces ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_DecimalPlaces</Name>
                  <Signature>void set_DecimalPlaces (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_DecimalPlaces</Name>
                  <Signature>void set_DecimalPlaces (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Increment</Name>
                  <Signature>[mscorlib] System.Decimal get_Increment ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Increment</Name>
                  <Signature>[mscorlib] System.Decimal get_Increment ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Increment</Name>
                  <Signature>void set_Increment ([mscorlib] System.Decimal)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Increment</Name>
                  <Signature>void set_Increment ([mscorlib] System.Decimal)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Minimum</Name>
                  <Signature>[mscorlib] System.Decimal get_Minimum ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Minimum</Name>
                  <Signature>[mscorlib] System.Decimal get_Minimum ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Minimum</Name>
                  <Signature>void set_Minimum ([mscorlib] System.Decimal)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Minimum</Name>
                  <Signature>void set_Minimum ([mscorlib] System.Decimal)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Maximum</Name>
                  <Signature>[mscorlib] System.Decimal get_Maximum ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Maximum</Name>
                  <Signature>[mscorlib] System.Decimal get_Maximum ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Maximum</Name>
                  <Signature>void set_Maximum ([mscorlib] System.Decimal)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Maximum</Name>
                  <Signature>void set_Maximum ([mscorlib] System.Decimal)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CalculateEditorSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size CalculateEditorSize (TestAutomationFX.Controls.Tree.EditorContext)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CalculateEditorSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size CalculateEditorSize (TestAutomationFX.Controls.Tree.EditorContext)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateEditor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control CreateEditor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateEditor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control CreateEditor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoApplyChanges</Name>
                  <Signature>void DoApplyChanges (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoApplyChanges</Name>
                  <Signature>void DoApplyChanges (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>EditorWidth</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>EditorWidth</Name>
                  <Signature>int32 EditorWidth</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DecimalPlaces</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>DecimalPlaces</Name>
                  <Signature>int32 DecimalPlaces</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Increment</Name>
                  <Signature>[mscorlib] System.Decimal</Signature>
                </Original>
                <Obfuscated>
                  <Name>Increment</Name>
                  <Signature>[mscorlib] System.Decimal Increment</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Minimum</Name>
                  <Signature>[mscorlib] System.Decimal</Signature>
                </Original>
                <Obfuscated>
                  <Name>Minimum</Name>
                  <Signature>[mscorlib] System.Decimal Minimum</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Maximum</Name>
                  <Signature>[mscorlib] System.Decimal</Signature>
                </Original>
                <Obfuscated>
                  <Name>Maximum</Name>
                  <Signature>[mscorlib] System.Decimal Maximum</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.NodePlusMinus</Name>
              <NewName>K</NewName>
              <Field>
                <Original>
                  <Name>ImageSize</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Width</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_plus</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_minus</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MeasureSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size MeasureSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MeasureSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size MeasureSize (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Draw</Name>
                  <Signature>void Draw (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Draw</Name>
                  <Signature>void Draw (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDown</Name>
                  <Signature>void MouseDown (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseDoubleClick</Name>
                  <Signature>void MouseDoubleClick (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseDoubleClick</Name>
                  <Signature>void MouseDoubleClick (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.NodeControls.NodeStateIcon</Name>
              <NewName>TestAutomationFX.Controls.Tree.NodeControls.NodeStateIcon</NewName>
              <Field>
                <Original>
                  <Name>_leaf</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_opened</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_closed</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Drawing] System.Drawing.Image</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MakeTransparent</Name>
                  <Signature>static [System.Drawing] System.Drawing.Image MakeTransparent ([System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [System.Drawing] System.Drawing.Image a ([System.Drawing] System.Drawing.Bitmap)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetIcon</Name>
                  <Signature>[System.Drawing] System.Drawing.Image GetIcon (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetIcon</Name>
                  <Signature>[System.Drawing] System.Drawing.Image GetIcon (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.TreeModelBase</Name>
              <NewName>TestAutomationFX.Controls.Tree.TreeModelBase</NewName>
              <Field>
                <Original>
                  <Name>NodesChanged</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>StructureChanged</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>NodesInserted</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>NodesRemoved</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>GetChildren</Name>
                  <Signature>[mscorlib] System.Collections.IEnumerable GetChildren (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetChildren</Name>
                  <Signature>[mscorlib] System.Collections.IEnumerable GetChildren (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsLeaf</Name>
                  <Signature>bool IsLeaf (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsLeaf</Name>
                  <Signature>bool IsLeaf (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_NodesChanged</Name>
                  <Signature>void add_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_NodesChanged</Name>
                  <Signature>void add_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_NodesChanged</Name>
                  <Signature>void remove_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_NodesChanged</Name>
                  <Signature>void remove_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnNodesChanged</Name>
                  <Signature>void OnNodesChanged (TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnNodesChanged</Name>
                  <Signature>void OnNodesChanged (TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_StructureChanged</Name>
                  <Signature>void add_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_StructureChanged</Name>
                  <Signature>void add_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_StructureChanged</Name>
                  <Signature>void remove_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_StructureChanged</Name>
                  <Signature>void remove_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnStructureChanged</Name>
                  <Signature>void OnStructureChanged (TestAutomationFX.Controls.Tree.TreePathEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnStructureChanged</Name>
                  <Signature>void OnStructureChanged (TestAutomationFX.Controls.Tree.TreePathEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_NodesInserted</Name>
                  <Signature>void add_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_NodesInserted</Name>
                  <Signature>void add_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_NodesInserted</Name>
                  <Signature>void remove_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_NodesInserted</Name>
                  <Signature>void remove_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnNodesInserted</Name>
                  <Signature>void OnNodesInserted (TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnNodesInserted</Name>
                  <Signature>void OnNodesInserted (TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_NodesRemoved</Name>
                  <Signature>void add_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_NodesRemoved</Name>
                  <Signature>void add_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_NodesRemoved</Name>
                  <Signature>void remove_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_NodesRemoved</Name>
                  <Signature>void remove_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnNodesRemoved</Name>
                  <Signature>void OnNodesRemoved (TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnNodesRemoved</Name>
                  <Signature>void OnNodesRemoved (TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Event>
                <Original>
                  <Name>NodesChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>NodesChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>StructureChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>StructureChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>NodesInserted</Name>
                </Original>
                <Obfuscated>
                  <Name>NodesInserted</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>NodesRemoved</Name>
                </Original>
                <Obfuscated>
                  <Name>NodesRemoved</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.SortedTreeModel</Name>
              <NewName>TestAutomationFX.Controls.Tree.SortedTreeModel</NewName>
              <Field>
                <Original>
                  <Name>_innerModel</Name>
                  <Signature>TestAutomationFX.Controls.Tree.ITreeModel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.ITreeModel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_comparer</Name>
                  <Signature>[mscorlib] System.Collections.IComparer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.IComparer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_InnerModel</Name>
                  <Signature>TestAutomationFX.Controls.Tree.ITreeModel get_InnerModel ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_InnerModel</Name>
                  <Signature>TestAutomationFX.Controls.Tree.ITreeModel get_InnerModel ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Comparer</Name>
                  <Signature>[mscorlib] System.Collections.IComparer get_Comparer ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Comparer</Name>
                  <Signature>[mscorlib] System.Collections.IComparer get_Comparer ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Comparer</Name>
                  <Signature>void set_Comparer ([mscorlib] System.Collections.IComparer)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Comparer</Name>
                  <Signature>void set_Comparer ([mscorlib] System.Collections.IComparer)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.ITreeModel)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.ITreeModel)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>_innerModel_StructureChanged</Name>
                  <Signature>void _innerModel_StructureChanged (object, TestAutomationFX.Controls.Tree.TreePathEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, TestAutomationFX.Controls.Tree.TreePathEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>_innerModel_NodesRemoved</Name>
                  <Signature>void _innerModel_NodesRemoved (object, TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>_innerModel_NodesInserted</Name>
                  <Signature>void _innerModel_NodesInserted (object, TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>_innerModel_NodesChanged</Name>
                  <Signature>void _innerModel_NodesChanged (object, TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (object, TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetChildren</Name>
                  <Signature>[mscorlib] System.Collections.IEnumerable GetChildren (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetChildren</Name>
                  <Signature>[mscorlib] System.Collections.IEnumerable GetChildren (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsLeaf</Name>
                  <Signature>bool IsLeaf (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsLeaf</Name>
                  <Signature>bool IsLeaf (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>InnerModel</Name>
                  <Signature>TestAutomationFX.Controls.Tree.ITreeModel</Signature>
                </Original>
                <Obfuscated>
                  <Name>InnerModel</Name>
                  <Signature>TestAutomationFX.Controls.Tree.ITreeModel InnerModel</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Comparer</Name>
                  <Signature>[mscorlib] System.Collections.IComparer</Signature>
                </Original>
                <Obfuscated>
                  <Name>Comparer</Name>
                  <Signature>[mscorlib] System.Collections.IComparer Comparer</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.TreeColumn</Name>
              <NewName>TestAutomationFX.Controls.Tree.TreeColumn</NewName>
              <Field>
                <Original>
                  <Name>HeaderLeftMargin</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>HeaderRightMargin</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SortOrderMarkMargin</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_headerFlags</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextFormatFlags</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextFormatFlags</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_baseHeaderFlags</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextFormatFlags</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextFormatFlags</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_owner</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumnCollection</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>L</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_header</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_tooltipText</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_width</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_minColumnWidth</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_maxColumnWidth</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_visible</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_textAlign</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.HorizontalAlignment</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.HorizontalAlignment</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_sortable</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_sort_order</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.SortOrder</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.SortOrder</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_normalRenderer</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.VisualStyles.VisualStyleRenderer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.VisualStyles.VisualStyleRenderer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_pressedRenderer</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.VisualStyles.VisualStyleRenderer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.VisualStyles.VisualStyleRenderer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_hotRenderer</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.VisualStyles.VisualStyleRenderer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.VisualStyles.VisualStyleRenderer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>HeaderChanged</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SortOrderChanged</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>IsVisibleChanged</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WidthChanged</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Owner</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumnCollection get_Owner ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>L a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Owner</Name>
                  <Signature>void set_Owner (TestAutomationFX.Controls.Tree.TreeColumnCollection)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (L)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Header</Name>
                  <Signature>string get_Header ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Header</Name>
                  <Signature>string get_Header ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Header</Name>
                  <Signature>void set_Header (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Header</Name>
                  <Signature>void set_Header (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TooltipText</Name>
                  <Signature>string get_TooltipText ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TooltipText</Name>
                  <Signature>string get_TooltipText ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TooltipText</Name>
                  <Signature>void set_TooltipText (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TooltipText</Name>
                  <Signature>void set_TooltipText (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Width</Name>
                  <Signature>int32 get_Width ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Width</Name>
                  <Signature>int32 get_Width ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Width</Name>
                  <Signature>void set_Width (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Width</Name>
                  <Signature>void set_Width (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MinColumnWidth</Name>
                  <Signature>int32 get_MinColumnWidth ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MinColumnWidth</Name>
                  <Signature>int32 get_MinColumnWidth ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MinColumnWidth</Name>
                  <Signature>void set_MinColumnWidth (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MinColumnWidth</Name>
                  <Signature>void set_MinColumnWidth (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MaxColumnWidth</Name>
                  <Signature>int32 get_MaxColumnWidth ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MaxColumnWidth</Name>
                  <Signature>int32 get_MaxColumnWidth ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MaxColumnWidth</Name>
                  <Signature>void set_MaxColumnWidth (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MaxColumnWidth</Name>
                  <Signature>void set_MaxColumnWidth (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsVisible</Name>
                  <Signature>bool get_IsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsVisible</Name>
                  <Signature>bool get_IsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsVisible</Name>
                  <Signature>void set_IsVisible (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsVisible</Name>
                  <Signature>void set_IsVisible (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TextAlign</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.HorizontalAlignment get_TextAlign ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TextAlign</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.HorizontalAlignment get_TextAlign ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TextAlign</Name>
                  <Signature>void set_TextAlign ([System.Windows.Forms] System.Windows.Forms.HorizontalAlignment)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TextAlign</Name>
                  <Signature>void set_TextAlign ([System.Windows.Forms] System.Windows.Forms.HorizontalAlignment)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Sortable</Name>
                  <Signature>bool get_Sortable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Sortable</Name>
                  <Signature>bool get_Sortable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Sortable</Name>
                  <Signature>void set_Sortable (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Sortable</Name>
                  <Signature>void set_Sortable (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SortOrder</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.SortOrder get_SortOrder ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SortOrder</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.SortOrder get_SortOrder ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_SortOrder</Name>
                  <Signature>void set_SortOrder ([System.Windows.Forms] System.Windows.Forms.SortOrder)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_SortOrder</Name>
                  <Signature>void set_SortOrder ([System.Windows.Forms] System.Windows.Forms.SortOrder)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SortMarkSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size get_SortMarkSize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SortMarkSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size get_SortMarkSize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateRenderers</Name>
                  <Signature>static void CreateRenderers ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateGhostImage</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap CreateGhostImage ([System.Drawing] System.Drawing.Rectangle, [System.Drawing] System.Drawing.Font)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap a ([System.Drawing] System.Drawing.Rectangle, [System.Drawing] System.Drawing.Font)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Draw</Name>
                  <Signature>void Draw ([System.Drawing] System.Drawing.Graphics, [System.Drawing] System.Drawing.Rectangle, [System.Drawing] System.Drawing.Font, bool, bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Drawing] System.Drawing.Graphics, [System.Drawing] System.Drawing.Rectangle, [System.Drawing] System.Drawing.Font, bool, bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DrawContent</Name>
                  <Signature>void DrawContent ([System.Drawing] System.Drawing.Graphics, [System.Drawing] System.Drawing.Rectangle, [System.Drawing] System.Drawing.Font)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Drawing] System.Drawing.Graphics, [System.Drawing] System.Drawing.Rectangle, [System.Drawing] System.Drawing.Font)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DrawSortMark</Name>
                  <Signature>void DrawSortMark ([System.Drawing] System.Drawing.Graphics, [System.Drawing] System.Drawing.Rectangle, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Drawing] System.Drawing.Graphics, [System.Drawing] System.Drawing.Rectangle, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DrawDropMark</Name>
                  <Signature>static void DrawDropMark ([System.Drawing] System.Drawing.Graphics, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ([System.Drawing] System.Drawing.Graphics, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DrawBackground</Name>
                  <Signature>static void DrawBackground ([System.Drawing] System.Drawing.Graphics, [System.Drawing] System.Drawing.Rectangle, bool, bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ([System.Drawing] System.Drawing.Graphics, [System.Drawing] System.Drawing.Rectangle, bool, bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_HeaderChanged</Name>
                  <Signature>void add_HeaderChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_HeaderChanged</Name>
                  <Signature>void add_HeaderChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_HeaderChanged</Name>
                  <Signature>void remove_HeaderChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_HeaderChanged</Name>
                  <Signature>void remove_HeaderChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnHeaderChanged</Name>
                  <Signature>void OnHeaderChanged ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_SortOrderChanged</Name>
                  <Signature>void add_SortOrderChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_SortOrderChanged</Name>
                  <Signature>void add_SortOrderChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_SortOrderChanged</Name>
                  <Signature>void remove_SortOrderChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_SortOrderChanged</Name>
                  <Signature>void remove_SortOrderChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnSortOrderChanged</Name>
                  <Signature>void OnSortOrderChanged ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_IsVisibleChanged</Name>
                  <Signature>void add_IsVisibleChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_IsVisibleChanged</Name>
                  <Signature>void add_IsVisibleChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_IsVisibleChanged</Name>
                  <Signature>void remove_IsVisibleChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_IsVisibleChanged</Name>
                  <Signature>void remove_IsVisibleChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnIsVisibleChanged</Name>
                  <Signature>void OnIsVisibleChanged ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_WidthChanged</Name>
                  <Signature>void add_WidthChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_WidthChanged</Name>
                  <Signature>void add_WidthChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_WidthChanged</Name>
                  <Signature>void remove_WidthChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_WidthChanged</Name>
                  <Signature>void remove_WidthChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnWidthChanged</Name>
                  <Signature>void OnWidthChanged ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Owner</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumnCollection</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumnCollection</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Index</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Index</Name>
                  <Signature>int32 Index</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Header</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Header</Name>
                  <Signature>string Header</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TooltipText</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>TooltipText</Name>
                  <Signature>string TooltipText</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Width</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Width</Name>
                  <Signature>int32 Width</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MinColumnWidth</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>MinColumnWidth</Name>
                  <Signature>int32 MinColumnWidth</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MaxColumnWidth</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>MaxColumnWidth</Name>
                  <Signature>int32 MaxColumnWidth</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsVisible</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsVisible</Name>
                  <Signature>bool IsVisible</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TextAlign</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.HorizontalAlignment</Signature>
                </Original>
                <Obfuscated>
                  <Name>TextAlign</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.HorizontalAlignment TextAlign</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Sortable</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Sortable</Name>
                  <Signature>bool Sortable</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SortOrder</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.SortOrder</Signature>
                </Original>
                <Obfuscated>
                  <Name>SortOrder</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.SortOrder SortOrder</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SortMarkSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size</Signature>
                </Original>
                <Obfuscated>
                  <Name>SortMarkSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size SortMarkSize</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>HeaderChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>HeaderChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>SortOrderChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>SortOrderChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>IsVisibleChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>IsVisibleChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>WidthChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>WidthChanged</Name>
                </Obfuscated>
              </Event>
              <NestedType>
                <Name>TreeColumnConverter</Name>
                <NewName>a</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>GetPropertiesSupported</Name>
                    <Signature>bool GetPropertiesSupported ([System] System.ComponentModel.ITypeDescriptorContext)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>GetPropertiesSupported</Name>
                    <Signature>bool GetPropertiesSupported ([System] System.ComponentModel.ITypeDescriptorContext)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.TreeColumnCollection</Name>
              <NewName>L</NewName>
              <Field>
                <Original>
                  <Name>_treeView</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InsertItem</Name>
                  <Signature>void InsertItem (int32, TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>InsertItem</Name>
                  <Signature>void InsertItem (int32, TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemoveItem</Name>
                  <Signature>void RemoveItem (int32)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RemoveItem</Name>
                  <Signature>void RemoveItem (int32)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetItem</Name>
                  <Signature>void SetItem (int32, TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetItem</Name>
                  <Signature>void SetItem (int32, TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearItems</Name>
                  <Signature>void ClearItems ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ClearItems</Name>
                  <Signature>void ClearItems ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BindEvents</Name>
                  <Signature>void BindEvents (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UnbindEvents</Name>
                  <Signature>void UnbindEvents (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SortOrderChanged</Name>
                  <Signature>void SortOrderChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WidthChanged</Name>
                  <Signature>void WidthChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsVisibleChanged</Name>
                  <Signature>void IsVisibleChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HeaderChanged</Name>
                  <Signature>void HeaderChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.TreeColumnEventArgs</Name>
              <NewName>TestAutomationFX.Controls.Tree.TreeColumnEventArgs</NewName>
              <Field>
                <Original>
                  <Name>_column</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Column</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn get_Column ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Column</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn get_Column ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Column</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                </Original>
                <Obfuscated>
                  <Name>Column</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn Column</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.TreeListAdapter</Name>
              <NewName>TestAutomationFX.Controls.Tree.TreeListAdapter</NewName>
              <Field>
                <Original>
                  <Name>_list</Name>
                  <Signature>[mscorlib] System.Collections.IEnumerable</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.IEnumerable</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>NodesChanged</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>StructureChanged</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>NodesInserted</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>NodesRemoved</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Collections.IEnumerable)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Collections.IEnumerable)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetChildren</Name>
                  <Signature>[mscorlib] System.Collections.IEnumerable GetChildren (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetChildren</Name>
                  <Signature>[mscorlib] System.Collections.IEnumerable GetChildren (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsLeaf</Name>
                  <Signature>bool IsLeaf (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsLeaf</Name>
                  <Signature>bool IsLeaf (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_NodesChanged</Name>
                  <Signature>void add_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_NodesChanged</Name>
                  <Signature>void add_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_NodesChanged</Name>
                  <Signature>void remove_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_NodesChanged</Name>
                  <Signature>void remove_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnNodesChanged</Name>
                  <Signature>void OnNodesChanged (TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnNodesChanged</Name>
                  <Signature>void OnNodesChanged (TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_StructureChanged</Name>
                  <Signature>void add_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_StructureChanged</Name>
                  <Signature>void add_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_StructureChanged</Name>
                  <Signature>void remove_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_StructureChanged</Name>
                  <Signature>void remove_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnStructureChanged</Name>
                  <Signature>void OnStructureChanged (TestAutomationFX.Controls.Tree.TreePathEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnStructureChanged</Name>
                  <Signature>void OnStructureChanged (TestAutomationFX.Controls.Tree.TreePathEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_NodesInserted</Name>
                  <Signature>void add_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_NodesInserted</Name>
                  <Signature>void add_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_NodesInserted</Name>
                  <Signature>void remove_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_NodesInserted</Name>
                  <Signature>void remove_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnNodeInserted</Name>
                  <Signature>void OnNodeInserted (TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnNodeInserted</Name>
                  <Signature>void OnNodeInserted (TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_NodesRemoved</Name>
                  <Signature>void add_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_NodesRemoved</Name>
                  <Signature>void add_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_NodesRemoved</Name>
                  <Signature>void remove_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_NodesRemoved</Name>
                  <Signature>void remove_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnNodeRemoved</Name>
                  <Signature>void OnNodeRemoved (TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnNodeRemoved</Name>
                  <Signature>void OnNodeRemoved (TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Event>
                <Original>
                  <Name>NodesChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>NodesChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>StructureChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>StructureChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>NodesInserted</Name>
                </Original>
                <Obfuscated>
                  <Name>NodesInserted</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>NodesRemoved</Name>
                </Original>
                <Obfuscated>
                  <Name>NodesRemoved</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.TreeModel</Name>
              <NewName>TestAutomationFX.Controls.Tree.TreeModel</NewName>
              <Field>
                <Original>
                  <Name>_root</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>NodesChanged</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>StructureChanged</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>NodesInserted</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>NodesRemoved</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Root</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node get_Root ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Root</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node get_Root ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Nodes</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.Node &gt; get_Nodes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Nodes</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.Node &gt; get_Nodes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPath</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreePath GetPath (TestAutomationFX.Controls.Tree.Node)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetPath</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreePath GetPath (TestAutomationFX.Controls.Tree.Node)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node FindNode (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node FindNode (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node FindNode (TestAutomationFX.Controls.Tree.Node, TestAutomationFX.Controls.Tree.TreePath, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node a (TestAutomationFX.Controls.Tree.Node, TestAutomationFX.Controls.Tree.TreePath, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetChildren</Name>
                  <Signature>[mscorlib] System.Collections.IEnumerable GetChildren (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetChildren</Name>
                  <Signature>[mscorlib] System.Collections.IEnumerable GetChildren (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsLeaf</Name>
                  <Signature>bool IsLeaf (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsLeaf</Name>
                  <Signature>bool IsLeaf (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_NodesChanged</Name>
                  <Signature>void add_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_NodesChanged</Name>
                  <Signature>void add_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_NodesChanged</Name>
                  <Signature>void remove_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_NodesChanged</Name>
                  <Signature>void remove_NodesChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnNodesChanged</Name>
                  <Signature>void OnNodesChanged (TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_StructureChanged</Name>
                  <Signature>void add_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_StructureChanged</Name>
                  <Signature>void add_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_StructureChanged</Name>
                  <Signature>void remove_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_StructureChanged</Name>
                  <Signature>void remove_StructureChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreePathEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnStructureChanged</Name>
                  <Signature>void OnStructureChanged (TestAutomationFX.Controls.Tree.TreePathEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnStructureChanged</Name>
                  <Signature>void OnStructureChanged (TestAutomationFX.Controls.Tree.TreePathEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_NodesInserted</Name>
                  <Signature>void add_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_NodesInserted</Name>
                  <Signature>void add_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_NodesInserted</Name>
                  <Signature>void remove_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_NodesInserted</Name>
                  <Signature>void remove_NodesInserted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnNodeInserted</Name>
                  <Signature>void OnNodeInserted (TestAutomationFX.Controls.Tree.Node, int32, TestAutomationFX.Controls.Tree.Node)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.Node, int32, TestAutomationFX.Controls.Tree.Node)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_NodesRemoved</Name>
                  <Signature>void add_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_NodesRemoved</Name>
                  <Signature>void add_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_NodesRemoved</Name>
                  <Signature>void remove_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_NodesRemoved</Name>
                  <Signature>void remove_NodesRemoved ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeModelEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnNodeRemoved</Name>
                  <Signature>void OnNodeRemoved (TestAutomationFX.Controls.Tree.Node, int32, TestAutomationFX.Controls.Tree.Node)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (TestAutomationFX.Controls.Tree.Node, int32, TestAutomationFX.Controls.Tree.Node)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Root</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                </Original>
                <Obfuscated>
                  <Name>Root</Name>
                  <Signature>TestAutomationFX.Controls.Tree.Node Root</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Nodes</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.Node &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>Nodes</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.Node &gt; Nodes</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>NodesChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>NodesChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>StructureChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>StructureChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>NodesInserted</Name>
                </Original>
                <Obfuscated>
                  <Name>NodesInserted</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>NodesRemoved</Name>
                </Original>
                <Obfuscated>
                  <Name>NodesRemoved</Name>
                </Obfuscated>
              </Event>
              <NestedType>
                <Name>&lt;GetChildren&gt;d__0</Name>
                <NewName>&lt;GetChildren&gt;d__0</NewName>
                <Field>
                  <Original>
                    <Name>&lt;&gt;2__current</Name>
                    <Signature>object</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>object</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;1__state</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;l__initialThreadId</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>b</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeModel</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeModel</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>treePath</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreePath</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>treePath</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreePath</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;3__treePath</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreePath</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;3__treePath</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreePath</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;node&gt;5__1</Name>
                    <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;node&gt;5__1</Name>
                    <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;n&gt;5__2</Name>
                    <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;n&gt;5__2</Name>
                    <Signature>TestAutomationFX.Controls.Tree.Node</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;7__wrap3</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.Node &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;7__wrap3</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.Node &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerable&lt;System.Object&gt;.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; object &gt; System.Collections.Generic.IEnumerable&lt;System.Object&gt;.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerable&lt;System.Object&gt;.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; object &gt; System.Collections.Generic.IEnumerable&lt;System.Object&gt;.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerable.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerable.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>MoveNext</Name>
                    <Signature>bool MoveNext ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>MoveNext</Name>
                    <Signature>bool MoveNext ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</Name>
                    <Signature>object System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current</Name>
                    <Signature>object System.Collections.Generic.IEnumerator&lt;System.Object&gt;.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerator.Reset</Name>
                    <Signature>void System.Collections.IEnumerator.Reset ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.Reset</Name>
                    <Signature>void System.Collections.IEnumerator.Reset ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.IDisposable.Dispose</Name>
                    <Signature>void System.IDisposable.Dispose ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.IDisposable.Dispose</Name>
                    <Signature>void System.IDisposable.Dispose ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerator.get_Current</Name>
                    <Signature>object System.Collections.IEnumerator.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.get_Current</Name>
                    <Signature>object System.Collections.IEnumerator.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;&gt;m__Finally4</Name>
                    <Signature>void &lt;&gt;m__Finally4 ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>void a ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Property>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.Current</Name>
                    <Signature>object</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerator&lt;System.Object&gt;.Current</Name>
                    <Signature>object System.Collections.Generic.IEnumerator&lt;System.Object&gt;.Current</Signature>
                  </Obfuscated>
                </Property>
                <Property>
                  <Original>
                    <Name>System.Collections.IEnumerator.Current</Name>
                    <Signature>object</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.Current</Name>
                    <Signature>object System.Collections.IEnumerator.Current</Signature>
                  </Obfuscated>
                </Property>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.TreePathEventArgs</Name>
              <NewName>TestAutomationFX.Controls.Tree.TreePathEventArgs</NewName>
              <Field>
                <Original>
                  <Name>_path</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreePath</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreePath</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Path</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreePath get_Path ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Path</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreePath get_Path ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Path</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreePath</Signature>
                </Original>
                <Obfuscated>
                  <Name>Path</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreePath Path</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.TreeModelEventArgs</Name>
              <NewName>TestAutomationFX.Controls.Tree.TreeModelEventArgs</NewName>
              <Field>
                <Original>
                  <Name>_children</Name>
                  <Signature>object[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_indices</Name>
                  <Signature>int32[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Children</Name>
                  <Signature>object[] get_Children ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Children</Name>
                  <Signature>object[] get_Children ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Indices</Name>
                  <Signature>int32[] get_Indices ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Indices</Name>
                  <Signature>int32[] get_Indices ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreePath, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreePath, object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreePath, int32[], object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreePath, int32[], object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Children</Name>
                  <Signature>object[]</Signature>
                </Original>
                <Obfuscated>
                  <Name>Children</Name>
                  <Signature>object[] Children</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Indices</Name>
                  <Signature>int32[]</Signature>
                </Original>
                <Obfuscated>
                  <Name>Indices</Name>
                  <Signature>int32[] Indices</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.TreeNodeAdv</Name>
              <NewName>TestAutomationFX.Controls.Tree.TreeNodeAdv</NewName>
              <Field>
                <Original>
                  <Name>_tree</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_row</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_index</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_isSelected</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_isLeaf</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_isExpandedOnce</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_isExpanded</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_parent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_tag</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_nodes</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_children</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.ReadOnlyCollection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.ReadOnlyCollection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_rightBounds</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_height</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_isExpandingNow</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Tree</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx get_Tree ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Row</Name>
                  <Signature>int32 get_Row ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32 a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Row</Name>
                  <Signature>void set_Row (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsSelected</Name>
                  <Signature>bool get_IsSelected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsSelected</Name>
                  <Signature>bool get_IsSelected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsSelected</Name>
                  <Signature>void set_IsSelected (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsSelected</Name>
                  <Signature>void set_IsSelected (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsVisible</Name>
                  <Signature>bool get_IsVisible ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsLeaf</Name>
                  <Signature>bool get_IsLeaf ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsLeaf</Name>
                  <Signature>bool get_IsLeaf ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsLeaf</Name>
                  <Signature>void set_IsLeaf (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsExpandedOnce</Name>
                  <Signature>bool get_IsExpandedOnce ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsExpandedOnce</Name>
                  <Signature>bool get_IsExpandedOnce ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsExpandedOnce</Name>
                  <Signature>void set_IsExpandedOnce (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsExpanded</Name>
                  <Signature>bool get_IsExpanded ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsExpanded</Name>
                  <Signature>bool get_IsExpanded ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsExpanded</Name>
                  <Signature>void set_IsExpanded (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsExpanded</Name>
                  <Signature>void set_IsExpanded (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AssignIsExpanded</Name>
                  <Signature>void AssignIsExpanded (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Parent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_Parent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Parent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_Parent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Level</Name>
                  <Signature>int32 get_Level ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Level</Name>
                  <Signature>int32 get_Level ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_NextNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_NextNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_NextNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_NextNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_BottomNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_BottomNode ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_NextVisibleNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_NextVisibleNode ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv b ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CanExpand</Name>
                  <Signature>bool get_CanExpand ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CanExpand</Name>
                  <Signature>bool get_CanExpand ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Tag</Name>
                  <Signature>object get_Tag ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Tag</Name>
                  <Signature>object get_Tag ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Nodes</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; get_Nodes ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Children</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.ReadOnlyCollection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; get_Children ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Children</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.ReadOnlyCollection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; get_Children ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RightBounds</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_RightBounds ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_RightBounds</Name>
                  <Signature>void set_RightBounds ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Height</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_Height ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; b ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Height</Name>
                  <Signature>void set_Height ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsExpandingNow</Name>
                  <Signature>bool get_IsExpandingNow ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool b ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsExpandingNow</Name>
                  <Signature>void set_IsExpandingNow (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx, object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeViewEx, object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Collapse</Name>
                  <Signature>void Collapse ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Collapse</Name>
                  <Signature>void Collapse ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CollapseAll</Name>
                  <Signature>void CollapseAll ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CollapseAll</Name>
                  <Signature>void CollapseAll ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Collapse</Name>
                  <Signature>void Collapse (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Collapse</Name>
                  <Signature>void Collapse (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Expand</Name>
                  <Signature>void Expand ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Expand</Name>
                  <Signature>void Expand ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExpandAll</Name>
                  <Signature>void ExpandAll ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ExpandAll</Name>
                  <Signature>void ExpandAll ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Expand</Name>
                  <Signature>void Expand (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Expand</Name>
                  <Signature>void Expand (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetIsExpanded</Name>
                  <Signature>void SetIsExpanded (bool, bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (bool, bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Runtime.Serialization.SerializationInfo, [mscorlib] System.Runtime.Serialization.StreamingContext)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Runtime.Serialization.SerializationInfo, [mscorlib] System.Runtime.Serialization.StreamingContext)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetObjectData</Name>
                  <Signature>void GetObjectData ([mscorlib] System.Runtime.Serialization.SerializationInfo, [mscorlib] System.Runtime.Serialization.StreamingContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetObjectData</Name>
                  <Signature>void GetObjectData ([mscorlib] System.Runtime.Serialization.SerializationInfo, [mscorlib] System.Runtime.Serialization.StreamingContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Tree</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Row</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Index</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Index</Name>
                  <Signature>int32 Index</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsSelected</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsSelected</Name>
                  <Signature>bool IsSelected</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsVisible</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsLeaf</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsLeaf</Name>
                  <Signature>bool IsLeaf</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsExpandedOnce</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsExpandedOnce</Name>
                  <Signature>bool IsExpandedOnce</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsExpanded</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsExpanded</Name>
                  <Signature>bool IsExpanded</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Parent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Original>
                <Obfuscated>
                  <Name>Parent</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv Parent</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Level</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Level</Name>
                  <Signature>int32 Level</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>NextNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Original>
                <Obfuscated>
                  <Name>NextNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv NextNode</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>BottomNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>NextVisibleNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CanExpand</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>CanExpand</Name>
                  <Signature>bool CanExpand</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Tag</Name>
                  <Signature>object</Signature>
                </Original>
                <Obfuscated>
                  <Name>Tag</Name>
                  <Signature>object Tag</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Nodes</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Children</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.ReadOnlyCollection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>Children</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.ReadOnlyCollection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; Children</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RightBounds</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Height</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsExpandingNow</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>NodeCollection</Name>
                <NewName>a</NewName>
                <Field>
                  <Original>
                    <Name>_owner</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>ClearItems</Name>
                    <Signature>void ClearItems ()</Signature>
                    <Accessibility>family</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>ClearItems</Name>
                    <Signature>void ClearItems ()</Signature>
                    <Accessibility>family</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>InsertItem</Name>
                    <Signature>void InsertItem (int32, TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                    <Accessibility>family</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>InsertItem</Name>
                    <Signature>void InsertItem (int32, TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                    <Accessibility>family</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>RemoveItem</Name>
                    <Signature>void RemoveItem (int32)</Signature>
                    <Accessibility>family</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>RemoveItem</Name>
                    <Signature>void RemoveItem (int32)</Signature>
                    <Accessibility>family</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>SetItem</Name>
                    <Signature>void SetItem (int32, TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                    <Accessibility>family</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>SetItem</Name>
                    <Signature>void SetItem (int32, TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                    <Accessibility>family</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs</Name>
              <NewName>TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs</NewName>
              <Field>
                <Original>
                  <Name>_node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_control</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_viewLocation</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_modifierKeys</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Keys</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Keys</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_handled</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_controlBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_Node ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_Node ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Node</Name>
                  <Signature>void set_Node (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Control</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl get_Control ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Control</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl get_Control ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Control</Name>
                  <Signature>void set_Control (TestAutomationFX.Controls.Tree.NodeControls.NodeControl)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.NodeControls.NodeControl)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ViewLocation</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_ViewLocation ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ViewLocation</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_ViewLocation ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ViewLocation</Name>
                  <Signature>void set_ViewLocation ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ModifierKeys</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Keys get_ModifierKeys ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ModifierKeys</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Keys get_ModifierKeys ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ModifierKeys</Name>
                  <Signature>void set_ModifierKeys ([System.Windows.Forms] System.Windows.Forms.Keys)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Windows.Forms] System.Windows.Forms.Keys)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Handled</Name>
                  <Signature>bool get_Handled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Handled</Name>
                  <Signature>bool get_Handled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Handled</Name>
                  <Signature>void set_Handled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Handled</Name>
                  <Signature>void set_Handled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ControlBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_ControlBounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ControlBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_ControlBounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ControlBounds</Name>
                  <Signature>void set_ControlBounds ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Original>
                <Obfuscated>
                  <Name>Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv Node</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Control</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                </Original>
                <Obfuscated>
                  <Name>Control</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl Control</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ViewLocation</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                </Original>
                <Obfuscated>
                  <Name>ViewLocation</Name>
                  <Signature>[System.Drawing] System.Drawing.Point ViewLocation</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ModifierKeys</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Keys</Signature>
                </Original>
                <Obfuscated>
                  <Name>ModifierKeys</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Keys ModifierKeys</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Handled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Handled</Name>
                  <Signature>bool Handled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ControlBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>ControlBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle ControlBounds</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.TreePath</Name>
              <NewName>TestAutomationFX.Controls.Tree.TreePath</NewName>
              <Field>
                <Original>
                  <Name>Empty</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreePath</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Empty</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreePath</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_path</Name>
                  <Signature>object[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_FullPath</Name>
                  <Signature>object[] get_FullPath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_FullPath</Name>
                  <Signature>object[] get_FullPath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LastNode</Name>
                  <Signature>object get_LastNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LastNode</Name>
                  <Signature>object get_LastNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_FirstNode</Name>
                  <Signature>object get_FirstNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_FirstNode</Name>
                  <Signature>object get_FirstNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsEmpty</Name>
                  <Signature>bool IsEmpty ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsEmpty</Name>
                  <Signature>bool IsEmpty ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>FullPath</Name>
                  <Signature>object[]</Signature>
                </Original>
                <Obfuscated>
                  <Name>FullPath</Name>
                  <Signature>object[] FullPath</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LastNode</Name>
                  <Signature>object</Signature>
                </Original>
                <Obfuscated>
                  <Name>LastNode</Name>
                  <Signature>object LastNode</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>FirstNode</Name>
                  <Signature>object</Signature>
                </Original>
                <Obfuscated>
                  <Name>FirstNode</Name>
                  <Signature>object FirstNode</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.TreeViewEx</Name>
              <NewName>TestAutomationFX.Controls.Tree.TreeViewEx</NewName>
              <Field>
                <Original>
                  <Name>LeftMargin</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ItemDragSensivity</Name>
                  <Signature>int32</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>DividerWidth</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>DividerCorrectionGap</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_columnHeaderHeight</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_linePen</Name>
                  <Signature>[System.Drawing] System.Drawing.Pen</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Pen</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_markPen</Name>
                  <Signature>[System.Drawing] System.Drawing.Pen</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Drawing] System.Drawing.Pen</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_suspendUpdate</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_needFullUpdate</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_fireSelectionEvent</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_plusMinus</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodePlusMinus</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>K</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_currentEditor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Control</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_currentEditorOwner</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.EditableControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.EditableControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_toolTip</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolTip</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolTip</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_measureContext</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DrawContext</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_hotColumn</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_search</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IncrementalSearch</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>z</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_expandingNodes</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_threadPool</Name>
                  <Signature>TestAutomationFX.Controls.Threading.AbortableThreadPool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Threading.AbortableThreadPool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ItemDrag</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ItemDragEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ItemDragEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>NodeMouseClick</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>NodeMouseDoubleClick</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ColumnWidthChanged</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ColumnReordered</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ColumnClicked</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SelectionChanged</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Collapsing</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Collapsed</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Expanding</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Expanded</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>GridLineStyleChanged</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_vScrollBar</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.VScrollBar</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.VScrollBar</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_hScrollBar</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.HScrollBar</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.HScrollBar</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_totalTime</Name>
                  <Signature>float64</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>float64</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_paintCount</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_tooltipColumn</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_hotNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_hotControl</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_dragAutoScrollFlag</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_dragBitmap</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Bitmap</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_dragTimer</Name>
                  <Signature>[mscorlib] System.Threading.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Threading.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_innerCursor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_rowLayout</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IRowLayout</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>x</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_dragMode</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_suspendSelectionEvent</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_rowMap</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_selectionStart</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_input</Name>
                  <Signature>TestAutomationFX.Controls.Tree.InputState</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>A</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_itemDragMode</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_itemDragStart</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_contentWidth</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_firstVisibleRow</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_offsetX</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_selection</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_displayDraggingNodes</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_fullRowSelect</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_useColumns</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_allowColumnReorder</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_showLines</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>l</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_showPlusMinus</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_showNodeToolTips</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>n</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_model</Name>
                  <Signature>TestAutomationFX.Controls.Tree.ITreeModel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.ITreeModel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Font</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_borderStyle</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.BorderStyle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.BorderStyle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_autoRowHeight</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>o</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_gridLineStyle</Name>
                  <Signature>TestAutomationFX.Controls.Tree.GridLineStyle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.GridLineStyle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_rowHeight</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_selectionMode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeSelectionMode</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeSelectionMode</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_hideSelection</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>p</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_topEdgeSensivity</Name>
                  <Signature>float32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>float32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_bottomEdgeSensivity</Name>
                  <Signature>float32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>float32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_loadOnDemand</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>q</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_indent</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_lineColor</Name>
                  <Signature>[System.Drawing] System.Drawing.Color</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Color</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_dragDropMarkColor</Name>
                  <Signature>[System.Drawing] System.Drawing.Color</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Drawing] System.Drawing.Color</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_dragDropMarkWidth</Name>
                  <Signature>float32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>float32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_highlightDropPosition</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>r</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_columns</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumnCollection</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>L</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_controls</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControlsCollection</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>I</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_asyncExpanding</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>s</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_defaultToolTipProvider</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IToolTipProvider</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IToolTipProvider</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_dropPosition</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DropPosition</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DropPosition</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_root</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_readonlySelection</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.ReadOnlyCollection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.ReadOnlyCollection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>_currentNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>add_ItemDrag</Name>
                  <Signature>void add_ItemDrag ([System.Windows.Forms] System.Windows.Forms.ItemDragEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_ItemDrag</Name>
                  <Signature>void add_ItemDrag ([System.Windows.Forms] System.Windows.Forms.ItemDragEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_ItemDrag</Name>
                  <Signature>void remove_ItemDrag ([System.Windows.Forms] System.Windows.Forms.ItemDragEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_ItemDrag</Name>
                  <Signature>void remove_ItemDrag ([System.Windows.Forms] System.Windows.Forms.ItemDragEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnItemDrag</Name>
                  <Signature>void OnItemDrag ([System.Windows.Forms] System.Windows.Forms.MouseButtons, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Windows.Forms] System.Windows.Forms.MouseButtons, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_NodeMouseClick</Name>
                  <Signature>void add_NodeMouseClick ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_NodeMouseClick</Name>
                  <Signature>void add_NodeMouseClick ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_NodeMouseClick</Name>
                  <Signature>void remove_NodeMouseClick ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_NodeMouseClick</Name>
                  <Signature>void remove_NodeMouseClick ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnNodeMouseClick</Name>
                  <Signature>void OnNodeMouseClick (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_NodeMouseDoubleClick</Name>
                  <Signature>void add_NodeMouseDoubleClick ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_NodeMouseDoubleClick</Name>
                  <Signature>void add_NodeMouseDoubleClick ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_NodeMouseDoubleClick</Name>
                  <Signature>void remove_NodeMouseDoubleClick ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_NodeMouseDoubleClick</Name>
                  <Signature>void remove_NodeMouseDoubleClick ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnNodeMouseDoubleClick</Name>
                  <Signature>void OnNodeMouseDoubleClick (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_ColumnWidthChanged</Name>
                  <Signature>void add_ColumnWidthChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_ColumnWidthChanged</Name>
                  <Signature>void add_ColumnWidthChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_ColumnWidthChanged</Name>
                  <Signature>void remove_ColumnWidthChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_ColumnWidthChanged</Name>
                  <Signature>void remove_ColumnWidthChanged ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnColumnWidthChanged</Name>
                  <Signature>void OnColumnWidthChanged (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_ColumnReordered</Name>
                  <Signature>void add_ColumnReordered ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_ColumnReordered</Name>
                  <Signature>void add_ColumnReordered ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_ColumnReordered</Name>
                  <Signature>void remove_ColumnReordered ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_ColumnReordered</Name>
                  <Signature>void remove_ColumnReordered ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnColumnReordered</Name>
                  <Signature>void OnColumnReordered (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_ColumnClicked</Name>
                  <Signature>void add_ColumnClicked ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_ColumnClicked</Name>
                  <Signature>void add_ColumnClicked ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_ColumnClicked</Name>
                  <Signature>void remove_ColumnClicked ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_ColumnClicked</Name>
                  <Signature>void remove_ColumnClicked ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeColumnEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnColumnClicked</Name>
                  <Signature>void OnColumnClicked (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_SelectionChanged</Name>
                  <Signature>void add_SelectionChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_SelectionChanged</Name>
                  <Signature>void add_SelectionChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_SelectionChanged</Name>
                  <Signature>void remove_SelectionChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_SelectionChanged</Name>
                  <Signature>void remove_SelectionChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnSelectionChanged</Name>
                  <Signature>void OnSelectionChanged ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_Collapsing</Name>
                  <Signature>void add_Collapsing ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_Collapsing</Name>
                  <Signature>void add_Collapsing ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_Collapsing</Name>
                  <Signature>void remove_Collapsing ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_Collapsing</Name>
                  <Signature>void remove_Collapsing ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCollapsing</Name>
                  <Signature>void OnCollapsing (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_Collapsed</Name>
                  <Signature>void add_Collapsed ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_Collapsed</Name>
                  <Signature>void add_Collapsed ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_Collapsed</Name>
                  <Signature>void remove_Collapsed ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_Collapsed</Name>
                  <Signature>void remove_Collapsed ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCollapsed</Name>
                  <Signature>void OnCollapsed (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_Expanding</Name>
                  <Signature>void add_Expanding ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_Expanding</Name>
                  <Signature>void add_Expanding ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_Expanding</Name>
                  <Signature>void remove_Expanding ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_Expanding</Name>
                  <Signature>void remove_Expanding ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnExpanding</Name>
                  <Signature>void OnExpanding (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_Expanded</Name>
                  <Signature>void add_Expanded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_Expanded</Name>
                  <Signature>void add_Expanded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_Expanded</Name>
                  <Signature>void remove_Expanded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_Expanded</Name>
                  <Signature>void remove_Expanded ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnExpanded</Name>
                  <Signature>void OnExpanded (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_GridLineStyleChanged</Name>
                  <Signature>void add_GridLineStyleChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_GridLineStyleChanged</Name>
                  <Signature>void add_GridLineStyleChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_GridLineStyleChanged</Name>
                  <Signature>void remove_GridLineStyleChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_GridLineStyleChanged</Name>
                  <Signature>void remove_GridLineStyleChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnGridLineStyleChanged</Name>
                  <Signature>void OnGridLineStyleChanged ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExpandingIconChanged</Name>
                  <Signature>void ExpandingIconChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DrawIcons</Name>
                  <Signature>void DrawIcons ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPath</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreePath GetPath (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetPath</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreePath GetPath (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetNodeAt</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv GetNodeAt ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetNodeAt</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv GetNodeAt ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetNodeControlInfoAt</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo GetNodeControlInfoAt ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetNodeControlInfoAt</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo GetNodeControlInfoAt ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetNodeControlInfoAt</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo GetNodeControlInfoAt (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo a (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BeginUpdate</Name>
                  <Signature>void BeginUpdate ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>BeginUpdate</Name>
                  <Signature>void BeginUpdate ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EndUpdate</Name>
                  <Signature>void EndUpdate ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>EndUpdate</Name>
                  <Signature>void EndUpdate ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ExpandAll</Name>
                  <Signature>void ExpandAll ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ExpandAll</Name>
                  <Signature>void ExpandAll ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CollapseAll</Name>
                  <Signature>void CollapseAll ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CollapseAll</Name>
                  <Signature>void CollapseAll ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EnsureVisible</Name>
                  <Signature>void EnsureVisible (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>EnsureVisible</Name>
                  <Signature>void EnsureVisible (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ScrollTo</Name>
                  <Signature>void ScrollTo (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ScrollTo</Name>
                  <Signature>void ScrollTo (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearSelection</Name>
                  <Signature>void ClearSelection ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ClearSelection</Name>
                  <Signature>void ClearSelection ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearSelectionInternal</Name>
                  <Signature>void ClearSelectionInternal ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnSizeChanged</Name>
                  <Signature>void OnSizeChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnSizeChanged</Name>
                  <Signature>void OnSizeChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ArrangeControls</Name>
                  <Signature>void ArrangeControls ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SafeUpdateScrollBars</Name>
                  <Signature>void SafeUpdateScrollBars ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateScrollBars</Name>
                  <Signature>void UpdateScrollBars ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>void g ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateHScrollBar</Name>
                  <Signature>void UpdateHScrollBar ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>void h ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateVScrollBar</Name>
                  <Signature>void UpdateVScrollBar ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>void i ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CreateParams</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CreateParams get_CreateParams ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CreateParams</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CreateParams get_CreateParams ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnGotFocus</Name>
                  <Signature>void OnGotFocus ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnGotFocus</Name>
                  <Signature>void OnGotFocus ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnLeave</Name>
                  <Signature>void OnLeave ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnLeave</Name>
                  <Signature>void OnLeave ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnFontChanged</Name>
                  <Signature>void OnFontChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnFontChanged</Name>
                  <Signature>void OnFontChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetNodeControls</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.Tree.NodeControlInfo &gt; GetNodeControls (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.Tree.NodeControlInfo &gt; e (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetNodeControls</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.Tree.NodeControlInfo &gt; GetNodeControls (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.Tree.NodeControlInfo &gt; a (TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dist</Name>
                  <Signature>static float64 Dist ([System.Drawing] System.Drawing.Point, [System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static float64 a ([System.Drawing] System.Drawing.Point, [System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FullUpdate</Name>
                  <Signature>void FullUpdate ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FullUpdate</Name>
                  <Signature>void FullUpdate ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UnsafeFullUpdate</Name>
                  <Signature>void UnsafeFullUpdate ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>void j ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateView</Name>
                  <Signature>void UpdateView ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>void k ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateHeaders</Name>
                  <Signature>void UpdateHeaders ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>l</Name>
                  <Signature>void l ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateColumns</Name>
                  <Signature>void UpdateColumns ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m</Name>
                  <Signature>void m ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateNodes</Name>
                  <Signature>void CreateNodes ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>n</Name>
                  <Signature>void n ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReadChilds</Name>
                  <Signature>void ReadChilds (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReadChilds</Name>
                  <Signature>void ReadChilds (TestAutomationFX.Controls.Tree.TreeNodeAdv, bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.TreeNodeAdv, bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddNewNode</Name>
                  <Signature>void AddNewNode (TestAutomationFX.Controls.Tree.TreeNodeAdv, object, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.TreeNodeAdv, object, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddNode</Name>
                  <Signature>void AddNode (TestAutomationFX.Controls.Tree.TreeNodeAdv, int32, TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.TreeNodeAdv, int32, TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AbortBackgroundExpandingThreads</Name>
                  <Signature>void AbortBackgroundExpandingThreads ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AbortBackgroundExpandingThreads</Name>
                  <Signature>void AbortBackgroundExpandingThreads ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetIsExpanded</Name>
                  <Signature>void SetIsExpanded (TestAutomationFX.Controls.Tree.TreeNodeAdv, bool, bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.TreeNodeAdv, bool, bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetIsExpanded</Name>
                  <Signature>void SetIsExpanded (TestAutomationFX.Controls.Tree.TreeViewEx/ExpandArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.TreeViewEx/a)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetIsExpanded</Name>
                  <Signature>void SetIsExpanded (TestAutomationFX.Controls.Tree.TreeNodeAdv, bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (TestAutomationFX.Controls.Tree.TreeNodeAdv, bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RemoveExpandingNode</Name>
                  <Signature>void RemoveExpandingNode (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>void g (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddExpandingNode</Name>
                  <Signature>void AddExpandingNode (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>void h (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetIsExpandedRecursive</Name>
                  <Signature>void SetIsExpandedRecursive (TestAutomationFX.Controls.Tree.TreeNodeAdv, bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (TestAutomationFX.Controls.Tree.TreeNodeAdv, bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateRowMap</Name>
                  <Signature>void CreateRowMap ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>o</Name>
                  <Signature>void o ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetNodeWidth</Name>
                  <Signature>int32 GetNodeWidth (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>int32 i (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetNodeBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle GetNodeBounds (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle j (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetNodeBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle GetNodeBounds ([mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.Tree.NodeControlInfo &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle a ([mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.Tree.NodeControlInfo &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>_vScrollBar_ValueChanged</Name>
                  <Signature>void _vScrollBar_ValueChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>_hScrollBar_ValueChanged</Name>
                  <Signature>void _hScrollBar_ValueChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SmartFullUpdate</Name>
                  <Signature>void SmartFullUpdate ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>p</Name>
                  <Signature>void p ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMyNode</Name>
                  <Signature>bool IsMyNode (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>bool k (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateSelection</Name>
                  <Signature>void UpdateSelection ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>q</Name>
                  <Signature>void q ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ChangeColumnWidth</Name>
                  <Signature>void ChangeColumnWidth (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv FindNode (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv FindNode (TestAutomationFX.Controls.Tree.TreePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv FindNode (TestAutomationFX.Controls.Tree.TreePath, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv FindNode (TestAutomationFX.Controls.Tree.TreePath, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv FindNode (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.TreePath, int32, bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv a (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.TreePath, int32, bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindNodeByTag</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv FindNodeByTag (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindNodeByTag</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv FindNodeByTag (object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindNodeByTag</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv FindNodeByTag (TestAutomationFX.Controls.Tree.TreeNodeAdv, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv a (TestAutomationFX.Controls.Tree.TreeNodeAdv, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DisplayEditor</Name>
                  <Signature>void DisplayEditor ([System.Windows.Forms] System.Windows.Forms.Control, TestAutomationFX.Controls.Tree.NodeControls.EditableControl)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DisplayEditor</Name>
                  <Signature>void DisplayEditor ([System.Windows.Forms] System.Windows.Forms.Control, TestAutomationFX.Controls.Tree.NodeControls.EditableControl)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateEditorBounds</Name>
                  <Signature>void UpdateEditorBounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>UpdateEditorBounds</Name>
                  <Signature>void UpdateEditorBounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HideEditor</Name>
                  <Signature>void HideEditor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>HideEditor</Name>
                  <Signature>void HideEditor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetEditorBounds</Name>
                  <Signature>void SetEditorBounds (TestAutomationFX.Controls.Tree.EditorContext)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.EditorContext)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetColumnBounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle GetColumnBounds (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle a (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BindModelEvents</Name>
                  <Signature>void BindModelEvents ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>r</Name>
                  <Signature>void r ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UnbindModelEvents</Name>
                  <Signature>void UnbindModelEvents ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>s</Name>
                  <Signature>void s ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>_model_StructureChanged</Name>
                  <Signature>void _model_StructureChanged (object, TestAutomationFX.Controls.Tree.TreePathEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, TestAutomationFX.Controls.Tree.TreePathEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>_model_NodesRemoved</Name>
                  <Signature>void _model_NodesRemoved (object, TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>_model_NodesInserted</Name>
                  <Signature>void _model_NodesInserted (object, TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>_model_NodesChanged</Name>
                  <Signature>void _model_NodesChanged (object, TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (object, TestAutomationFX.Controls.Tree.TreeModelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearNodesSize</Name>
                  <Signature>void ClearNodesSize (TestAutomationFX.Controls.Tree.TreeModelEventArgs, TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Controls.Tree.TreeModelEventArgs, TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>t</Name>
                  <Signature>void t ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreatePens</Name>
                  <Signature>void CreatePens ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>u</Name>
                  <Signature>void u ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateMarkPen</Name>
                  <Signature>void CreateMarkPen ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>v</Name>
                  <Signature>void v ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateLinePen</Name>
                  <Signature>void CreateLinePen ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>w</Name>
                  <Signature>void w ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnPaint</Name>
                  <Signature>void OnPaint ([System.Windows.Forms] System.Windows.Forms.PaintEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnPaint</Name>
                  <Signature>void OnPaint ([System.Windows.Forms] System.Windows.Forms.PaintEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DrawRow</Name>
                  <Signature>void DrawRow ([System.Windows.Forms] System.Windows.Forms.PaintEventArgs, [out] TestAutomationFX.Controls.Tree.DrawContext&amp;, int32, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Windows.Forms] System.Windows.Forms.PaintEventArgs, [out] TestAutomationFX.Controls.Tree.DrawContext&amp;, int32, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DrawVerticalGridLines</Name>
                  <Signature>void DrawVerticalGridLines ([System.Drawing] System.Drawing.Graphics, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Drawing] System.Drawing.Graphics, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DrawColumnHeaders</Name>
                  <Signature>void DrawColumnHeaders ([System.Drawing] System.Drawing.Graphics)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Drawing] System.Drawing.Graphics)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DrawNode</Name>
                  <Signature>void DrawNode (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DrawNode</Name>
                  <Signature>void DrawNode (TestAutomationFX.Controls.Tree.TreeNodeAdv, TestAutomationFX.Controls.Tree.DrawContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DrawScrollBarsBox</Name>
                  <Signature>void DrawScrollBarsBox ([System.Drawing] System.Drawing.Graphics)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ([System.Drawing] System.Drawing.Graphics)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DrawDropMark</Name>
                  <Signature>void DrawDropMark ([System.Drawing] System.Drawing.Graphics)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ([System.Drawing] System.Drawing.Graphics)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DrawLines</Name>
                  <Signature>void DrawLines ([System.Drawing] System.Drawing.Graphics, TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Drawing] System.Drawing.Graphics, TestAutomationFX.Controls.Tree.TreeNodeAdv, [System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BeginPerformanceCount</Name>
                  <Signature>void BeginPerformanceCount ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>x</Name>
                  <Signature>void x ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EndPerformanceCount</Name>
                  <Signature>void EndPerformanceCount ([System.Windows.Forms] System.Windows.Forms.PaintEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Windows.Forms] System.Windows.Forms.PaintEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsInputChar</Name>
                  <Signature>bool IsInputChar (char)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsInputChar</Name>
                  <Signature>bool IsInputChar (char)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsInputKey</Name>
                  <Signature>bool IsInputKey ([System.Windows.Forms] System.Windows.Forms.Keys)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsInputKey</Name>
                  <Signature>bool IsInputKey ([System.Windows.Forms] System.Windows.Forms.Keys)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ChangeInput</Name>
                  <Signature>void ChangeInput ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>y</Name>
                  <Signature>void y ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnKeyDown</Name>
                  <Signature>void OnKeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnKeyDown</Name>
                  <Signature>void OnKeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnKeyUp</Name>
                  <Signature>void OnKeyUp ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnKeyUp</Name>
                  <Signature>void OnKeyUp ([System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnKeyPress</Name>
                  <Signature>void OnKeyPress ([System.Windows.Forms] System.Windows.Forms.KeyPressEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnKeyPress</Name>
                  <Signature>void OnKeyPress ([System.Windows.Forms] System.Windows.Forms.KeyPressEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateMouseArgs</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs CreateMouseArgs ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs a ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnMouseWheel</Name>
                  <Signature>void OnMouseWheel ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnMouseWheel</Name>
                  <Signature>void OnMouseWheel ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnMouseDown</Name>
                  <Signature>void OnMouseDown ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnMouseDown</Name>
                  <Signature>void OnMouseDown ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnMouseClick</Name>
                  <Signature>void OnMouseClick ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnMouseClick</Name>
                  <Signature>void OnMouseClick ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnMouseDoubleClick</Name>
                  <Signature>void OnMouseDoubleClick ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnMouseDoubleClick</Name>
                  <Signature>void OnMouseDoubleClick ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnMouseUp</Name>
                  <Signature>void OnMouseUp ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnMouseUp</Name>
                  <Signature>void OnMouseUp ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnMouseMove</Name>
                  <Signature>void OnMouseMove ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnMouseMove</Name>
                  <Signature>void OnMouseMove ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnMouseLeave</Name>
                  <Signature>void OnMouseLeave ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnMouseLeave</Name>
                  <Signature>void OnMouseLeave ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetCursor</Name>
                  <Signature>void SetCursor ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetColumnAt</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn GetColumnAt ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn a ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetColumnX</Name>
                  <Signature>int32 GetColumnX (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>int32 e (TestAutomationFX.Controls.Tree.TreeColumn)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetColumnDividerAt</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn GetColumnDividerAt ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeColumn b ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateToolTip</Name>
                  <Signature>void UpdateToolTip ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DisplayNodesTooltip</Name>
                  <Signature>void DisplayNodesTooltip ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ([System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetTooltip</Name>
                  <Signature>void SetTooltip (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetNodeToolTip</Name>
                  <Signature>string GetNodeToolTip (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string c (TestAutomationFX.Controls.Tree.TreeNodeAdvMouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StartDragTimer</Name>
                  <Signature>void StartDragTimer ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>z</Name>
                  <Signature>void z ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StopDragTimer</Name>
                  <Signature>void StopDragTimer ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>A</Name>
                  <Signature>void A ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetDropPosition</Name>
                  <Signature>void SetDropPosition ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DragTimerTick</Name>
                  <Signature>void DragTimerTick (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DragAutoScroll</Name>
                  <Signature>void DragAutoScroll ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>B</Name>
                  <Signature>void B ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoDragDropSelectedNodes</Name>
                  <Signature>void DoDragDropSelectedNodes ([System.Windows.Forms] System.Windows.Forms.DragDropEffects)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoDragDropSelectedNodes</Name>
                  <Signature>void DoDragDropSelectedNodes ([System.Windows.Forms] System.Windows.Forms.DragDropEffects)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateDragBitmap</Name>
                  <Signature>void CreateDragBitmap ([System.Windows.Forms] System.Windows.Forms.IDataObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Windows.Forms] System.Windows.Forms.IDataObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnDragOver</Name>
                  <Signature>void OnDragOver ([System.Windows.Forms] System.Windows.Forms.DragEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnDragOver</Name>
                  <Signature>void OnDragOver ([System.Windows.Forms] System.Windows.Forms.DragEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnDragEnter</Name>
                  <Signature>void OnDragEnter ([System.Windows.Forms] System.Windows.Forms.DragEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnDragEnter</Name>
                  <Signature>void OnDragEnter ([System.Windows.Forms] System.Windows.Forms.DragEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnDragLeave</Name>
                  <Signature>void OnDragLeave ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnDragLeave</Name>
                  <Signature>void OnDragLeave ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnDragDrop</Name>
                  <Signature>void OnDragDrop ([System.Windows.Forms] System.Windows.Forms.DragEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnDragDrop</Name>
                  <Signature>void OnDragDrop ([System.Windows.Forms] System.Windows.Forms.DragEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Cursor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor get_Cursor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Cursor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor get_Cursor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Cursor</Name>
                  <Signature>void set_Cursor ([System.Windows.Forms] System.Windows.Forms.Cursor)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Cursor</Name>
                  <Signature>void set_Cursor ([System.Windows.Forms] System.Windows.Forms.Cursor)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DragMode</Name>
                  <Signature>bool get_DragMode ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>C</Name>
                  <Signature>bool C ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_DragMode</Name>
                  <Signature>void set_DragMode (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ColumnHeaderHeight</Name>
                  <Signature>int32 get_ColumnHeaderHeight ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>D</Name>
                  <Signature>int32 D ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_VisibleNodes</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; get_VisibleNodes ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>E</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; E ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SuspendSelectionEvent</Name>
                  <Signature>bool get_SuspendSelectionEvent ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>F</Name>
                  <Signature>bool F ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_SuspendSelectionEvent</Name>
                  <Signature>void set_SuspendSelectionEvent (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RowMap</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; get_RowMap ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>G</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; G ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SelectionStart</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_SelectionStart ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>H</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv H ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_SelectionStart</Name>
                  <Signature>void set_SelectionStart (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>l</Name>
                  <Signature>void l (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Input</Name>
                  <Signature>TestAutomationFX.Controls.Tree.InputState get_Input ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>I</Name>
                  <Signature>A I ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Input</Name>
                  <Signature>void set_Input (TestAutomationFX.Controls.Tree.InputState)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (A)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ItemDragMode</Name>
                  <Signature>bool get_ItemDragMode ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>J</Name>
                  <Signature>bool J ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ItemDragMode</Name>
                  <Signature>void set_ItemDragMode (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ItemDragStart</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_ItemDragStart ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>K</Name>
                  <Signature>[System.Drawing] System.Drawing.Point K ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ItemDragStart</Name>
                  <Signature>void set_ItemDragStart ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CurrentPageSize</Name>
                  <Signature>int32 get_CurrentPageSize ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>L</Name>
                  <Signature>int32 L ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RowCount</Name>
                  <Signature>int32 get_RowCount ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>M</Name>
                  <Signature>int32 M ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ContentWidth</Name>
                  <Signature>int32 get_ContentWidth ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>N</Name>
                  <Signature>int32 N ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_FirstVisibleRow</Name>
                  <Signature>int32 get_FirstVisibleRow ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>O</Name>
                  <Signature>int32 O ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_FirstVisibleRow</Name>
                  <Signature>void set_FirstVisibleRow (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_OffsetX</Name>
                  <Signature>int32 get_OffsetX ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>P</Name>
                  <Signature>int32 P ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_OffsetX</Name>
                  <Signature>void set_OffsetX (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DisplayRectangle</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_DisplayRectangle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DisplayRectangle</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_DisplayRectangle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Selection</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; get_Selection ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Q</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; Q ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DisplayDraggingNodes</Name>
                  <Signature>bool get_DisplayDraggingNodes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DisplayDraggingNodes</Name>
                  <Signature>bool get_DisplayDraggingNodes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_DisplayDraggingNodes</Name>
                  <Signature>void set_DisplayDraggingNodes (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_DisplayDraggingNodes</Name>
                  <Signature>void set_DisplayDraggingNodes (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_FullRowSelect</Name>
                  <Signature>bool get_FullRowSelect ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_FullRowSelect</Name>
                  <Signature>bool get_FullRowSelect ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_FullRowSelect</Name>
                  <Signature>void set_FullRowSelect (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_FullRowSelect</Name>
                  <Signature>void set_FullRowSelect (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UseColumns</Name>
                  <Signature>bool get_UseColumns ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UseColumns</Name>
                  <Signature>bool get_UseColumns ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UseColumns</Name>
                  <Signature>void set_UseColumns (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UseColumns</Name>
                  <Signature>void set_UseColumns (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AllowColumnReorder</Name>
                  <Signature>bool get_AllowColumnReorder ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AllowColumnReorder</Name>
                  <Signature>bool get_AllowColumnReorder ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AllowColumnReorder</Name>
                  <Signature>void set_AllowColumnReorder (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AllowColumnReorder</Name>
                  <Signature>void set_AllowColumnReorder (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ShowLines</Name>
                  <Signature>bool get_ShowLines ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ShowLines</Name>
                  <Signature>bool get_ShowLines ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ShowLines</Name>
                  <Signature>void set_ShowLines (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ShowLines</Name>
                  <Signature>void set_ShowLines (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ShowPlusMinus</Name>
                  <Signature>bool get_ShowPlusMinus ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ShowPlusMinus</Name>
                  <Signature>bool get_ShowPlusMinus ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ShowPlusMinus</Name>
                  <Signature>void set_ShowPlusMinus (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ShowPlusMinus</Name>
                  <Signature>void set_ShowPlusMinus (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ShowNodeToolTips</Name>
                  <Signature>bool get_ShowNodeToolTips ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ShowNodeToolTips</Name>
                  <Signature>bool get_ShowNodeToolTips ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ShowNodeToolTips</Name>
                  <Signature>void set_ShowNodeToolTips (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ShowNodeToolTips</Name>
                  <Signature>void set_ShowNodeToolTips (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_KeepNodesExpanded</Name>
                  <Signature>bool get_KeepNodesExpanded ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_KeepNodesExpanded</Name>
                  <Signature>bool get_KeepNodesExpanded ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_KeepNodesExpanded</Name>
                  <Signature>void set_KeepNodesExpanded (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_KeepNodesExpanded</Name>
                  <Signature>void set_KeepNodesExpanded (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Model</Name>
                  <Signature>TestAutomationFX.Controls.Tree.ITreeModel get_Model ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Model</Name>
                  <Signature>TestAutomationFX.Controls.Tree.ITreeModel get_Model ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Model</Name>
                  <Signature>void set_Model (TestAutomationFX.Controls.Tree.ITreeModel)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Model</Name>
                  <Signature>void set_Model (TestAutomationFX.Controls.Tree.ITreeModel)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font get_Font ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font get_Font ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Font</Name>
                  <Signature>void set_Font ([System.Drawing] System.Drawing.Font)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Font</Name>
                  <Signature>void set_Font ([System.Drawing] System.Drawing.Font)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ResetFont</Name>
                  <Signature>void ResetFont ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ResetFont</Name>
                  <Signature>void ResetFont ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShouldSerializeFont</Name>
                  <Signature>bool ShouldSerializeFont ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>R</Name>
                  <Signature>bool R ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_BorderStyle</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.BorderStyle get_BorderStyle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_BorderStyle</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.BorderStyle get_BorderStyle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_BorderStyle</Name>
                  <Signature>void set_BorderStyle ([System.Windows.Forms] System.Windows.Forms.BorderStyle)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_BorderStyle</Name>
                  <Signature>void set_BorderStyle ([System.Windows.Forms] System.Windows.Forms.BorderStyle)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutoRowHeight</Name>
                  <Signature>bool get_AutoRowHeight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutoRowHeight</Name>
                  <Signature>bool get_AutoRowHeight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AutoRowHeight</Name>
                  <Signature>void set_AutoRowHeight (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AutoRowHeight</Name>
                  <Signature>void set_AutoRowHeight (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_GridLineStyle</Name>
                  <Signature>TestAutomationFX.Controls.Tree.GridLineStyle get_GridLineStyle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_GridLineStyle</Name>
                  <Signature>TestAutomationFX.Controls.Tree.GridLineStyle get_GridLineStyle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_GridLineStyle</Name>
                  <Signature>void set_GridLineStyle (TestAutomationFX.Controls.Tree.GridLineStyle)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_GridLineStyle</Name>
                  <Signature>void set_GridLineStyle (TestAutomationFX.Controls.Tree.GridLineStyle)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RowHeight</Name>
                  <Signature>int32 get_RowHeight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RowHeight</Name>
                  <Signature>int32 get_RowHeight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_RowHeight</Name>
                  <Signature>void set_RowHeight (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_RowHeight</Name>
                  <Signature>void set_RowHeight (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SelectionMode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeSelectionMode get_SelectionMode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SelectionMode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeSelectionMode get_SelectionMode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_SelectionMode</Name>
                  <Signature>void set_SelectionMode (TestAutomationFX.Controls.Tree.TreeSelectionMode)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_SelectionMode</Name>
                  <Signature>void set_SelectionMode (TestAutomationFX.Controls.Tree.TreeSelectionMode)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_HideSelection</Name>
                  <Signature>bool get_HideSelection ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_HideSelection</Name>
                  <Signature>bool get_HideSelection ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_HideSelection</Name>
                  <Signature>void set_HideSelection (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_HideSelection</Name>
                  <Signature>void set_HideSelection (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TopEdgeSensivity</Name>
                  <Signature>float32 get_TopEdgeSensivity ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TopEdgeSensivity</Name>
                  <Signature>float32 get_TopEdgeSensivity ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TopEdgeSensivity</Name>
                  <Signature>void set_TopEdgeSensivity (float32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TopEdgeSensivity</Name>
                  <Signature>void set_TopEdgeSensivity (float32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_BottomEdgeSensivity</Name>
                  <Signature>float32 get_BottomEdgeSensivity ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_BottomEdgeSensivity</Name>
                  <Signature>float32 get_BottomEdgeSensivity ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_BottomEdgeSensivity</Name>
                  <Signature>void set_BottomEdgeSensivity (float32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_BottomEdgeSensivity</Name>
                  <Signature>void set_BottomEdgeSensivity (float32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LoadOnDemand</Name>
                  <Signature>bool get_LoadOnDemand ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LoadOnDemand</Name>
                  <Signature>bool get_LoadOnDemand ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LoadOnDemand</Name>
                  <Signature>void set_LoadOnDemand (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_LoadOnDemand</Name>
                  <Signature>void set_LoadOnDemand (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Indent</Name>
                  <Signature>int32 get_Indent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Indent</Name>
                  <Signature>int32 get_Indent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Indent</Name>
                  <Signature>void set_Indent (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Indent</Name>
                  <Signature>void set_Indent (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LineColor</Name>
                  <Signature>[System.Drawing] System.Drawing.Color get_LineColor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LineColor</Name>
                  <Signature>[System.Drawing] System.Drawing.Color get_LineColor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_LineColor</Name>
                  <Signature>void set_LineColor ([System.Drawing] System.Drawing.Color)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_LineColor</Name>
                  <Signature>void set_LineColor ([System.Drawing] System.Drawing.Color)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DragDropMarkColor</Name>
                  <Signature>[System.Drawing] System.Drawing.Color get_DragDropMarkColor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DragDropMarkColor</Name>
                  <Signature>[System.Drawing] System.Drawing.Color get_DragDropMarkColor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_DragDropMarkColor</Name>
                  <Signature>void set_DragDropMarkColor ([System.Drawing] System.Drawing.Color)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_DragDropMarkColor</Name>
                  <Signature>void set_DragDropMarkColor ([System.Drawing] System.Drawing.Color)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DragDropMarkWidth</Name>
                  <Signature>float32 get_DragDropMarkWidth ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DragDropMarkWidth</Name>
                  <Signature>float32 get_DragDropMarkWidth ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_DragDropMarkWidth</Name>
                  <Signature>void set_DragDropMarkWidth (float32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_DragDropMarkWidth</Name>
                  <Signature>void set_DragDropMarkWidth (float32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_HighlightDropPosition</Name>
                  <Signature>bool get_HighlightDropPosition ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_HighlightDropPosition</Name>
                  <Signature>bool get_HighlightDropPosition ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_HighlightDropPosition</Name>
                  <Signature>void set_HighlightDropPosition (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_HighlightDropPosition</Name>
                  <Signature>void set_HighlightDropPosition (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Columns</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.TreeColumn &gt; get_Columns ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Columns</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.TreeColumn &gt; get_Columns ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_NodeControls</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControl &gt; get_NodeControls ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_NodeControls</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControl &gt; get_NodeControls ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AsyncExpanding</Name>
                  <Signature>bool get_AsyncExpanding ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AsyncExpanding</Name>
                  <Signature>bool get_AsyncExpanding ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AsyncExpanding</Name>
                  <Signature>void set_AsyncExpanding (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AsyncExpanding</Name>
                  <Signature>void set_AsyncExpanding (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DefaultToolTipProvider</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IToolTipProvider get_DefaultToolTipProvider ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DefaultToolTipProvider</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IToolTipProvider get_DefaultToolTipProvider ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_DefaultToolTipProvider</Name>
                  <Signature>void set_DefaultToolTipProvider (TestAutomationFX.Controls.Tree.IToolTipProvider)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_DefaultToolTipProvider</Name>
                  <Signature>void set_DefaultToolTipProvider (TestAutomationFX.Controls.Tree.IToolTipProvider)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AllNodes</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; get_AllNodes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AllNodes</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; get_AllNodes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DropPosition</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DropPosition get_DropPosition ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DropPosition</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DropPosition get_DropPosition ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_DropPosition</Name>
                  <Signature>void set_DropPosition (TestAutomationFX.Controls.Tree.DropPosition)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_DropPosition</Name>
                  <Signature>void set_DropPosition (TestAutomationFX.Controls.Tree.DropPosition)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Root</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_Root ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Root</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_Root ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SelectedNodes</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.ReadOnlyCollection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; get_SelectedNodes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SelectedNodes</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.ReadOnlyCollection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; get_SelectedNodes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SelectedNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_SelectedNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SelectedNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_SelectedNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_SelectedNode</Name>
                  <Signature>void set_SelectedNode (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_SelectedNode</Name>
                  <Signature>void set_SelectedNode (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CurrentNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_CurrentNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CurrentNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_CurrentNode ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CurrentNode</Name>
                  <Signature>void set_CurrentNode (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m</Name>
                  <Signature>void m (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ItemCount</Name>
                  <Signature>int32 get_ItemCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ItemCount</Name>
                  <Signature>int32 get_ItemCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>&lt;SetIsExpanded&gt;b__1b</Name>
                  <Signature>void &lt;SetIsExpanded&gt;b__1b (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>CreateParams</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CreateParams</Signature>
                </Original>
                <Obfuscated>
                  <Name>CreateParams</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CreateParams CreateParams</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Cursor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor</Signature>
                </Original>
                <Obfuscated>
                  <Name>Cursor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor Cursor</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DragMode</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ColumnHeaderHeight</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>VisibleNodes</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SuspendSelectionEvent</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RowMap</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SelectionStart</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Input</Name>
                  <Signature>TestAutomationFX.Controls.Tree.InputState</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Controls.Tree.InputState</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ItemDragMode</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ItemDragStart</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CurrentPageSize</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RowCount</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ContentWidth</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>FirstVisibleRow</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>OffsetX</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DisplayRectangle</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>DisplayRectangle</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle DisplayRectangle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Selection</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DisplayDraggingNodes</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>DisplayDraggingNodes</Name>
                  <Signature>bool DisplayDraggingNodes</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>FullRowSelect</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>FullRowSelect</Name>
                  <Signature>bool FullRowSelect</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UseColumns</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>UseColumns</Name>
                  <Signature>bool UseColumns</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AllowColumnReorder</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>AllowColumnReorder</Name>
                  <Signature>bool AllowColumnReorder</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ShowLines</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ShowLines</Name>
                  <Signature>bool ShowLines</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ShowPlusMinus</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ShowPlusMinus</Name>
                  <Signature>bool ShowPlusMinus</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ShowNodeToolTips</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ShowNodeToolTips</Name>
                  <Signature>bool ShowNodeToolTips</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>KeepNodesExpanded</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>KeepNodesExpanded</Name>
                  <Signature>bool KeepNodesExpanded</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Model</Name>
                  <Signature>TestAutomationFX.Controls.Tree.ITreeModel</Signature>
                </Original>
                <Obfuscated>
                  <Name>Model</Name>
                  <Signature>TestAutomationFX.Controls.Tree.ITreeModel Model</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font</Signature>
                </Original>
                <Obfuscated>
                  <Name>Font</Name>
                  <Signature>[System.Drawing] System.Drawing.Font Font</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>BorderStyle</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.BorderStyle</Signature>
                </Original>
                <Obfuscated>
                  <Name>BorderStyle</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.BorderStyle BorderStyle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutoRowHeight</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutoRowHeight</Name>
                  <Signature>bool AutoRowHeight</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>GridLineStyle</Name>
                  <Signature>TestAutomationFX.Controls.Tree.GridLineStyle</Signature>
                </Original>
                <Obfuscated>
                  <Name>GridLineStyle</Name>
                  <Signature>TestAutomationFX.Controls.Tree.GridLineStyle GridLineStyle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RowHeight</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>RowHeight</Name>
                  <Signature>int32 RowHeight</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SelectionMode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeSelectionMode</Signature>
                </Original>
                <Obfuscated>
                  <Name>SelectionMode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeSelectionMode SelectionMode</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>HideSelection</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>HideSelection</Name>
                  <Signature>bool HideSelection</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TopEdgeSensivity</Name>
                  <Signature>float32</Signature>
                </Original>
                <Obfuscated>
                  <Name>TopEdgeSensivity</Name>
                  <Signature>float32 TopEdgeSensivity</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>BottomEdgeSensivity</Name>
                  <Signature>float32</Signature>
                </Original>
                <Obfuscated>
                  <Name>BottomEdgeSensivity</Name>
                  <Signature>float32 BottomEdgeSensivity</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LoadOnDemand</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>LoadOnDemand</Name>
                  <Signature>bool LoadOnDemand</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Indent</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Indent</Name>
                  <Signature>int32 Indent</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LineColor</Name>
                  <Signature>[System.Drawing] System.Drawing.Color</Signature>
                </Original>
                <Obfuscated>
                  <Name>LineColor</Name>
                  <Signature>[System.Drawing] System.Drawing.Color LineColor</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DragDropMarkColor</Name>
                  <Signature>[System.Drawing] System.Drawing.Color</Signature>
                </Original>
                <Obfuscated>
                  <Name>DragDropMarkColor</Name>
                  <Signature>[System.Drawing] System.Drawing.Color DragDropMarkColor</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DragDropMarkWidth</Name>
                  <Signature>float32</Signature>
                </Original>
                <Obfuscated>
                  <Name>DragDropMarkWidth</Name>
                  <Signature>float32 DragDropMarkWidth</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>HighlightDropPosition</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>HighlightDropPosition</Name>
                  <Signature>bool HighlightDropPosition</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Columns</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.TreeColumn &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>Columns</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.TreeColumn &gt; Columns</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>NodeControls</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControl &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>NodeControls</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.Collection`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControl &gt; NodeControls</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AsyncExpanding</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>AsyncExpanding</Name>
                  <Signature>bool AsyncExpanding</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DefaultToolTipProvider</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IToolTipProvider</Signature>
                </Original>
                <Obfuscated>
                  <Name>DefaultToolTipProvider</Name>
                  <Signature>TestAutomationFX.Controls.Tree.IToolTipProvider DefaultToolTipProvider</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AllNodes</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>AllNodes</Name>
                  <Signature>[mscorlib] System.Collections.Generic.IEnumerable`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; AllNodes</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DropPosition</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DropPosition</Signature>
                </Original>
                <Obfuscated>
                  <Name>DropPosition</Name>
                  <Signature>TestAutomationFX.Controls.Tree.DropPosition DropPosition</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Root</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Original>
                <Obfuscated>
                  <Name>Root</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv Root</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SelectedNodes</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.ReadOnlyCollection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>SelectedNodes</Name>
                  <Signature>[mscorlib] System.Collections.ObjectModel.ReadOnlyCollection`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; SelectedNodes</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SelectedNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Original>
                <Obfuscated>
                  <Name>SelectedNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv SelectedNode</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CurrentNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Original>
                <Obfuscated>
                  <Name>CurrentNode</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv CurrentNode</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ItemCount</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>ItemCount</Name>
                  <Signature>int32 ItemCount</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>ItemDrag</Name>
                </Original>
                <Obfuscated>
                  <Name>ItemDrag</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>NodeMouseClick</Name>
                </Original>
                <Obfuscated>
                  <Name>NodeMouseClick</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>NodeMouseDoubleClick</Name>
                </Original>
                <Obfuscated>
                  <Name>NodeMouseDoubleClick</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>ColumnWidthChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>ColumnWidthChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>ColumnReordered</Name>
                </Original>
                <Obfuscated>
                  <Name>ColumnReordered</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>ColumnClicked</Name>
                </Original>
                <Obfuscated>
                  <Name>ColumnClicked</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>SelectionChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>SelectionChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>Collapsing</Name>
                </Original>
                <Obfuscated>
                  <Name>Collapsing</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>Collapsed</Name>
                </Original>
                <Obfuscated>
                  <Name>Collapsed</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>Expanding</Name>
                </Original>
                <Obfuscated>
                  <Name>Expanding</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>Expanded</Name>
                </Original>
                <Obfuscated>
                  <Name>Expanded</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>GridLineStyleChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>GridLineStyleChanged</Name>
                </Obfuscated>
              </Event>
              <NestedType>
                <Name>ExpandArgs</Name>
                <NewName>a</NewName>
                <Field>
                  <Original>
                    <Name>Node</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Value</Name>
                    <Signature>bool</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>bool</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>IgnoreChildren</Name>
                    <Signature>bool</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>b</Name>
                    <Signature>bool</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>UpdateContentWidthDelegate</Name>
                <NewName>b</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke (TestAutomationFX.Controls.Tree.TreeModelEventArgs, TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke (TestAutomationFX.Controls.Tree.TreeModelEventArgs, TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (TestAutomationFX.Controls.Tree.TreeModelEventArgs, TestAutomationFX.Controls.Tree.TreeNodeAdv, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (TestAutomationFX.Controls.Tree.TreeModelEventArgs, TestAutomationFX.Controls.Tree.TreeNodeAdv, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>&lt;GetNodeControls&gt;d__0</Name>
                <NewName>&lt;GetNodeControls&gt;d__0</NewName>
                <Field>
                  <Original>
                    <Name>&lt;&gt;2__current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;1__state</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;l__initialThreadId</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>b</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>node</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>node</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;3__node</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;3__node</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;rowRect&gt;5__1</Name>
                    <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;rowRect&gt;5__1</Name>
                    <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;n&gt;5__2</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;n&gt;5__2</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;7__wrap3</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.NodeControlInfo &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;7__wrap3</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.NodeControlInfo &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.NodeControlInfo &gt; System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.NodeControlInfo &gt; System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerable.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerable.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>MoveNext</Name>
                    <Signature>bool MoveNext ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>MoveNext</Name>
                    <Signature>bool MoveNext ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.get_Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.get_Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerator.Reset</Name>
                    <Signature>void System.Collections.IEnumerator.Reset ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.Reset</Name>
                    <Signature>void System.Collections.IEnumerator.Reset ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.IDisposable.Dispose</Name>
                    <Signature>void System.IDisposable.Dispose ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.IDisposable.Dispose</Name>
                    <Signature>void System.IDisposable.Dispose ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerator.get_Current</Name>
                    <Signature>object System.Collections.IEnumerator.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.get_Current</Name>
                    <Signature>object System.Collections.IEnumerator.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;&gt;m__Finally4</Name>
                    <Signature>void &lt;&gt;m__Finally4 ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>void a ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Property>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.Current</Signature>
                  </Obfuscated>
                </Property>
                <Property>
                  <Original>
                    <Name>System.Collections.IEnumerator.Current</Name>
                    <Signature>object</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.Current</Name>
                    <Signature>object System.Collections.IEnumerator.Current</Signature>
                  </Obfuscated>
                </Property>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>&lt;GetNodeControls&gt;d__7</Name>
                <NewName>&lt;GetNodeControls&gt;d__7</NewName>
                <Field>
                  <Original>
                    <Name>&lt;&gt;2__current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;1__state</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;l__initialThreadId</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>b</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>node</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>node</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;3__node</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;3__node</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>rowRect</Name>
                    <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>rowRect</Name>
                    <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;3__rowRect</Name>
                    <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;3__rowRect</Name>
                    <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;y&gt;5__8</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;y&gt;5__8</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;x&gt;5__9</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;x&gt;5__9</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;width&gt;5__a</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;width&gt;5__a</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;rect&gt;5__b</Name>
                    <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;rect&gt;5__b</Name>
                    <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;c&gt;5__c</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;c&gt;5__c</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;s&gt;5__d</Name>
                    <Signature>[System.Drawing] System.Drawing.Size</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;s&gt;5__d</Name>
                    <Signature>[System.Drawing] System.Drawing.Size</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;right&gt;5__e</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;right&gt;5__e</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;col&gt;5__f</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;col&gt;5__f</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeColumn</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;i&gt;5__10</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;i&gt;5__10</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;nc&gt;5__11</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;nc&gt;5__11</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControls.NodeControl</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;s&gt;5__12</Name>
                    <Signature>[System.Drawing] System.Drawing.Size</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;s&gt;5__12</Name>
                    <Signature>[System.Drawing] System.Drawing.Size</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;isLastControl&gt;5__13</Name>
                    <Signature>bool</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;isLastControl&gt;5__13</Name>
                    <Signature>bool</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;maxWidth&gt;5__14</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;maxWidth&gt;5__14</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;7__wrap15</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControl &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;7__wrap15</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.NodeControls.NodeControl &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;7__wrap17</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.TreeColumn &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;7__wrap17</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.TreeColumn &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.NodeControlInfo &gt; System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.NodeControlInfo &gt; System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerable.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerable.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>MoveNext</Name>
                    <Signature>bool MoveNext ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>MoveNext</Name>
                    <Signature>bool MoveNext ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.get_Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.get_Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerator.Reset</Name>
                    <Signature>void System.Collections.IEnumerator.Reset ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.Reset</Name>
                    <Signature>void System.Collections.IEnumerator.Reset ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.IDisposable.Dispose</Name>
                    <Signature>void System.IDisposable.Dispose ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.IDisposable.Dispose</Name>
                    <Signature>void System.IDisposable.Dispose ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerator.get_Current</Name>
                    <Signature>object System.Collections.IEnumerator.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.get_Current</Name>
                    <Signature>object System.Collections.IEnumerator.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;&gt;m__Finally16</Name>
                    <Signature>void &lt;&gt;m__Finally16 ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>void a ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;&gt;m__Finally18</Name>
                    <Signature>void &lt;&gt;m__Finally18 ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>b</Name>
                    <Signature>void b ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Property>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.NodeControlInfo System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.NodeControlInfo&gt;.Current</Signature>
                  </Obfuscated>
                </Property>
                <Property>
                  <Original>
                    <Name>System.Collections.IEnumerator.Current</Name>
                    <Signature>object</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.Current</Name>
                    <Signature>object System.Collections.IEnumerator.Current</Signature>
                  </Obfuscated>
                </Property>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>&lt;get_VisibleNodes&gt;d__1d</Name>
                <NewName>&lt;get_VisibleNodes&gt;d__1d</NewName>
                <Field>
                  <Original>
                    <Name>&lt;&gt;2__current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;1__state</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;l__initialThreadId</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>b</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;node&gt;5__1e</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;node&gt;5__1e</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerable.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerable.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>MoveNext</Name>
                    <Signature>bool MoveNext ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>MoveNext</Name>
                    <Signature>bool MoveNext ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.get_Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.get_Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerator.Reset</Name>
                    <Signature>void System.Collections.IEnumerator.Reset ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.Reset</Name>
                    <Signature>void System.Collections.IEnumerator.Reset ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.IDisposable.Dispose</Name>
                    <Signature>void System.IDisposable.Dispose ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.IDisposable.Dispose</Name>
                    <Signature>void System.IDisposable.Dispose ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerator.get_Current</Name>
                    <Signature>object System.Collections.IEnumerator.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.get_Current</Name>
                    <Signature>object System.Collections.IEnumerator.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Property>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.Current</Signature>
                  </Obfuscated>
                </Property>
                <Property>
                  <Original>
                    <Name>System.Collections.IEnumerator.Current</Name>
                    <Signature>object</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.Current</Name>
                    <Signature>object System.Collections.IEnumerator.Current</Signature>
                  </Obfuscated>
                </Property>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>&lt;get_AllNodes&gt;d__21</Name>
                <NewName>&lt;get_AllNodes&gt;d__21</NewName>
                <Field>
                  <Original>
                    <Name>&lt;&gt;2__current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;1__state</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;l__initialThreadId</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>b</Name>
                    <Signature>int32</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeViewEx</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;node&gt;5__22</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;node&gt;5__22</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.Generic.IEnumerator`1&lt; TestAutomationFX.Controls.Tree.TreeNodeAdv &gt; System.Collections.Generic.IEnumerable&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerable.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerable.GetEnumerator</Name>
                    <Signature>[mscorlib] System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>MoveNext</Name>
                    <Signature>bool MoveNext ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>MoveNext</Name>
                    <Signature>bool MoveNext ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.get_Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.get_Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerator.Reset</Name>
                    <Signature>void System.Collections.IEnumerator.Reset ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.Reset</Name>
                    <Signature>void System.Collections.IEnumerator.Reset ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.IDisposable.Dispose</Name>
                    <Signature>void System.IDisposable.Dispose ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.IDisposable.Dispose</Name>
                    <Signature>void System.IDisposable.Dispose ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>System.Collections.IEnumerator.get_Current</Name>
                    <Signature>object System.Collections.IEnumerator.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.get_Current</Name>
                    <Signature>object System.Collections.IEnumerator.get_Current ()</Signature>
                    <Accessibility>private</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (int32)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Property>
                  <Original>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.Current</Name>
                    <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv System.Collections.Generic.IEnumerator&lt;TestAutomationFX.Controls.Tree.TreeNodeAdv&gt;.Current</Signature>
                  </Obfuscated>
                </Property>
                <Property>
                  <Original>
                    <Name>System.Collections.IEnumerator.Current</Name>
                    <Signature>object</Signature>
                  </Original>
                  <Obfuscated>
                    <Name>System.Collections.IEnumerator.Current</Name>
                    <Signature>object System.Collections.IEnumerator.Current</Signature>
                  </Obfuscated>
                </Property>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs</Name>
              <NewName>TestAutomationFX.Controls.Tree.TreeViewAdvEventArgs</NewName>
              <Field>
                <Original>
                  <Name>_node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_Node ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv get_Node ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv</Signature>
                </Original>
                <Obfuscated>
                  <Name>Node</Name>
                  <Signature>TestAutomationFX.Controls.Tree.TreeNodeAdv Node</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Controls.Tree.TreeViewAdvCancelEventArgs</Name>
              <NewName>TestAutomationFX.Controls.Tree.TreeViewAdvCancelEventArgs</NewName>
              <Field>
                <Original>
                  <Name>_cancel</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Cancel</Name>
                  <Signature>bool get_Cancel ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Cancel</Name>
                  <Signature>bool get_Cancel ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Cancel</Name>
                  <Signature>void set_Cancel (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Cancel</Name>
                  <Signature>void set_Cancel (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Controls.Tree.TreeNodeAdv)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Cancel</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Cancel</Name>
                  <Signature>bool Cancel</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper</Name>
              <NewName>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper</NewName>
              <Field>
                <Original>
                  <Name>m_WrappedAutomationElement</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.AutomationElement</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.AutomationElement</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_FindInfoMessage</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CachedChildren</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Index&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Index</Name>
                  <Signature>void set_Index (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Index</Name>
                  <Signature>void set_Index (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([UIAutomationClient] System.Windows.Automation.AutomationElement)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([UIAutomationClient] System.Windows.Automation.AutomationElement)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([UIAutomationClient] System.Windows.Automation.AutomationElement, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([UIAutomationClient] System.Windows.Automation.AutomationElement, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetAutomationElementFromPointNative</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.AutomationElement GetAutomationElementFromPointNative (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.AutomationElement a (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetAutomationElementFromPoint</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.AutomationElement GetAutomationElementFromPoint (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.AutomationElement b (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_WrappedAutomationElement</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.AutomationElement get_WrappedAutomationElement ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_WrappedAutomationElement</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.AutomationElement get_WrappedAutomationElement ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_WrappedAutomationElement</Name>
                  <Signature>void set_WrappedAutomationElement ([UIAutomationClient] System.Windows.Automation.AutomationElement)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_WrappedAutomationElement</Name>
                  <Signature>void set_WrappedAutomationElement ([UIAutomationClient] System.Windows.Automation.AutomationElement)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ChildFromPoint</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper ChildFromPoint (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ChildFromPoint</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper ChildFromPoint (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Parent</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper get_Parent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Parent</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper get_Parent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TryFindParentReversed</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper TryFindParentReversed (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper a (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsChild</Name>
                  <Signature>bool IsChild (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsChild</Name>
                  <Signature>bool IsChild (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CachedChildren</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt; get_CachedChildren ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CachedChildren</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt; get_CachedChildren ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CachedChildren</Name>
                  <Signature>void set_CachedChildren ([mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CachedChildren</Name>
                  <Signature>void set_CachedChildren ([mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt; get_Children ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt; get_Children ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetTreeWalker</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.TreeWalker GetTreeWalker ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.TreeWalker a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Window</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_Window ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Window</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_Window ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Value</Name>
                  <Signature>string get_Value ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Value</Name>
                  <Signature>string get_Value ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Role</Name>
                  <Signature>string get_Role ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Role</Name>
                  <Signature>string get_Role ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ItemType</Name>
                  <Signature>string get_ItemType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ItemType</Name>
                  <Signature>string get_ItemType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ControlTypeName</Name>
                  <Signature>string get_ControlTypeName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ControlTypeName</Name>
                  <Signature>string get_ControlTypeName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutomationId</Name>
                  <Signature>string get_AutomationId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutomationId</Name>
                  <Signature>string get_AutomationId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ClassName</Name>
                  <Signature>string get_ClassName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ClassName</Name>
                  <Signature>string get_ClassName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindChildByAutomationId</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindChildByAutomationId (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindChildByAutomationId</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindChildByAutomationId (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindChildByName</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindChildByName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindChildByName</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindChildByName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindChildByIndex</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindChildByIndex (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindChildByIndex</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindChildByIndex (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindDescendantByAutomationId</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindDescendantByAutomationId (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindDescendantByAutomationId</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindDescendantByAutomationId (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindDescendantByName</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindDescendantByName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindDescendantByName</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindDescendantByName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindByIndex</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindByIndex (int32, [UIAutomationTypes] System.Windows.Automation.TreeScope)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper a (int32, [UIAutomationTypes] System.Windows.Automation.TreeScope)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindByAutomationId</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindByAutomationId (string, [UIAutomationTypes] System.Windows.Automation.TreeScope, [UIAutomationClient] System.Windows.Automation.Condition[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper a (string, [UIAutomationTypes] System.Windows.Automation.TreeScope, [UIAutomationClient] System.Windows.Automation.Condition[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindByName</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindByName (string, [UIAutomationTypes] System.Windows.Automation.TreeScope, [UIAutomationClient] System.Windows.Automation.Condition[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper b (string, [UIAutomationTypes] System.Windows.Automation.TreeScope, [UIAutomationClient] System.Windows.Automation.Condition[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CommonFind</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper CommonFind ([UIAutomationTypes] System.Windows.Automation.TreeScope, [UIAutomationClient] System.Windows.Automation.Condition[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper a ([UIAutomationTypes] System.Windows.Automation.TreeScope, [UIAutomationClient] System.Windows.Automation.Condition[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TreeSearchCondition</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.Condition get_TreeSearchCondition ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TreeSearchCondition</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.Condition get_TreeSearchCondition ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsValid</Name>
                  <Signature>bool get_IsValid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsValid</Name>
                  <Signature>bool get_IsValid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BoundingRectangleIsEmpty</Name>
                  <Signature>bool BoundingRectangleIsEmpty ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CanGetNameWithoutException</Name>
                  <Signature>bool CanGetNameWithoutException ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsEqualRuntimeId</Name>
                  <Signature>bool IsEqualRuntimeId (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsEqualRuntimeId</Name>
                  <Signature>bool IsEqualRuntimeId (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMatch</Name>
                  <Signature>bool IsMatch (TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsMatch</Name>
                  <Signature>bool IsMatch (TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MatchRegEx</Name>
                  <Signature>static bool MatchRegEx (string, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (string, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindDescendantFast</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindDescendantFast (TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindDescendantFast</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindDescendantFast (TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindDescendantsFast</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt; FindDescendantsFast (TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindDescendantsFast</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt; FindDescendantsFast (TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindDescendantFastInternal</Name>
                  <Signature>void FindDescendantFastInternal (TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo, [mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt;)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo, [mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt;)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindDescendant</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindDescendant (TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindDescendant</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper FindDescendant (TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMatchedIndex</Name>
                  <Signature>int32 GetMatchedIndex (TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetMatchedIndex</Name>
                  <Signature>int32 GetMatchedIndex (TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsEnabled</Name>
                  <Signature>bool get_IsEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsEnabled</Name>
                  <Signature>bool get_IsEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsFocused</Name>
                  <Signature>bool get_IsFocused ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsFocused</Name>
                  <Signature>bool get_IsFocused ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsChecked</Name>
                  <Signature>bool get_IsChecked ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsChecked</Name>
                  <Signature>bool get_IsChecked ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsSelected</Name>
                  <Signature>bool get_IsSelected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsSelected</Name>
                  <Signature>bool get_IsSelected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Index</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Index</Name>
                  <Signature>int32 Index</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>WrappedAutomationElement</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.AutomationElement</Signature>
                </Original>
                <Obfuscated>
                  <Name>WrappedAutomationElement</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.AutomationElement WrappedAutomationElement</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Parent</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper</Signature>
                </Original>
                <Obfuscated>
                  <Name>Parent</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper Parent</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CachedChildren</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>CachedChildren</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt; CachedChildren</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>Children</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper &gt; Children</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Window</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                </Original>
                <Obfuscated>
                  <Name>Window</Name>
                  <Signature>TestAutomationFX.Core.WindowController Window</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Name</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Name</Name>
                  <Signature>string Name</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Value</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Value</Name>
                  <Signature>string Value</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Role</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Role</Name>
                  <Signature>string Role</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ItemType</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ItemType</Name>
                  <Signature>string ItemType</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ControlTypeName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ControlTypeName</Name>
                  <Signature>string ControlTypeName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Text</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Text</Name>
                  <Signature>string Text</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutomationId</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutomationId</Name>
                  <Signature>string AutomationId</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ClassName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ClassName</Name>
                  <Signature>string ClassName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle Bounds</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TreeSearchCondition</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.Condition</Signature>
                </Original>
                <Obfuscated>
                  <Name>TreeSearchCondition</Name>
                  <Signature>[UIAutomationClient] System.Windows.Automation.Condition TreeSearchCondition</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsValid</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsValid</Name>
                  <Signature>bool IsValid</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsEnabled</Name>
                  <Signature>bool IsEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsFocused</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsFocused</Name>
                  <Signature>bool IsFocused</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsChecked</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsChecked</Name>
                  <Signature>bool IsChecked</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsSelected</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsSelected</Name>
                  <Signature>bool IsSelected</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Hooks.UserActivityHook</Name>
              <NewName>TestAutomationFX.Core.Hooks.UserActivityHook</NewName>
              <Field>
                <Original>
                  <Name>WH_MOUSE_LL</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WH_KEYBOARD_LL</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WH_MOUSE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WH_KEYBOARD</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_MOUSEMOVE</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_LBUTTONDOWN</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_RBUTTONDOWN</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_MBUTTONDOWN</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_LBUTTONUP</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_RBUTTONUP</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_MBUTTONUP</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_LBUTTONDBLCLK</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_RBUTTONDBLCLK</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_MBUTTONDBLCLK</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_MOUSEWHEEL</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_KEYDOWN</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_KEYUP</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_SYSKEYDOWN</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WM_SYSKEYUP</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_SHIFT</Name>
                  <Signature>unsigned int8</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>unsigned int8</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_CAPITAL</Name>
                  <Signature>unsigned int8</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>unsigned int8</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMLOCK</Name>
                  <Signature>unsigned int8</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>unsigned int8</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>HC_ACTION</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>LLKHF_EXTENDED</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>LLKHF_INJECTED</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>LLKHF_ALTDOWN</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>LLKHF_UP</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MouseHookEvent</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.MouseHookEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.MouseHookEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>KeyboardHookEvent</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.KeyboardHookEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.KeyboardHookEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>KeyDown</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.KeyEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.KeyEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>KeyPress</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.KeyPressEventArgsEx &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.KeyPressEventArgsEx &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>KeyUp</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.KeyEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.KeyEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>hMouseHook</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>hKeyboardHook</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MouseHookProcedure</Name>
                  <Signature>TestAutomationFX.Core.Hooks.UserActivityHook/HookProc</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Hooks.UserActivityHook/e</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>KeyboardHookProcedure</Name>
                  <Signature>TestAutomationFX.Core.Hooks.UserActivityHook/HookProc</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Core.Hooks.UserActivityHook/e</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>SetWindowsHookEx</Name>
                  <Signature>static int32 SetWindowsHookEx (int32, TestAutomationFX.Core.Hooks.UserActivityHook/HookProc, native int, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static int32 a (int32, TestAutomationFX.Core.Hooks.UserActivityHook/e, native int, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UnhookWindowsHookEx</Name>
                  <Signature>static int32 UnhookWindowsHookEx (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static int32 a (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CallNextHookEx</Name>
                  <Signature>static int32 CallNextHookEx (int32, int32, int32, native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static int32 a (int32, int32, int32, native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToAscii</Name>
                  <Signature>static int32 ToAscii (int32, int32, unsigned int8[], unsigned int8[], int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static int32 a (int32, int32, unsigned int8[], unsigned int8[], int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetKeyboardState</Name>
                  <Signature>static int32 GetKeyboardState (unsigned int8[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static int32 a (unsigned int8[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetKeyState</Name>
                  <Signature>static int16 GetKeyState (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static int16 a (int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (bool, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (bool, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Finalize</Name>
                  <Signature>void Finalize ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Finalize</Name>
                  <Signature>void Finalize ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_MouseHookEvent</Name>
                  <Signature>void add_MouseHookEvent ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.MouseHookEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_MouseHookEvent</Name>
                  <Signature>void add_MouseHookEvent ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.MouseHookEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_MouseHookEvent</Name>
                  <Signature>void remove_MouseHookEvent ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.MouseHookEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_MouseHookEvent</Name>
                  <Signature>void remove_MouseHookEvent ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.MouseHookEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_KeyboardHookEvent</Name>
                  <Signature>void add_KeyboardHookEvent ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.KeyboardHookEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_KeyboardHookEvent</Name>
                  <Signature>void add_KeyboardHookEvent ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.KeyboardHookEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_KeyboardHookEvent</Name>
                  <Signature>void remove_KeyboardHookEvent ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.KeyboardHookEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_KeyboardHookEvent</Name>
                  <Signature>void remove_KeyboardHookEvent ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.KeyboardHookEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_KeyDown</Name>
                  <Signature>void add_KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_KeyDown</Name>
                  <Signature>void add_KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_KeyDown</Name>
                  <Signature>void remove_KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_KeyDown</Name>
                  <Signature>void remove_KeyDown ([System.Windows.Forms] System.Windows.Forms.KeyEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_KeyPress</Name>
                  <Signature>void add_KeyPress ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.KeyPressEventArgsEx &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_KeyPress</Name>
                  <Signature>void add_KeyPress ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.KeyPressEventArgsEx &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_KeyPress</Name>
                  <Signature>void remove_KeyPress ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.KeyPressEventArgsEx &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_KeyPress</Name>
                  <Signature>void remove_KeyPress ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.Core.Hooks.KeyPressEventArgsEx &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_KeyUp</Name>
                  <Signature>void add_KeyUp ([System.Windows.Forms] System.Windows.Forms.KeyEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_KeyUp</Name>
                  <Signature>void add_KeyUp ([System.Windows.Forms] System.Windows.Forms.KeyEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_KeyUp</Name>
                  <Signature>void remove_KeyUp ([System.Windows.Forms] System.Windows.Forms.KeyEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_KeyUp</Name>
                  <Signature>void remove_KeyUp ([System.Windows.Forms] System.Windows.Forms.KeyEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Start</Name>
                  <Signature>void Start ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Start</Name>
                  <Signature>void Start ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Start</Name>
                  <Signature>void Start (bool, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Start</Name>
                  <Signature>void Start (bool, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Stop</Name>
                  <Signature>void Stop ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Stop</Name>
                  <Signature>void Stop ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Stop</Name>
                  <Signature>void Stop (bool, bool, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Stop</Name>
                  <Signature>void Stop (bool, bool, bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseHookProc</Name>
                  <Signature>int32 MouseHookProc (int32, int32, native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32 a (int32, int32, native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireMouseHookEvent</Name>
                  <Signature>void FireMouseHookEvent (object, TestAutomationFX.Core.Hooks.MouseHookEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, TestAutomationFX.Core.Hooks.MouseHookEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireKeyboardHookEvent</Name>
                  <Signature>void FireKeyboardHookEvent (object, TestAutomationFX.Core.Hooks.KeyboardHookEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, TestAutomationFX.Core.Hooks.KeyboardHookEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>KeyboardHookProc</Name>
                  <Signature>int32 KeyboardHookProc (int32, int32, native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32 b (int32, int32, native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsModifierKey</Name>
                  <Signature>bool IsModifierKey (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (TestAutomationFX.Core.VirtualKeys)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Event>
                <Original>
                  <Name>MouseHookEvent</Name>
                </Original>
                <Obfuscated>
                  <Name>MouseHookEvent</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>KeyboardHookEvent</Name>
                </Original>
                <Obfuscated>
                  <Name>KeyboardHookEvent</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>KeyDown</Name>
                </Original>
                <Obfuscated>
                  <Name>KeyDown</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>KeyPress</Name>
                </Original>
                <Obfuscated>
                  <Name>KeyPress</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>KeyUp</Name>
                </Original>
                <Obfuscated>
                  <Name>KeyUp</Name>
                </Obfuscated>
              </Event>
              <NestedType>
                <Name>POINT</Name>
                <NewName>a</NewName>
                <Field>
                  <Original>
                    <Name>x</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>y</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>b</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>MouseHookStruct</Name>
                <NewName>b</NewName>
                <Field>
                  <Original>
                    <Name>pt</Name>
                    <Signature>TestAutomationFX.Core.Hooks.UserActivityHook/POINT</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>TestAutomationFX.Core.Hooks.UserActivityHook/a</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>hwnd</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>wHitTestCode</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>b</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>dwExtraInfo</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>c</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>MouseLLHookStruct</Name>
                <NewName>c</NewName>
                <Field>
                  <Original>
                    <Name>pt</Name>
                    <Signature>TestAutomationFX.Core.Hooks.UserActivityHook/POINT</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>TestAutomationFX.Core.Hooks.UserActivityHook/a</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>mouseData</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>flags</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>b</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>time</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>c</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>dwExtraInfo</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>d</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>KeyboardHookStruct</Name>
                <NewName>d</NewName>
                <Field>
                  <Original>
                    <Name>vkCode</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>a</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>scanCode</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>b</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>flags</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>c</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>time</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>d</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>dwExtraInfo</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>e</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>HookProc</Name>
                <NewName>e</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>int32 Invoke (int32, int32, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>int32 Invoke (int32, int32, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (int32, int32, native int, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (int32, int32, native int, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>int32 EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>int32 EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo</Name>
              <NewName>TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo</NewName>
              <Field>
                <Original>
                  <Name>&lt;Relation&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.Relation</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Relation</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;AutomationId&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;AutomationIdRegEx&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;AutomationName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;AutomationNameRegEx&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ClassName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ItemType&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;MatchedIndex&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Index&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Relation</Name>
                  <Signature>TestAutomationFX.Core.Relation get_Relation ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Relation</Name>
                  <Signature>TestAutomationFX.Core.Relation get_Relation ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Relation</Name>
                  <Signature>void set_Relation (TestAutomationFX.Core.Relation)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Relation</Name>
                  <Signature>void set_Relation (TestAutomationFX.Core.Relation)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutomationId</Name>
                  <Signature>string get_AutomationId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutomationId</Name>
                  <Signature>string get_AutomationId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AutomationId</Name>
                  <Signature>void set_AutomationId (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AutomationId</Name>
                  <Signature>void set_AutomationId (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutomationIdRegEx</Name>
                  <Signature>string get_AutomationIdRegEx ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutomationIdRegEx</Name>
                  <Signature>string get_AutomationIdRegEx ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AutomationIdRegEx</Name>
                  <Signature>void set_AutomationIdRegEx (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AutomationIdRegEx</Name>
                  <Signature>void set_AutomationIdRegEx (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutomationName</Name>
                  <Signature>string get_AutomationName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutomationName</Name>
                  <Signature>string get_AutomationName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AutomationName</Name>
                  <Signature>void set_AutomationName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AutomationName</Name>
                  <Signature>void set_AutomationName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutomationNameRegEx</Name>
                  <Signature>string get_AutomationNameRegEx ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutomationNameRegEx</Name>
                  <Signature>string get_AutomationNameRegEx ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AutomationNameRegEx</Name>
                  <Signature>void set_AutomationNameRegEx (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AutomationNameRegEx</Name>
                  <Signature>void set_AutomationNameRegEx (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ClassName</Name>
                  <Signature>string get_ClassName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ClassName</Name>
                  <Signature>string get_ClassName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ClassName</Name>
                  <Signature>void set_ClassName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ClassName</Name>
                  <Signature>void set_ClassName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ItemType</Name>
                  <Signature>string get_ItemType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ItemType</Name>
                  <Signature>string get_ItemType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ItemType</Name>
                  <Signature>void set_ItemType (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ItemType</Name>
                  <Signature>void set_ItemType (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_MatchedIndex ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_MatchedIndex ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MatchedIndex</Name>
                  <Signature>void set_MatchedIndex ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MatchedIndex</Name>
                  <Signature>void set_MatchedIndex ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Index</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Index</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Index</Name>
                  <Signature>void set_Index ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Index</Name>
                  <Signature>void set_Index ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutomationIdHasValue</Name>
                  <Signature>bool get_AutomationIdHasValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutomationIdHasValue</Name>
                  <Signature>bool get_AutomationIdHasValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutomationNameHasValue</Name>
                  <Signature>bool get_AutomationNameHasValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutomationNameHasValue</Name>
                  <Signature>bool get_AutomationNameHasValue ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Relation</Name>
                  <Signature>TestAutomationFX.Core.Relation</Signature>
                </Original>
                <Obfuscated>
                  <Name>Relation</Name>
                  <Signature>TestAutomationFX.Core.Relation Relation</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutomationId</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutomationId</Name>
                  <Signature>string AutomationId</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutomationIdRegEx</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutomationIdRegEx</Name>
                  <Signature>string AutomationIdRegEx</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutomationName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutomationName</Name>
                  <Signature>string AutomationName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutomationNameRegEx</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutomationNameRegEx</Name>
                  <Signature>string AutomationNameRegEx</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ClassName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ClassName</Name>
                  <Signature>string ClassName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ItemType</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ItemType</Name>
                  <Signature>string ItemType</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; MatchedIndex</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Index</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>Index</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; Index</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutomationIdHasValue</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutomationIdHasValue</Name>
                  <Signature>bool AutomationIdHasValue</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutomationNameHasValue</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutomationNameHasValue</Name>
                  <Signature>bool AutomationNameHasValue</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Description</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Description</Name>
                  <Signature>string Description</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Relation</Name>
              <NewName>TestAutomationFX.Core.Relation</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Child</Name>
                  <Signature>TestAutomationFX.Core.Relation</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Child</Name>
                  <Signature>TestAutomationFX.Core.Relation</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Descendant</Name>
                  <Signature>TestAutomationFX.Core.Relation</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Descendant</Name>
                  <Signature>TestAutomationFX.Core.Relation</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Parent</Name>
                  <Signature>TestAutomationFX.Core.Relation</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Parent</Name>
                  <Signature>TestAutomationFX.Core.Relation</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Ancestor</Name>
                  <Signature>TestAutomationFX.Core.Relation</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Ancestor</Name>
                  <Signature>TestAutomationFX.Core.Relation</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.UIIgnoreTestAttribute</Name>
              <NewName>TestAutomationFX.Core.UIIgnoreTestAttribute</NewName>
              <Field>
                <Original>
                  <Name>&lt;Reason&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Reason</Name>
                  <Signature>string get_Reason ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Reason</Name>
                  <Signature>string get_Reason ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Reason</Name>
                  <Signature>void set_Reason (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Reason</Name>
                  <Signature>void set_Reason (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Reason</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Reason</Name>
                  <Signature>string Reason</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.UIMapLoader</Name>
              <NewName>TestAutomationFX.Core.UIMapLoader</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.UITestAttribute</Name>
              <NewName>TestAutomationFX.Core.UITestAttribute</NewName>
              <Field>
                <Original>
                  <Name>&lt;FailureOption&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.UITestAttribute/FailureOptions</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.UITestAttribute/FailureOptions</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_FailureOption</Name>
                  <Signature>TestAutomationFX.Core.UITestAttribute/FailureOptions get_FailureOption ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_FailureOption</Name>
                  <Signature>TestAutomationFX.Core.UITestAttribute/FailureOptions get_FailureOption ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_FailureOption</Name>
                  <Signature>void set_FailureOption (TestAutomationFX.Core.UITestAttribute/FailureOptions)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_FailureOption</Name>
                  <Signature>void set_FailureOption (TestAutomationFX.Core.UITestAttribute/FailureOptions)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.UITestAttribute/FailureOptions)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.UITestAttribute/FailureOptions)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>FailureOption</Name>
                  <Signature>TestAutomationFX.Core.UITestAttribute/FailureOptions</Signature>
                </Original>
                <Obfuscated>
                  <Name>FailureOption</Name>
                  <Signature>TestAutomationFX.Core.UITestAttribute/FailureOptions FailureOption</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>FailureOptions</Name>
                <NewName>FailureOptions</NewName>
                <Field>
                  <Original>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>StopOnFailure</Name>
                    <Signature>TestAutomationFX.Core.UITestAttribute/FailureOptions</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>StopOnFailure</Name>
                    <Signature>TestAutomationFX.Core.UITestAttribute/FailureOptions</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>DoNotStopOnFailure</Name>
                    <Signature>TestAutomationFX.Core.UITestAttribute/FailureOptions</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>DoNotStopOnFailure</Name>
                    <Signature>TestAutomationFX.Core.UITestAttribute/FailureOptions</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>GetPromptedOnFailure</Name>
                    <Signature>TestAutomationFX.Core.UITestAttribute/FailureOptions</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>GetPromptedOnFailure</Name>
                    <Signature>TestAutomationFX.Core.UITestAttribute/FailureOptions</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.UITestDataAttribute</Name>
              <NewName>TestAutomationFX.Core.UITestDataAttribute</NewName>
              <Field>
                <Original>
                  <Name>&lt;FilePath&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_FilePath</Name>
                  <Signature>string get_FilePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_FilePath</Name>
                  <Signature>string get_FilePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_FilePath</Name>
                  <Signature>void set_FilePath (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_FilePath</Name>
                  <Signature>void set_FilePath (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>FilePath</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>FilePath</Name>
                  <Signature>string FilePath</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.UITestFixtureAttribute</Name>
              <NewName>TestAutomationFX.Core.UITestFixtureAttribute</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.ActionEventArgs</Name>
              <NewName>TestAutomationFX.UI.ActionEventArgs</NewName>
              <Field>
                <Original>
                  <Name>&lt;ActionType&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;IsCanceled&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.ActionTypes)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.ActionTypes)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ActionType</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes get_ActionType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ActionType</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes get_ActionType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ActionType</Name>
                  <Signature>void set_ActionType (TestAutomationFX.UI.ActionTypes)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ActionType</Name>
                  <Signature>void set_ActionType (TestAutomationFX.UI.ActionTypes)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsCanceled</Name>
                  <Signature>bool get_IsCanceled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsCanceled</Name>
                  <Signature>bool get_IsCanceled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsCanceled</Name>
                  <Signature>void set_IsCanceled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsCanceled</Name>
                  <Signature>void set_IsCanceled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ActionType</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes</Signature>
                </Original>
                <Obfuscated>
                  <Name>ActionType</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes ActionType</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsCanceled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsCanceled</Name>
                  <Signature>bool IsCanceled</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.ActionEventHelper</Name>
              <NewName>M</NewName>
              <Field>
                <Original>
                  <Name>&lt;UIObject&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ActionEventArgs&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.UI.ActionEventArgs</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.ActionEventArgs</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_UIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_UIObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UIObject</Name>
                  <Signature>void set_UIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ActionEventArgs</Name>
                  <Signature>TestAutomationFX.UI.ActionEventArgs get_ActionEventArgs ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.ActionEventArgs a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ActionEventArgs</Name>
                  <Signature>void set_ActionEventArgs (TestAutomationFX.UI.ActionEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.UI.ActionEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObject, TestAutomationFX.UI.ActionTypes)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObject, TestAutomationFX.UI.ActionTypes)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsCanceled</Name>
                  <Signature>bool get_IsCanceled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsCanceled</Name>
                  <Signature>void set_IsCanceled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>UIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ActionEventArgs</Name>
                  <Signature>TestAutomationFX.UI.ActionEventArgs</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.UI.ActionEventArgs</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsCanceled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.ActionTypes</Name>
              <NewName>TestAutomationFX.UI.ActionTypes</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Click</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Click</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>RightClick</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RightClick</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>DoubleClick</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoubleClick</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>DragTo</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DragTo</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Hover</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Hover</Name>
                  <Signature>TestAutomationFX.UI.ActionTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.FindObjectBaseForm</Name>
              <NewName>TestAutomationFX.UI.FindObjectBaseForm</NewName>
              <Field>
                <Original>
                  <Name>m_UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_LastLocation</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MoveWindow</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_HideVisualStudio</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MoveAwayCheckBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ObjectFinderControl</Name>
                  <Signature>TestAutomationFX.UI.ObjectFinderControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.ObjectFinderControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ObjectInfoControl</Name>
                  <Signature>TestAutomationFX.UI.ObjectInfoControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.ObjectInfoControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>pictureBox1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>panel2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_HideVisualStudiCheckbox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ButtonOK</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PanelBottom</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ButtonCancel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>label2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_DescriptionHeader</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m_DescriptionHeader</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>panel1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnClosed</Name>
                  <Signature>void OnClosed ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnClosed</Name>
                  <Signature>void OnClosed ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnShown</Name>
                  <Signature>void OnShown ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnShown</Name>
                  <Signature>void OnShown ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnVisibleChanged</Name>
                  <Signature>void OnVisibleChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnVisibleChanged</Name>
                  <Signature>void OnVisibleChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddActiveObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddActiveObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddActiveObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddActiveObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BringVisualStudioToFront</Name>
                  <Signature>void BringVisualStudioToFront ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>BringVisualStudioToFront</Name>
                  <Signature>void BringVisualStudioToFront ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BringVisualStudioToBack</Name>
                  <Signature>void BringVisualStudioToBack ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>BringVisualStudioToBack</Name>
                  <Signature>void BringVisualStudioToBack ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MoveAwayForm</Name>
                  <Signature>void MoveAwayForm ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MoveAwayForm</Name>
                  <Signature>void MoveAwayForm ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCrossHairDropped</Name>
                  <Signature>void OnCrossHairDropped (object, TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCrossHairPicked</Name>
                  <Signature>void OnCrossHairPicked (object, TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCrossHairCancelled</Name>
                  <Signature>void OnCrossHairCancelled (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCrossHairMove</Name>
                  <Signature>void OnCrossHairMove (object, TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (object, TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnActiveObjectChanged</Name>
                  <Signature>void OnActiveObjectChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCrossHairDropped</Name>
                  <Signature>void OnCrossHairDropped (TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnCrossHairDropped</Name>
                  <Signature>void OnCrossHairDropped (TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCrossHairPicked</Name>
                  <Signature>void OnCrossHairPicked (TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnCrossHairPicked</Name>
                  <Signature>void OnCrossHairPicked (TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCrossHairCancelled</Name>
                  <Signature>void OnCrossHairCancelled ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnCrossHairCancelled</Name>
                  <Signature>void OnCrossHairCancelled ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCrossHairMove</Name>
                  <Signature>void OnCrossHairMove (TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnCrossHairMove</Name>
                  <Signature>void OnCrossHairMove (TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnActiveObjectChanged</Name>
                  <Signature>void OnActiveObjectChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnActiveObjectChanged</Name>
                  <Signature>void OnActiveObjectChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.AddObjectForm</Name>
              <NewName>TestAutomationFX.UI.AddObjectForm</NewName>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.AddUIMapChildForm</Name>
              <NewName>TestAutomationFX.UI.AddUIMapChildForm</NewName>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ChildObjectsListBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AddButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>propertyGrid1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PropertyGrid</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PropertyGrid</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>panel1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>panel2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>panel3</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>panel4</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>splitter1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Splitter</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Splitter</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>pictureBox1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Cancel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;UIMapObject&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;UIMapDesigner&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FillChildListBox</Name>
                  <Signature>void FillChildListBox ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddUIApplicationChildren</Name>
                  <Signature>void AddUIApplicationChildren (TestAutomationFX.UI.UIApplication)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.UI.UIApplication)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddUIAutomationChildren</Name>
                  <Signature>void AddUIAutomationChildren (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddWindowChildren</Name>
                  <Signature>void AddWindowChildren (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddOwnedWindows</Name>
                  <Signature>void AddOwnedWindows (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddMsaaChildren</Name>
                  <Signature>void AddMsaaChildren (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowNotAttachedInfo</Name>
                  <Signature>void ShowNotAttachedInfo ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowNotValidInfo</Name>
                  <Signature>void ShowNotValidInfo ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIMapObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_UIMapObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UIMapObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_UIMapObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UIMapObject</Name>
                  <Signature>void set_UIMapObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UIMapObject</Name>
                  <Signature>void set_UIMapObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIMapDesigner</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner get_UIMapDesigner ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner d ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UIMapDesigner</Name>
                  <Signature>void set_UIMapDesigner (TestAutomationFX.UI.Design.UIMapDesigner)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.UI.Design.UIMapDesigner)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAddUIMapChildFormShown</Name>
                  <Signature>void OnAddUIMapChildFormShown (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAddButtonClick</Name>
                  <Signature>void OnAddButtonClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddSelectedChilds</Name>
                  <Signature>void AddSelectedChilds ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetWindowControllerFromAutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.WindowController GetWindowControllerFromAutomationElementWrapper (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Core.WindowController b (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddObject</Name>
                  <Signature>void AddObject (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnChildObjectsListBoxMouseDoubleClick</Name>
                  <Signature>void OnChildObjectsListBoxMouseDoubleClick (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnSelectedIndexChanged</Name>
                  <Signature>void OnSelectedIndexChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>UIMapObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>UIMapObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject UIMapObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIMapDesigner</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesigner</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.AddVerificationForm</Name>
              <NewName>TestAutomationFX.UI.AddVerificationForm</NewName>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CancelClose</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_VerifyPropertyAdapters</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; string, TestAutomationFX.UI.VerifyPropertyAdapter &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; string, S &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>panel2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>pictureBox1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ObjectGroupBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PanelBottom</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ButtonOK</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ButtonCancel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>groupBox1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ValueComboBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ComboBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ComboBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PropertyComboBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ComboBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ComboBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label4</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label3</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ObjectComboBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ComboBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ComboBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ObjectFinderControl</Name>
                  <Signature>TestAutomationFX.UI.ObjectFinderControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.ObjectFinderControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_VerificationTypesTabControl</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TabControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TabControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_VerifyPropertyTabPage</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TabPage</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TabPage</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_VerifyObjectImageTabPage</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TabPage</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TabPage</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_VerifyAgainstImageFile</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_VerifyAgainstStoredImage</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_VerifyFileTabPage</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TabPage</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TabPage</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_VerifyManualTabPage</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TabPage</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TabPage</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ManualMessage</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label5</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_HighlightObject</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.CheckBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ImageFileName</Name>
                  <Signature>TestAutomationFX.Core.FileBrowseControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.FileBrowseControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_VerifyFilePathControl</Name>
                  <Signature>TestAutomationFX.Core.FileBrowseControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Core.FileBrowseControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_FileVerificationType</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ComboBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ComboBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label7</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label6</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CustomVerificationTabPage</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TabPage</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TabPage</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CustomVerifiersListbox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CustomVerifierPropertyGrid</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PropertyGrid</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PropertyGrid</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label8</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label9</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;VerificationType&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;RecordedAction&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedAction</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedAction</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ObjectToVerify&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnClosing</Name>
                  <Signature>void OnClosing ([System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnClosing</Name>
                  <Signature>void OnClosing ([System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_VerificationType</Name>
                  <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes get_VerificationType ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_VerificationType</Name>
                  <Signature>void set_VerificationType (TestAutomationFX.UI.AddVerificationForm/VerificationTypes)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.UI.AddVerificationForm/VerificationTypes)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RecordedAction</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedAction get_RecordedAction ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RecordedAction</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedAction get_RecordedAction ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_RecordedAction</Name>
                  <Signature>void set_RecordedAction (TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_RecordedAction</Name>
                  <Signature>void set_RecordedAction (TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView get_UIMapDesignerView ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView get_UIMapDesignerView ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UIMapDesignerView</Name>
                  <Signature>void set_UIMapDesignerView (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UIMapDesignerView</Name>
                  <Signature>void set_UIMapDesignerView (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ObjectToVerify</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_ObjectToVerify ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ObjectToVerify</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_ObjectToVerify ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ObjectToVerify</Name>
                  <Signature>void set_ObjectToVerify (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ObjectToVerify</Name>
                  <Signature>void set_ObjectToVerify (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnButtonOKClick</Name>
                  <Signature>void OnButtonOKClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateCustomVerifyAction</Name>
                  <Signature>void CreateCustomVerifyAction ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateManualVerifyAction</Name>
                  <Signature>void CreateManualVerifyAction ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateFileVerifyAction</Name>
                  <Signature>void CreateFileVerifyAction ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateVerifyImageAction</Name>
                  <Signature>void CreateVerifyImageAction ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ValidateObjectToVerify</Name>
                  <Signature>bool ValidateObjectToVerify ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>bool f ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateVerifyObjectAction</Name>
                  <Signature>void CreateVerifyObjectAction ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>void g ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCrossHairDropped</Name>
                  <Signature>void OnCrossHairDropped (object, TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupVerifyPropertyCombos</Name>
                  <Signature>void SetupVerifyPropertyCombos ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>void h ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetObjectToVerifyInCustomVerifiers</Name>
                  <Signature>void SetObjectToVerifyInCustomVerifiers ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>void i ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetObjectValueToValueTextbox</Name>
                  <Signature>void GetObjectValueToValueTextbox ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>void j ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FillValueComboWithStandardValues</Name>
                  <Signature>void FillValueComboWithStandardValues ([mscorlib] System.Type)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([mscorlib] System.Type)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetSelectedPropertyName</Name>
                  <Signature>string GetSelectedPropertyName ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>string k ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAddVerificationFormVisibleChanged</Name>
                  <Signature>void OnAddVerificationFormVisibleChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowAddVerificationDialog</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedAction ShowAddVerificationDialog ([System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ShowAddVerificationDialog</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedAction ShowAddVerificationDialog ([System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnPropertyComboBoxSelectionChangeCommitted</Name>
                  <Signature>void OnPropertyComboBoxSelectionChangeCommitted (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnVerificationTypesTabControlSelecting</Name>
                  <Signature>void OnVerificationTypesTabControlSelecting (object, [System.Windows.Forms] System.Windows.Forms.TabControlCancelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.TabControlCancelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>PopulateCustomVerifiers</Name>
                  <Signature>void PopulateCustomVerifiers ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>l</Name>
                  <Signature>void l ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnCustomVerifiersListboxSelectedIndexChanged</Name>
                  <Signature>void OnCustomVerifiersListboxSelectedIndexChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetSelectedCustomVerifier</Name>
                  <Signature>TestAutomationFX.Core.CustomVerifier GetSelectedCustomVerifier ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m</Name>
                  <Signature>TestAutomationFX.Core.CustomVerifier m ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>n</Name>
                  <Signature>void n ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>VerificationType</Name>
                  <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RecordedAction</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedAction</Signature>
                </Original>
                <Obfuscated>
                  <Name>RecordedAction</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedAction RecordedAction</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView</Signature>
                </Original>
                <Obfuscated>
                  <Name>UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView UIMapDesignerView</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ObjectToVerify</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>ObjectToVerify</Name>
                  <Signature>TestAutomationFX.UI.UIObject ObjectToVerify</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>VerificationTypes</Name>
                <NewName>VerificationTypes</NewName>
                <Field>
                  <Original>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Property</Name>
                    <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Property</Name>
                    <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Image</Name>
                    <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Image</Name>
                    <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>File</Name>
                    <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>File</Name>
                    <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Manual</Name>
                    <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Manual</Name>
                    <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Custom</Name>
                    <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Custom</Name>
                    <Signature>TestAutomationFX.UI.AddVerificationForm/VerificationTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.AssemblyProbingManager</Name>
              <NewName>N</NewName>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Assemblies</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AssemblyProbingManager</Name>
                  <Signature>TestAutomationFX.UI.AssemblyProbingManager</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>N</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Instance</Name>
                  <Signature>static TestAutomationFX.UI.AssemblyProbingManager get_Instance ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static N a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Assemblies</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt; get_Assemblies ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt; a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearReferencedAssemblies</Name>
                  <Signature>void ClearReferencedAssemblies ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddDelegate</Name>
                  <Signature>void AddDelegate ([mscorlib] System.Delegate)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([mscorlib] System.Delegate)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddType</Name>
                  <Signature>void AddType ([mscorlib] System.Type)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([mscorlib] System.Type)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddTypes</Name>
                  <Signature>void AddTypes ([mscorlib] System.Type[])</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([mscorlib] System.Type[])</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddAssembly</Name>
                  <Signature>void AddAssembly ([mscorlib] System.Reflection.Assembly)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([mscorlib] System.Reflection.Assembly)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Instance</Name>
                  <Signature>TestAutomationFX.UI.AssemblyProbingManager</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.UI.AssemblyProbingManager</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Assemblies</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; string &gt;</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.AttachFailingAction</Name>
              <NewName>TestAutomationFX.UI.AttachFailingAction</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Fail</Name>
                  <Signature>TestAutomationFX.UI.AttachFailingAction</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Fail</Name>
                  <Signature>TestAutomationFX.UI.AttachFailingAction</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Retry</Name>
                  <Signature>TestAutomationFX.UI.AttachFailingAction</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Retry</Name>
                  <Signature>TestAutomationFX.UI.AttachFailingAction</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Handled</Name>
                  <Signature>TestAutomationFX.UI.AttachFailingAction</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Handled</Name>
                  <Signature>TestAutomationFX.UI.AttachFailingAction</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.AttachFailingEventArgs</Name>
              <NewName>TestAutomationFX.UI.AttachFailingEventArgs</NewName>
              <Field>
                <Original>
                  <Name>&lt;UIObject&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;CurrentRetryCount&gt;k__BackingField</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Exception&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Exception</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Exception</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Action&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.UI.AttachFailingAction</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.AttachFailingAction</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObject, int32, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObject, int32, [mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_UIObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_UIObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UIObject</Name>
                  <Signature>void set_UIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UIObject</Name>
                  <Signature>void set_UIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CurrentRetryCount</Name>
                  <Signature>int32 get_CurrentRetryCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CurrentRetryCount</Name>
                  <Signature>int32 get_CurrentRetryCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CurrentRetryCount</Name>
                  <Signature>void set_CurrentRetryCount (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CurrentRetryCount</Name>
                  <Signature>void set_CurrentRetryCount (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Exception</Name>
                  <Signature>[mscorlib] System.Exception get_Exception ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Exception</Name>
                  <Signature>[mscorlib] System.Exception get_Exception ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Exception</Name>
                  <Signature>void set_Exception ([mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Exception</Name>
                  <Signature>void set_Exception ([mscorlib] System.Exception)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Action</Name>
                  <Signature>TestAutomationFX.UI.AttachFailingAction get_Action ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Action</Name>
                  <Signature>TestAutomationFX.UI.AttachFailingAction get_Action ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Action</Name>
                  <Signature>void set_Action (TestAutomationFX.UI.AttachFailingAction)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Action</Name>
                  <Signature>void set_Action (TestAutomationFX.UI.AttachFailingAction)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>UIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>UIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject UIObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CurrentRetryCount</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>CurrentRetryCount</Name>
                  <Signature>int32 CurrentRetryCount</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Exception</Name>
                  <Signature>[mscorlib] System.Exception</Signature>
                </Original>
                <Obfuscated>
                  <Name>Exception</Name>
                  <Signature>[mscorlib] System.Exception Exception</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Action</Name>
                  <Signature>TestAutomationFX.UI.AttachFailingAction</Signature>
                </Original>
                <Obfuscated>
                  <Name>Action</Name>
                  <Signature>TestAutomationFX.UI.AttachFailingAction Action</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.AutomationElementInfoForm</Name>
              <NewName>TestAutomationFX.UI.AutomationElementInfoForm</NewName>
              <Field>
                <Original>
                  <Name>m_HighlightRectangle</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>textBox1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper get_AutomationElementWrapper ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper get_AutomationElementWrapper ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AutomationElementWrapper</Name>
                  <Signature>void set_AutomationElementWrapper (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AutomationElementWrapper</Name>
                  <Signature>void set_AutomationElementWrapper (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateInfo</Name>
                  <Signature>void UpdateInfo ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>AutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper AutomationElementWrapper</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.ControlPartProviderList</Name>
              <NewName>TestAutomationFX.UI.ControlPartProviderList</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Collections.Generic.IList`1&lt; [mscorlib] System.Type &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([mscorlib] System.Collections.Generic.IList`1&lt; [mscorlib] System.Type &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InsertItem</Name>
                  <Signature>void InsertItem (int32, [mscorlib] System.Type)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>InsertItem</Name>
                  <Signature>void InsertItem (int32, [mscorlib] System.Type)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.ClickThroughForm</Name>
              <NewName>TestAutomationFX.UI.ClickThroughForm</NewName>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnLoad</Name>
                  <Signature>void OnLoad ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnLoad</Name>
                  <Signature>void OnLoad ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetClickThrough</Name>
                  <Signature>void SetClickThrough ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.CrossHairControl</Name>
              <NewName>TestAutomationFX.UI.CrossHairControl</NewName>
              <Field>
                <Original>
                  <Name>m_HaircrossCursor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_InMouseDown</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UserActivityHook</Name>
                  <Signature>TestAutomationFX.Core.Hooks.UserActivityHook</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Hooks.UserActivityHook</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>CrossHairMove</Name>
                  <Signature>TestAutomationFX.UI.CrossHairEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.CrossHairEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>CrossHairPicked</Name>
                  <Signature>TestAutomationFX.UI.CrossHairEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.UI.CrossHairEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>CrossHairDropped</Name>
                  <Signature>TestAutomationFX.UI.CrossHairEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>TestAutomationFX.UI.CrossHairEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>CrossHairCancelled</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PictureBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>add_CrossHairMove</Name>
                  <Signature>void add_CrossHairMove (TestAutomationFX.UI.CrossHairEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_CrossHairMove</Name>
                  <Signature>void add_CrossHairMove (TestAutomationFX.UI.CrossHairEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_CrossHairMove</Name>
                  <Signature>void remove_CrossHairMove (TestAutomationFX.UI.CrossHairEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_CrossHairMove</Name>
                  <Signature>void remove_CrossHairMove (TestAutomationFX.UI.CrossHairEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_CrossHairPicked</Name>
                  <Signature>void add_CrossHairPicked (TestAutomationFX.UI.CrossHairEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_CrossHairPicked</Name>
                  <Signature>void add_CrossHairPicked (TestAutomationFX.UI.CrossHairEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_CrossHairPicked</Name>
                  <Signature>void remove_CrossHairPicked (TestAutomationFX.UI.CrossHairEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_CrossHairPicked</Name>
                  <Signature>void remove_CrossHairPicked (TestAutomationFX.UI.CrossHairEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_CrossHairDropped</Name>
                  <Signature>void add_CrossHairDropped (TestAutomationFX.UI.CrossHairEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_CrossHairDropped</Name>
                  <Signature>void add_CrossHairDropped (TestAutomationFX.UI.CrossHairEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_CrossHairDropped</Name>
                  <Signature>void remove_CrossHairDropped (TestAutomationFX.UI.CrossHairEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_CrossHairDropped</Name>
                  <Signature>void remove_CrossHairDropped (TestAutomationFX.UI.CrossHairEventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_CrossHairCancelled</Name>
                  <Signature>void add_CrossHairCancelled ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_CrossHairCancelled</Name>
                  <Signature>void add_CrossHairCancelled ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_CrossHairCancelled</Name>
                  <Signature>void remove_CrossHairCancelled ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_CrossHairCancelled</Name>
                  <Signature>void remove_CrossHairCancelled ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnKeyPress</Name>
                  <Signature>void OnKeyPress (object, TestAutomationFX.Core.Hooks.KeyPressEventArgsEx)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, TestAutomationFX.Core.Hooks.KeyPressEventArgsEx)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnPictureBoxMouseDown</Name>
                  <Signature>void OnPictureBoxMouseDown (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnPictureBoxMouseMove</Name>
                  <Signature>void OnPictureBoxMouseMove (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnPictureBoxMouseUp</Name>
                  <Signature>void OnPictureBoxMouseUp (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CancelCrossHair</Name>
                  <Signature>void CancelCrossHair ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CancelCrossHair</Name>
                  <Signature>void CancelCrossHair ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ResetControl</Name>
                  <Signature>void ResetControl ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireCrossHairMove</Name>
                  <Signature>void FireCrossHairMove (TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FireCrossHairMove</Name>
                  <Signature>void FireCrossHairMove (TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireCrossHairPicked</Name>
                  <Signature>void FireCrossHairPicked (TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FireCrossHairPicked</Name>
                  <Signature>void FireCrossHairPicked (TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireCrossHairDropped</Name>
                  <Signature>void FireCrossHairDropped (TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FireCrossHairDropped</Name>
                  <Signature>void FireCrossHairDropped (TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireCrossHairCancelled</Name>
                  <Signature>void FireCrossHairCancelled ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FireCrossHairCancelled</Name>
                  <Signature>void FireCrossHairCancelled ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Event>
                <Original>
                  <Name>CrossHairMove</Name>
                </Original>
                <Obfuscated>
                  <Name>CrossHairMove</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>CrossHairPicked</Name>
                </Original>
                <Obfuscated>
                  <Name>CrossHairPicked</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>CrossHairDropped</Name>
                </Original>
                <Obfuscated>
                  <Name>CrossHairDropped</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>CrossHairCancelled</Name>
                </Original>
                <Obfuscated>
                  <Name>CrossHairCancelled</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.CrossHairEventHandler</Name>
              <NewName>TestAutomationFX.UI.CrossHairEventHandler</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object, native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object, native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Invoke</Name>
                  <Signature>void Invoke (object, TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Invoke</Name>
                  <Signature>void Invoke (object, TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BeginInvoke</Name>
                  <Signature>[mscorlib] System.IAsyncResult BeginInvoke (object, TestAutomationFX.UI.CrossHairEventArgs, [mscorlib] System.AsyncCallback, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>BeginInvoke</Name>
                  <Signature>[mscorlib] System.IAsyncResult BeginInvoke (object, TestAutomationFX.UI.CrossHairEventArgs, [mscorlib] System.AsyncCallback, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EndInvoke</Name>
                  <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>EndInvoke</Name>
                  <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.CrossHairEventArgs</Name>
              <NewName>TestAutomationFX.UI.CrossHairEventArgs</NewName>
              <Field>
                <Original>
                  <Name>m_X</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Y</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_X</Name>
                  <Signature>int32 get_X ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_X</Name>
                  <Signature>int32 get_X ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_X</Name>
                  <Signature>void set_X (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_X</Name>
                  <Signature>void set_X (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Y</Name>
                  <Signature>int32 get_Y ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Y</Name>
                  <Signature>int32 get_Y ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Y</Name>
                  <Signature>void set_Y (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Y</Name>
                  <Signature>void set_Y (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Point</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_Point ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Point</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_Point ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>X</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>X</Name>
                  <Signature>int32 X</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Y</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Y</Name>
                  <Signature>int32 Y</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Point</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                </Original>
                <Obfuscated>
                  <Name>Point</Name>
                  <Signature>[System.Drawing] System.Drawing.Point Point</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.DelayFormHelper</Name>
              <NewName>TestAutomationFX.UI.DelayFormHelper</NewName>
              <Field>
                <Original>
                  <Name>m_DelayForm</Name>
                  <Signature>TestAutomationFX.UI.DelayForm</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.DelayForm</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>ShowDelayForm</Name>
                  <Signature>static [mscorlib] System.IDisposable ShowDelayForm ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ShowDelayForm</Name>
                  <Signature>static [mscorlib] System.IDisposable ShowDelayForm ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.DelayForm)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.DelayForm)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.IDisposable.Dispose</Name>
                  <Signature>void System.IDisposable.Dispose ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.IDisposable.Dispose</Name>
                  <Signature>void System.IDisposable.Dispose ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <NestedType>
                <Name>NoParamDelegate</Name>
                <NewName>a</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>&lt;&gt;c__DisplayClass1</Name>
                <NewName>&lt;&gt;c__DisplayClass1</NewName>
                <Field>
                  <Original>
                    <Name>newDelayForm</Name>
                    <Signature>TestAutomationFX.UI.DelayForm</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>newDelayForm</Name>
                    <Signature>TestAutomationFX.UI.DelayForm</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;ShowDelayForm&gt;b__0</Name>
                    <Signature>void &lt;ShowDelayForm&gt;b__0 ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;ShowDelayForm&gt;b__0</Name>
                    <Signature>void &lt;ShowDelayForm&gt;b__0 ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.EnterLicenseKeyForm</Name>
              <NewName>TestAutomationFX.UI.EnterLicenseKeyForm</NewName>
              <Field>
                <Original>
                  <Name>BCM_SETSHIELD</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>unsigned int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Ok</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Cancel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_LicenseKey</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MaskedTextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MaskedTextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ErrorProvider</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ErrorProvider</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ErrorProvider</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>SendMessage</Name>
                  <Signature>static int32 SendMessage (native int, unsigned int32, int32, native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static int32 a (native int, unsigned int32, int32, native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ValidateLicense</Name>
                  <Signature>void ValidateLicense ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ValidateLicense</Name>
                  <Signature>void ValidateLicense ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsLicenseKeyValid</Name>
                  <Signature>bool get_IsLicenseKeyValid ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCurrentLicenseKey</Name>
                  <Signature>string GetCurrentLicenseKey ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowEnterLicenseKeyDialog</Name>
                  <Signature>static [System.Windows.Forms] System.Windows.Forms.DialogResult ShowEnterLicenseKeyDialog ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ShowEnterLicenseKeyDialog</Name>
                  <Signature>static [System.Windows.Forms] System.Windows.Forms.DialogResult ShowEnterLicenseKeyDialog ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RestartWriteLicensKey</Name>
                  <Signature>bool RestartWriteLicensKey ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RestartWriteLicensKey</Name>
                  <Signature>bool RestartWriteLicensKey ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_LicenseKey</Name>
                  <Signature>string get_LicenseKey ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_LicenseKey</Name>
                  <Signature>string get_LicenseKey ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnLicenseKeyValidating</Name>
                  <Signature>void OnLicenseKeyValidating (object, [System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.CancelEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnEnterLicenseKeyFormLoad</Name>
                  <Signature>void OnEnterLicenseKeyFormLoad (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnLicenseKeyTextChanged</Name>
                  <Signature>void OnLicenseKeyTextChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>IsLicenseKeyValid</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>LicenseKey</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>LicenseKey</Name>
                  <Signature>string LicenseKey</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.FadeForm</Name>
              <NewName>TestAutomationFX.UI.FadeForm</NewName>
              <Field>
                <Original>
                  <Name>m_FadeOutTimer</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ShowWithoutActivation</Name>
                  <Signature>bool get_ShowWithoutActivation ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ShowWithoutActivation</Name>
                  <Signature>bool get_ShowWithoutActivation ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnFadeOutTimerTick</Name>
                  <Signature>void OnFadeOutTimerTick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnVisibleChanged</Name>
                  <Signature>void OnVisibleChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnVisibleChanged</Name>
                  <Signature>void OnVisibleChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Flash</Name>
                  <Signature>void Flash ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Flash</Name>
                  <Signature>void Flash ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HideFast</Name>
                  <Signature>void HideFast ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>HideFast</Name>
                  <Signature>void HideFast ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ShowWithoutActivation</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ShowWithoutActivation</Name>
                  <Signature>bool ShowWithoutActivation</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>HideDelegate</Name>
                <NewName>a</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.UI.FindProcessInfo</Name>
              <NewName>TestAutomationFX.Core.UI.FindProcessInfo</NewName>
              <Field>
                <Original>
                  <Name>&lt;ProcessName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ImagePath&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;CommandLineArguments&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;UserName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ProcessId&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;MatchedIndex&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;UsedMatchedProperties&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_ProcessName</Name>
                  <Signature>string get_ProcessName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ProcessName</Name>
                  <Signature>string get_ProcessName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ProcessName</Name>
                  <Signature>void set_ProcessName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ProcessName</Name>
                  <Signature>void set_ProcessName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ImagePath</Name>
                  <Signature>string get_ImagePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ImagePath</Name>
                  <Signature>string get_ImagePath ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ImagePath</Name>
                  <Signature>void set_ImagePath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ImagePath</Name>
                  <Signature>void set_ImagePath (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CommandLineArguments</Name>
                  <Signature>string get_CommandLineArguments ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CommandLineArguments</Name>
                  <Signature>string get_CommandLineArguments ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CommandLineArguments</Name>
                  <Signature>void set_CommandLineArguments (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CommandLineArguments</Name>
                  <Signature>void set_CommandLineArguments (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UserName</Name>
                  <Signature>string get_UserName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UserName</Name>
                  <Signature>string get_UserName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UserName</Name>
                  <Signature>void set_UserName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UserName</Name>
                  <Signature>void set_UserName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ProcessId</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_ProcessId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ProcessId</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_ProcessId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ProcessId</Name>
                  <Signature>void set_ProcessId ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ProcessId</Name>
                  <Signature>void set_ProcessId ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_MatchedIndex ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_MatchedIndex ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MatchedIndex</Name>
                  <Signature>void set_MatchedIndex ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MatchedIndex</Name>
                  <Signature>void set_MatchedIndex ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UsedMatchedProperties</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties &gt; get_UsedMatchedProperties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UsedMatchedProperties</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties &gt; get_UsedMatchedProperties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UsedMatchedProperties</Name>
                  <Signature>void set_UsedMatchedProperties ([mscorlib] System.Nullable`1&lt; TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UsedMatchedProperties</Name>
                  <Signature>void set_UsedMatchedProperties ([mscorlib] System.Nullable`1&lt; TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ProcessName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ProcessName</Name>
                  <Signature>string ProcessName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ImagePath</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ImagePath</Name>
                  <Signature>string ImagePath</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CommandLineArguments</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>CommandLineArguments</Name>
                  <Signature>string CommandLineArguments</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UserName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>UserName</Name>
                  <Signature>string UserName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ProcessId</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>ProcessId</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; ProcessId</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; MatchedIndex</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UsedMatchedProperties</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>UsedMatchedProperties</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; TestAutomationFX.UI.UIApplication/UIApplicationMatchedProperties &gt; UsedMatchedProperties</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Description</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Description</Name>
                  <Signature>string Description</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.GridCellsCollection</Name>
              <NewName>TestAutomationFX.UI.GridCellsCollection</NewName>
              <Field>
                <Original>
                  <Name>m_Grid</Name>
                  <Signature>TestAutomationFX.UI.UIGridView</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIGridView</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Grid</Name>
                  <Signature>TestAutomationFX.UI.UIGridView get_Grid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Grid</Name>
                  <Signature>TestAutomationFX.UI.UIGridView get_Grid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Grid</Name>
                  <Signature>void set_Grid (TestAutomationFX.UI.UIGridView)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Grid</Name>
                  <Signature>void set_Grid (TestAutomationFX.UI.UIGridView)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIGridView)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell get_Item (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell get_Item (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell get_Item (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell get_Item (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell get_Item (int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell get_Item (int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell get_Item (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell get_Item (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Grid</Name>
                  <Signature>TestAutomationFX.UI.UIGridView</Signature>
                </Original>
                <Obfuscated>
                  <Name>Grid</Name>
                  <Signature>TestAutomationFX.UI.UIGridView Grid</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell (int32, int32)</Signature>
                </Original>
                <Obfuscated>
                  <Name>Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell Item (int32, int32)</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell (string, string)</Signature>
                </Original>
                <Obfuscated>
                  <Name>Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell Item (string, string)</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell (int32, string)</Signature>
                </Original>
                <Obfuscated>
                  <Name>Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell Item (int32, string)</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell (string, int32)</Signature>
                </Original>
                <Obfuscated>
                  <Name>Item</Name>
                  <Signature>TestAutomationFX.UI.UIGridCell Item (string, int32)</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.HighlightRectangle</Name>
              <NewName>TestAutomationFX.UI.HighlightRectangle</NewName>
              <Field>
                <Original>
                  <Name>m_BottomForm</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Form</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Form</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Color</Name>
                  <Signature>[System.Drawing] System.Drawing.Color</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Color</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_LeftForm</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Form</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Form</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_RightForm</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Form</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Form</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Visible</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TopForm</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Form</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Form</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Width</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_FlashTimer</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MouseDownPosition</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MouseDownRectanglePosition</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MouseDownRectangleSize</Name>
                  <Signature>[System.Drawing] System.Drawing.Size</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Size</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MouseDown</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Movable</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Resizing</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_BoundsChanged</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>add_m_BoundsChanged</Name>
                  <Signature>void add_m_BoundsChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_m_BoundsChanged</Name>
                  <Signature>void remove_m_BoundsChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupRectangleForms</Name>
                  <Signature>void SetupRectangleForms ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnMouseUp</Name>
                  <Signature>void OnMouseUp (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnMouseMove</Name>
                  <Signature>void OnMouseMove (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnMouseDown</Name>
                  <Signature>void OnMouseDown (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupFlashTimer</Name>
                  <Signature>void SetupFlashTimer ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnFlashTimerTick</Name>
                  <Signature>void OnFlashTimerTick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Opacity</Name>
                  <Signature>void set_Opacity (float64)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Opacity</Name>
                  <Signature>void set_Opacity (float64)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Opacity</Name>
                  <Signature>float64 get_Opacity ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Opacity</Name>
                  <Signature>float64 get_Opacity ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetOpacitySafe</Name>
                  <Signature>void SetOpacitySafe (float64)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (float64)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetOpacity</Name>
                  <Signature>void SetOpacity ([System.Windows.Forms] System.Windows.Forms.Form, float64)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Windows.Forms] System.Windows.Forms.Form, float64)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SafeLayout</Name>
                  <Signature>void SafeLayout ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Layout</Name>
                  <Signature>void Layout ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SafeShow</Name>
                  <Signature>void SafeShow (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Show</Name>
                  <Signature>void Show (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Color</Name>
                  <Signature>void set_Color ([System.Drawing] System.Drawing.Color)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Color</Name>
                  <Signature>void set_Color ([System.Drawing] System.Drawing.Color)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetColorSafe</Name>
                  <Signature>void SetColorSafe ([System.Drawing] System.Drawing.Color)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Drawing] System.Drawing.Color)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetColor</Name>
                  <Signature>void SetColor ([System.Windows.Forms] System.Windows.Forms.Form, [System.Drawing] System.Drawing.Color)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Windows.Forms] System.Windows.Forms.Form, [System.Drawing] System.Drawing.Color)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Bounds</Name>
                  <Signature>void set_Bounds ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Bounds</Name>
                  <Signature>void set_Bounds ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Width</Name>
                  <Signature>void set_Width (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Width</Name>
                  <Signature>void set_Width (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Visible</Name>
                  <Signature>bool get_Visible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Visible</Name>
                  <Signature>bool get_Visible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Visible</Name>
                  <Signature>void set_Visible (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Visible</Name>
                  <Signature>void set_Visible (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Movable</Name>
                  <Signature>bool get_Movable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Movable</Name>
                  <Signature>bool get_Movable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Movable</Name>
                  <Signature>void set_Movable (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Movable</Name>
                  <Signature>void set_Movable (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireBoundsChanged</Name>
                  <Signature>void FireBoundsChanged ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DisconnectBoundsChangedEvent</Name>
                  <Signature>void DisconnectBoundsChangedEvent ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Cursor</Name>
                  <Signature>void set_Cursor ([System.Windows.Forms] System.Windows.Forms.Cursor)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Cursor</Name>
                  <Signature>void set_Cursor ([System.Windows.Forms] System.Windows.Forms.Cursor)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Cursor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor get_Cursor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Cursor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor get_Cursor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetCursorSafe</Name>
                  <Signature>void SetCursorSafe ([System.Windows.Forms] System.Windows.Forms.Cursor)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Windows.Forms] System.Windows.Forms.Cursor)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetCursor</Name>
                  <Signature>void SetCursor ([System.Windows.Forms] System.Windows.Forms.Form, [System.Windows.Forms] System.Windows.Forms.Cursor)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Windows.Forms] System.Windows.Forms.Form, [System.Windows.Forms] System.Windows.Forms.Cursor)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsResizingCorner</Name>
                  <Signature>bool IsResizingCorner ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_BoundsChanged</Name>
                  <Signature>void add_BoundsChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_BoundsChanged</Name>
                  <Signature>void add_BoundsChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_BoundsChanged</Name>
                  <Signature>void remove_BoundsChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_BoundsChanged</Name>
                  <Signature>void remove_BoundsChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Opacity</Name>
                  <Signature>float64</Signature>
                </Original>
                <Obfuscated>
                  <Name>Opacity</Name>
                  <Signature>float64 Opacity</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Color</Name>
                  <Signature>[System.Drawing] System.Drawing.Color</Signature>
                </Original>
                <Obfuscated>
                  <Name>Color</Name>
                  <Signature>[System.Drawing] System.Drawing.Color Color</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle Bounds</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Width</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Width</Name>
                  <Signature>int32 Width</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Visible</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Visible</Name>
                  <Signature>bool Visible</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Movable</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Movable</Name>
                  <Signature>bool Movable</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Cursor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor</Signature>
                </Original>
                <Obfuscated>
                  <Name>Cursor</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Cursor Cursor</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>m_BoundsChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>BoundsChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>BoundsChanged</Name>
                </Obfuscated>
              </Event>
              <NestedType>
                <Name>VoidDelegate</Name>
                <NewName>a</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>ShowDelegate</Name>
                <NewName>b</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke (bool)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke (bool)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (bool, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (bool, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>SetCursorDelegate</Name>
                <NewName>c</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ([System.Windows.Forms] System.Windows.Forms.Form, [System.Windows.Forms] System.Windows.Forms.Cursor)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ([System.Windows.Forms] System.Windows.Forms.Form, [System.Windows.Forms] System.Windows.Forms.Cursor)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([System.Windows.Forms] System.Windows.Forms.Form, [System.Windows.Forms] System.Windows.Forms.Cursor, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([System.Windows.Forms] System.Windows.Forms.Form, [System.Windows.Forms] System.Windows.Forms.Cursor, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>SetColorDelegate</Name>
                <NewName>d</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ([System.Windows.Forms] System.Windows.Forms.Form, [System.Drawing] System.Drawing.Color)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ([System.Windows.Forms] System.Windows.Forms.Form, [System.Drawing] System.Drawing.Color)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([System.Windows.Forms] System.Windows.Forms.Form, [System.Drawing] System.Drawing.Color, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([System.Windows.Forms] System.Windows.Forms.Form, [System.Drawing] System.Drawing.Color, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>SetOpacityDelegate</Name>
                <NewName>e</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ([System.Windows.Forms] System.Windows.Forms.Form, float64)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ([System.Windows.Forms] System.Windows.Forms.Form, float64)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([System.Windows.Forms] System.Windows.Forms.Form, float64, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([System.Windows.Forms] System.Windows.Forms.Form, float64, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.InfoFormBase</Name>
              <NewName>TestAutomationFX.UI.InfoFormBase</NewName>
              <Field>
                <Original>
                  <Name>m_HighlightRectangle</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_BoundsHighlighter</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle get_BoundsHighlighter ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_BoundsHighlighter</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle get_BoundsHighlighter ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnVisibleChanged</Name>
                  <Signature>void OnVisibleChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnVisibleChanged</Name>
                  <Signature>void OnVisibleChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Hide</Name>
                  <Signature>void Hide ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Hide</Name>
                  <Signature>void Hide ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>BoundsHighlighter</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>BoundsHighlighter</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle BoundsHighlighter</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.InsertRecordedCodeForm</Name>
              <NewName>O</NewName>
              <Field>
                <Original>
                  <Name>m_VSCodeHelper</Name>
                  <Signature>TestAutomationFX.Core.CodeGeneration.VSCodeHelper</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>e</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Code</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_LastMethodName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_NewMethodName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AddCodeToNewMethodRadioButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AddCodeToExistingRadioButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CopyCodeToClipboardRadioButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_NewMethodNameTextBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MethodNamesComboBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ComboBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ComboBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ButtonCancel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ButtonOK</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>pictureBox1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_InsertInMethodCodeModeGroupBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ReplaceCodeRadioButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AppendAtTheEndRadioButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_InsertAtBeginningRadioButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.RadioButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.CodeGeneration.VSCodeHelper, string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (e, string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.CodeGeneration.VSCodeHelper, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (e, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupControls</Name>
                  <Signature>void SetupControls ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_VSCodeHelper</Name>
                  <Signature>TestAutomationFX.Core.CodeGeneration.VSCodeHelper get_VSCodeHelper ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>e b ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_VSCodeHelper</Name>
                  <Signature>void set_VSCodeHelper (TestAutomationFX.Core.CodeGeneration.VSCodeHelper)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (e)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Code</Name>
                  <Signature>string get_Code ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string c ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Code</Name>
                  <Signature>void set_Code (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EnableControls</Name>
                  <Signature>void EnableControls ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnRadioButtonCheckedChanged</Name>
                  <Signature>void OnRadioButtonCheckedChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnButtonOKClick</Name>
                  <Signature>void OnButtonOKClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMethodNameOK</Name>
                  <Signature>bool IsMethodNameOK (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool b (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>VSCodeHelper</Name>
                  <Signature>TestAutomationFX.Core.CodeGeneration.VSCodeHelper</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.CodeGeneration.VSCodeHelper</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Code</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.UI.IUIObjectProvider</Name>
              <NewName>TestAutomationFX.Core.UI.IUIObjectProvider</NewName>
              <Method>
                <Original>
                  <Name>AddedUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddedUIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddedUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddedUIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddingUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddingUIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddingUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddingUIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject CreateUIObject (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject CreateUIObject (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.MappingStatus</Name>
              <NewName>TestAutomationFX.UI.MappingStatus</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>New</Name>
                  <Signature>TestAutomationFX.UI.MappingStatus</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>New</Name>
                  <Signature>TestAutomationFX.UI.MappingStatus</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Adding</Name>
                  <Signature>TestAutomationFX.UI.MappingStatus</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Adding</Name>
                  <Signature>TestAutomationFX.UI.MappingStatus</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Added</Name>
                  <Signature>TestAutomationFX.UI.MappingStatus</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Added</Name>
                  <Signature>TestAutomationFX.UI.MappingStatus</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.MatchedPropertyAttribute</Name>
              <NewName>P</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.MouseController</Name>
              <NewName>TestAutomationFX.UI.MouseController</NewName>
              <Field>
                <Original>
                  <Name>m_TimeForMouseMove</Name>
                  <Signature>float64</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>float64</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_DefaultMouseButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WHEELDELTA</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>UseSetCursorPos</Name>
                  <Signature>bool</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DefaultMouseButton</Name>
                  <Signature>static [System.Windows.Forms] System.Windows.Forms.MouseButtons get_DefaultMouseButton ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DefaultMouseButton</Name>
                  <Signature>static [System.Windows.Forms] System.Windows.Forms.MouseButtons get_DefaultMouseButton ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_DefaultMouseButton</Name>
                  <Signature>static void set_DefaultMouseButton ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_DefaultMouseButton</Name>
                  <Signature>static void set_DefaultMouseButton ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TimeForMouseMove</Name>
                  <Signature>static float64 get_TimeForMouseMove ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TimeForMouseMove</Name>
                  <Signature>static float64 get_TimeForMouseMove ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TimeForMouseMove</Name>
                  <Signature>static void set_TimeForMouseMove (float64)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TimeForMouseMove</Name>
                  <Signature>static void set_TimeForMouseMove (float64)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseEvent</Name>
                  <Signature>static void MouseEvent (TestAutomationFX.UI.MouseEventFlags, int32, int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MouseEvent</Name>
                  <Signature>static void MouseEvent (TestAutomationFX.UI.MouseEventFlags, int32, int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MoveTo</Name>
                  <Signature>static void MoveTo (int32, int32, TestAutomationFX.Core.UI.MousePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MoveTo</Name>
                  <Signature>static void MoveTo (int32, int32, TestAutomationFX.Core.UI.MousePath)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MoveTo</Name>
                  <Signature>static void MoveTo (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MoveTo</Name>
                  <Signature>static void MoveTo (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InternalMoveTo</Name>
                  <Signature>static void InternalMoveTo (int32, int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (int32, int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetMousePosition</Name>
                  <Signature>static void SetMousePosition (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetCursorPosWithMouseEvent</Name>
                  <Signature>static void SetCursorPosWithMouseEvent (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static void b (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPointInPrimaryScreenCoordinates</Name>
                  <Signature>static [System.Drawing] System.Drawing.Point GetPointInPrimaryScreenCoordinates (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [System.Drawing] System.Drawing.Point a (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PrimaryScreen</Name>
                  <Signature>static [System.Windows.Forms] System.Windows.Forms.Screen get_PrimaryScreen ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [System.Windows.Forms] System.Windows.Forms.Screen a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Press</Name>
                  <Signature>static void Press ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Press</Name>
                  <Signature>static void Press ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Press</Name>
                  <Signature>static void Press ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Press</Name>
                  <Signature>static void Press ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Release</Name>
                  <Signature>static void Release ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Release</Name>
                  <Signature>static void Release ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Release</Name>
                  <Signature>static void Release ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Release</Name>
                  <Signature>static void Release ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Click</Name>
                  <Signature>static void Click ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Click</Name>
                  <Signature>static void Click ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RightClick</Name>
                  <Signature>static void RightClick ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RightClick</Name>
                  <Signature>static void RightClick ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Click</Name>
                  <Signature>static void Click ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Click</Name>
                  <Signature>static void Click ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoubleClick</Name>
                  <Signature>static void DoubleClick ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoubleClick</Name>
                  <Signature>static void DoubleClick ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ScrollWheelUp</Name>
                  <Signature>static void ScrollWheelUp ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ScrollWheelUp</Name>
                  <Signature>static void ScrollWheelUp ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ScrollWheelDown</Name>
                  <Signature>static void ScrollWheelDown ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ScrollWheelDown</Name>
                  <Signature>static void ScrollWheelDown ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ScrollWheelRight</Name>
                  <Signature>static void ScrollWheelRight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ScrollWheelRight</Name>
                  <Signature>static void ScrollWheelRight ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ScrollWheelLeft</Name>
                  <Signature>static void ScrollWheelLeft ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ScrollWheelLeft</Name>
                  <Signature>static void ScrollWheelLeft ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoubleClick</Name>
                  <Signature>static void DoubleClick ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoubleClick</Name>
                  <Signature>static void DoubleClick ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Drag</Name>
                  <Signature>static void Drag (int32, int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Drag</Name>
                  <Signature>static void Drag (int32, int32, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Drag</Name>
                  <Signature>static void Drag (int32, int32, int32, int32, [System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Drag</Name>
                  <Signature>static void Drag (int32, int32, int32, int32, [System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseEventUpValue</Name>
                  <Signature>static TestAutomationFX.UI.MouseEventFlags MouseEventUpValue ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static TestAutomationFX.UI.MouseEventFlags a ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MouseEventDownValue</Name>
                  <Signature>static TestAutomationFX.UI.MouseEventFlags MouseEventDownValue ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static TestAutomationFX.UI.MouseEventFlags b ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>DefaultMouseButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons</Signature>
                </Original>
                <Obfuscated>
                  <Name>DefaultMouseButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons DefaultMouseButton</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TimeForMouseMove</Name>
                  <Signature>float64</Signature>
                </Original>
                <Obfuscated>
                  <Name>TimeForMouseMove</Name>
                  <Signature>float64 TimeForMouseMove</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PrimaryScreen</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Screen</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Screen</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.MouseData</Name>
              <NewName>TestAutomationFX.UI.MouseData</NewName>
              <Field>
                <Original>
                  <Name>MousePositionX</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MousePositionX</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MousePositionY</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MousePositionY</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Button</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Button</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.MouseButtons</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ButtonState</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ButtonState</Name>
                  <Signature>TestAutomationFX.Core.Hooks.MouseEventType</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.MouseEventFlags</Name>
              <NewName>TestAutomationFX.UI.MouseEventFlags</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>LEFTDOWN</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>LEFTDOWN</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>LEFTUP</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>LEFTUP</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MIDDLEDOWN</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MIDDLEDOWN</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MIDDLEUP</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MIDDLEUP</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MOVE</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MOVE</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ABSOLUTE</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ABSOLUTE</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>RIGHTDOWN</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RIGHTDOWN</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>RIGHTUP</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RIGHTUP</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>XDOWN</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>XDOWN</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>XUP</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>XUP</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>WHEEL</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>WHEEL</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>HWHEEL</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>HWHEEL</Name>
                  <Signature>TestAutomationFX.UI.MouseEventFlags</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.UI.MousePath</Name>
              <NewName>TestAutomationFX.Core.UI.MousePath</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Straight</Name>
                  <Signature>TestAutomationFX.Core.UI.MousePath</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Straight</Name>
                  <Signature>TestAutomationFX.Core.UI.MousePath</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VerticalHorizontal</Name>
                  <Signature>TestAutomationFX.Core.UI.MousePath</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VerticalHorizontal</Name>
                  <Signature>TestAutomationFX.Core.UI.MousePath</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>HorizontalVertical</Name>
                  <Signature>TestAutomationFX.Core.UI.MousePath</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>HorizontalVertical</Name>
                  <Signature>TestAutomationFX.Core.UI.MousePath</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Direct</Name>
                  <Signature>TestAutomationFX.Core.UI.MousePath</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Direct</Name>
                  <Signature>TestAutomationFX.Core.UI.MousePath</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.ObjectFinderControl</Name>
              <NewName>TestAutomationFX.UI.ObjectFinderControl</NewName>
              <Field>
                <Original>
                  <Name>m_WindowController</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ActiveControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_HighlightRectangleWindow</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_HighlightRectangleMsaa</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_HighlightRectangleAutomationElement</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_HighlightRectangleControlPart</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>TestAutomationFX.UI.HighlightRectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ShowHighlightRectangle</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_FindInCurrentProcess</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PreLoadAutomationAssembly</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MsaaPreloaded</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ControlPartProviderFactory</Name>
                  <Signature>TestAutomationFX.ControlParts.ControlPartProviderFactory</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ControlParts.ControlPartProviderFactory</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ActiveObjectChanged</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_BestTechnologyStrategy</Name>
                  <Signature>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ActiveScreenPoint&gt;k__BackingField</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>add_ActiveObjectChanged</Name>
                  <Signature>void add_ActiveObjectChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_ActiveObjectChanged</Name>
                  <Signature>void add_ActiveObjectChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_ActiveObjectChanged</Name>
                  <Signature>void remove_ActiveObjectChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_ActiveObjectChanged</Name>
                  <Signature>void remove_ActiveObjectChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ActiveScreenPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_ActiveScreenPoint ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ActiveScreenPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point get_ActiveScreenPoint ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ActiveScreenPoint</Name>
                  <Signature>void set_ActiveScreenPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ActiveScreenPoint</Name>
                  <Signature>void set_ActiveScreenPoint ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_FindInCurrentProcess</Name>
                  <Signature>bool get_FindInCurrentProcess ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_FindInCurrentProcess</Name>
                  <Signature>bool get_FindInCurrentProcess ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_FindInCurrentProcess</Name>
                  <Signature>void set_FindInCurrentProcess (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_FindInCurrentProcess</Name>
                  <Signature>void set_FindInCurrentProcess (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>PreLoadAssemblies</Name>
                  <Signature>void PreLoadAssemblies ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>PreLoadUIAutomationAssemblies</Name>
                  <Signature>void PreLoadUIAutomationAssemblies ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>PreLoadMsaaFramework</Name>
                  <Signature>void PreLoadMsaaFramework ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ShowHighlightRectangle</Name>
                  <Signature>bool get_ShowHighlightRectangle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ShowHighlightRectangle</Name>
                  <Signature>bool get_ShowHighlightRectangle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ShowHighlightRectangle</Name>
                  <Signature>void set_ShowHighlightRectangle (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ShowHighlightRectangle</Name>
                  <Signature>void set_ShowHighlightRectangle (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ActiveWindowController</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_ActiveWindowController ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ActiveWindowController</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_ActiveWindowController ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ActiveWindowController</Name>
                  <Signature>void set_ActiveWindowController (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ActiveWindowController</Name>
                  <Signature>void set_ActiveWindowController (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ActiveMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ActiveMsaaObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ActiveMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ActiveMsaaObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ActiveMsaaObject</Name>
                  <Signature>void set_ActiveMsaaObject (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ActiveMsaaObject</Name>
                  <Signature>void set_ActiveMsaaObject (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ActiveControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo get_ActiveControlPartInfo ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ActiveControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo get_ActiveControlPartInfo ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ActiveControlPartInfo</Name>
                  <Signature>void set_ActiveControlPartInfo ([TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ActiveControlPartInfo</Name>
                  <Signature>void set_ActiveControlPartInfo ([TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ActiveAutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper get_ActiveAutomationElementWrapper ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ActiveAutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper get_ActiveAutomationElementWrapper ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ActiveAutomationElementWrapper</Name>
                  <Signature>void set_ActiveAutomationElementWrapper (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ActiveAutomationElementWrapper</Name>
                  <Signature>void set_ActiveAutomationElementWrapper (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateHighlightRectangle</Name>
                  <Signature>void UpdateHighlightRectangle (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddActiveObjectToView</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddActiveObjectToView (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddActiveObjectToView</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddActiveObjectToView (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddActiveObjectBatch</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddActiveObjectBatch (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject a (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetChildControlPart</Name>
                  <Signature>TestAutomationFX.UI.UIObject GetChildControlPart (TestAutomationFX.UI.UIObject, [System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject a (TestAutomationFX.UI.UIObject, [System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddObjectFromPoint</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddObjectFromPoint (int32, int32, TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddObjectFromPoint</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddObjectFromPoint (int32, int32, TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireCrossHairMove</Name>
                  <Signature>void FireCrossHairMove (TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FireCrossHairMove</Name>
                  <Signature>void FireCrossHairMove (TestAutomationFX.UI.CrossHairEventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView get_UIMapDesignerView ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView get_UIMapDesignerView ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UIMapDesignerView</Name>
                  <Signature>void set_UIMapDesignerView (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UIMapDesignerView</Name>
                  <Signature>void set_UIMapDesignerView (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap get_UIMap ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>TestAutomationFX.UI.UIMap d ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetActiveObjectFromPoint</Name>
                  <Signature>void SetActiveObjectFromPoint (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetActiveObjectFromPoint</Name>
                  <Signature>void SetActiveObjectFromPoint (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetActiveObjectFromPointInternal</Name>
                  <Signature>void SetActiveObjectFromPointInternal (int32, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (int32, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMsaaObjectFromPoint</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetMsaaObjectFromPoint (int32, int32, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo, TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject a (int32, int32, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo, TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetAutomationElementWrapperFromPoint</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper GetAutomationElementWrapperFromPoint (int32, int32, TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper a (int32, int32, TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetControlPartInfoFromPoint</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo GetControlPartInfoFromPoint (int32, int32, TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo b (int32, int32, TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeAssemblyProbingManager</Name>
                  <Signature>void InitializeAssemblyProbingManager ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HideHighlightRectangles</Name>
                  <Signature>void HideHighlightRectangles ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>HideHighlightRectangles</Name>
                  <Signature>void HideHighlightRectangles ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearActiveObject</Name>
                  <Signature>void ClearActiveObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ClearActiveObject</Name>
                  <Signature>void ClearActiveObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FireActiveObjectChanged</Name>
                  <Signature>void FireActiveObjectChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FireActiveObjectChanged</Name>
                  <Signature>void FireActiveObjectChanged ([mscorlib] System.EventArgs)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ActiveScreenPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                </Original>
                <Obfuscated>
                  <Name>ActiveScreenPoint</Name>
                  <Signature>[System.Drawing] System.Drawing.Point ActiveScreenPoint</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>FindInCurrentProcess</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>FindInCurrentProcess</Name>
                  <Signature>bool FindInCurrentProcess</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ShowHighlightRectangle</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ShowHighlightRectangle</Name>
                  <Signature>bool ShowHighlightRectangle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ActiveWindowController</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                </Original>
                <Obfuscated>
                  <Name>ActiveWindowController</Name>
                  <Signature>TestAutomationFX.Core.WindowController ActiveWindowController</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ActiveMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>ActiveMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject ActiveMsaaObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ActiveControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo</Signature>
                </Original>
                <Obfuscated>
                  <Name>ActiveControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo ActiveControlPartInfo</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ActiveAutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper</Signature>
                </Original>
                <Obfuscated>
                  <Name>ActiveAutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper ActiveAutomationElementWrapper</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView</Signature>
                </Original>
                <Obfuscated>
                  <Name>UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView UIMapDesignerView</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.UI.UIMap</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>ActiveObjectChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>ActiveObjectChanged</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.ObjectInfoControl</Name>
              <NewName>TestAutomationFX.UI.ObjectInfoControl</NewName>
              <Field>
                <Original>
                  <Name>m_WindowController</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_MsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ActiveControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ElementGroupBoxBaseText</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ElementGroupBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_WindowGroupBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.GroupBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label4</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label3</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_DotNetName</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_WindowControlID</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_DotNetType</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_WindowClassName</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Windowtext</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label6</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label5</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_WindowHandle</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ElementRole</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label7</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label9</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ElementValue</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Name</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ElementName</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label10</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ElementId</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label12</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ElementBounds</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label11</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>l</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ElementState</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>l</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetActiveObjects</Name>
                  <Signature>void SetActiveObjects (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ActiveWindowController</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_ActiveWindowController ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ActiveWindowController</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_ActiveWindowController ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ActiveWindowController</Name>
                  <Signature>void set_ActiveWindowController (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ActiveWindowController</Name>
                  <Signature>void set_ActiveWindowController (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ActiveMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ActiveMsaaObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ActiveMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ActiveMsaaObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ActiveMsaaObject</Name>
                  <Signature>void set_ActiveMsaaObject (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ActiveMsaaObject</Name>
                  <Signature>void set_ActiveMsaaObject (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ActiveAutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper get_ActiveAutomationElementWrapper ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ActiveAutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper get_ActiveAutomationElementWrapper ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ActiveAutomationElementWrapper</Name>
                  <Signature>void set_ActiveAutomationElementWrapper (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ActiveAutomationElementWrapper</Name>
                  <Signature>void set_ActiveAutomationElementWrapper (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ActiveControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo get_ActiveControlPartInfo ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ActiveControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo get_ActiveControlPartInfo ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ActiveControlPartInfo</Name>
                  <Signature>void set_ActiveControlPartInfo ([TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ActiveControlPartInfo</Name>
                  <Signature>void set_ActiveControlPartInfo ([TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateControls</Name>
                  <Signature>void UpdateControls ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ActiveWindowController</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                </Original>
                <Obfuscated>
                  <Name>ActiveWindowController</Name>
                  <Signature>TestAutomationFX.Core.WindowController ActiveWindowController</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ActiveMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>ActiveMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject ActiveMsaaObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ActiveAutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper</Signature>
                </Original>
                <Obfuscated>
                  <Name>ActiveAutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper ActiveAutomationElementWrapper</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ActiveControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo</Signature>
                </Original>
                <Obfuscated>
                  <Name>ActiveControlPartInfo</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo ActiveControlPartInfo</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.UI.PropertyPathValueHelper</Name>
              <NewName>TestAutomationFX.Core.UI.PropertyPathValueHelper</NewName>
              <Method>
                <Original>
                  <Name>GetValueFromFullPropertyName</Name>
                  <Signature>static object GetValueFromFullPropertyName (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetValueFromFullPropertyName</Name>
                  <Signature>static object GetValueFromFullPropertyName (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPropertyInfo</Name>
                  <Signature>static [mscorlib] System.Reflection.PropertyInfo GetPropertyInfo (object, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.Reflection.PropertyInfo a (object, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPropertyValue</Name>
                  <Signature>static object GetPropertyValue (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetPropertyValue</Name>
                  <Signature>static object GetPropertyValue (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ParseIndexedProperty</Name>
                  <Signature>static bool ParseIndexedProperty (string, [out] int32&amp;, [out] string&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (string, [out] int32&amp;, [out] string&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPropertyFromArray</Name>
                  <Signature>static object GetPropertyFromArray (int32, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static object a (int32, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetValueFromDefaultMember</Name>
                  <Signature>static object GetValueFromDefaultMember (int32, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static object b (int32, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.PropertyValue</Name>
              <NewName>TestAutomationFX.UI.PropertyValue</NewName>
              <Field>
                <Original>
                  <Name>m_Name</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Value</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.IContainer)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.IContainer)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Name</Name>
                  <Signature>string get_Name ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Name</Name>
                  <Signature>void set_Name (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Name</Name>
                  <Signature>void set_Name (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Value</Name>
                  <Signature>string get_Value ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Value</Name>
                  <Signature>string get_Value ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Value</Name>
                  <Signature>void set_Value (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Value</Name>
                  <Signature>void set_Value (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Name</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Name</Name>
                  <Signature>string Name</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Value</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Value</Name>
                  <Signature>string Value</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.PropertyValues</Name>
              <NewName>TestAutomationFX.UI.PropertyValues</NewName>
              <Field>
                <Original>
                  <Name>m_Owner</Name>
                  <Signature>[System] System.ComponentModel.Component</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.Component</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.Component)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.Component)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Container</Name>
                  <Signature>[System] System.ComponentModel.IContainer get_Container ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Container</Name>
                  <Signature>[System] System.ComponentModel.IContainer get_Container ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Container</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                </Original>
                <Obfuscated>
                  <Name>Container</Name>
                  <Signature>[System] System.ComponentModel.IContainer Container</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.PropertyValuesTypeConverter</Name>
              <NewName>TestAutomationFX.UI.PropertyValuesTypeConverter</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.PropertyValueTypeConverter</Name>
              <NewName>TestAutomationFX.UI.PropertyValueTypeConverter</NewName>
              <Method>
                <Original>
                  <Name>ConvertTo</Name>
                  <Signature>object ConvertTo ([System] System.ComponentModel.ITypeDescriptorContext, [mscorlib] System.Globalization.CultureInfo, object, [mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ConvertTo</Name>
                  <Signature>object ConvertTo ([System] System.ComponentModel.ITypeDescriptorContext, [mscorlib] System.Globalization.CultureInfo, object, [mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CanConvertTo</Name>
                  <Signature>bool CanConvertTo ([System] System.ComponentModel.ITypeDescriptorContext, [mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CanConvertTo</Name>
                  <Signature>bool CanConvertTo ([System] System.ComponentModel.ITypeDescriptorContext, [mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCreateInstanceSupported</Name>
                  <Signature>bool GetCreateInstanceSupported ([System] System.ComponentModel.ITypeDescriptorContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetCreateInstanceSupported</Name>
                  <Signature>bool GetCreateInstanceSupported ([System] System.ComponentModel.ITypeDescriptorContext)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateInstance</Name>
                  <Signature>object CreateInstance ([System] System.ComponentModel.ITypeDescriptorContext, [mscorlib] System.Collections.IDictionary)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateInstance</Name>
                  <Signature>object CreateInstance ([System] System.ComponentModel.ITypeDescriptorContext, [mscorlib] System.Collections.IDictionary)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.RecordingForm</Name>
              <NewName>TestAutomationFX.UI.RecordingForm</NewName>
              <Field>
                <Original>
                  <Name>ClickEventName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>RightClickEventName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ClickedOutsideTestedApplicationEventName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ClickedNotRecognizedEventName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Recorder</Name>
                  <Signature>TestAutomationFX.Core.Recording.Recorder</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Recording.Recorder</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_RecordMouseEventDelegate</Name>
                  <Signature>TestAutomationFX.UI.RecordingForm/RecordMouseEventDelegate</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.RecordingForm/a</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_KeyboardEvents</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.KeyboardEvent &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.KeyboardEvent &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_LastFocusedWindow</Name>
                  <Signature>native int</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>native int</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ObjectFinderControl</Name>
                  <Signature>TestAutomationFX.UI.ObjectFinderControl</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.ObjectFinderControl</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_LastRecordedMouseDownPosition</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Point</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_RecordedActionsCount</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_BatchObject</Name>
                  <Signature>[mscorlib] System.IDisposable</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.IDisposable</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ToolStrip</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_StopButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PauseButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_RecordButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_RecordedEventsListBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_StatusStrip</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.StatusStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.StatusStrip</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_StatusLabel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripStatusLabel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripStatusLabel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ToolStripSeparator</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripSeparator</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripSeparator</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_VerifyButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_StartApplicationDropDownButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripDropDownButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripDropDownButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>testToolStripMenuItem</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>test2ToolStripMenuItem</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripMenuItem</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AddCommentButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>toolStripSeparator1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripSeparator</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripSeparator</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_DeleteButton</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ToolStripButton</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView get_UIMapDesignerView ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView get_UIMapDesignerView ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UIMapDesignerView</Name>
                  <Signature>void set_UIMapDesignerView (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UIMapDesignerView</Name>
                  <Signature>void set_UIMapDesignerView (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIMapSite</Name>
                  <Signature>[System] System.ComponentModel.ISite get_UIMapSite ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.ISite a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnIsRecordingChanged</Name>
                  <Signature>void OnIsRecordingChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateCommandUI</Name>
                  <Signature>void UpdateCommandUI ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CurrentStatusText</Name>
                  <Signature>string get_CurrentStatusText ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsPositionBelongingToRecordingProcess</Name>
                  <Signature>bool IsPositionBelongingToRecordingProcess (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnRecorderEventRecorded</Name>
                  <Signature>void OnRecorderEventRecorded (object, TestAutomationFX.Core.Recording.EventRecordedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, TestAutomationFX.Core.Recording.EventRecordedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CheckLicense</Name>
                  <Signature>bool CheckLicense ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>bool d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsOkToRecordMoreActions</Name>
                  <Signature>bool IsOkToRecordMoreActions ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>bool e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HandleKeyboardEvent</Name>
                  <Signature>void HandleKeyboardEvent (TestAutomationFX.Core.Recording.EventRecordedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.Recording.EventRecordedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsPauseRecordingShortcut</Name>
                  <Signature>bool IsPauseRecordingShortcut (TestAutomationFX.Core.KeyboardEvent)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (TestAutomationFX.Core.KeyboardEvent)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddRecordedKeyActions</Name>
                  <Signature>void AddRecordedKeyActions ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnRecordMouseEvent</Name>
                  <Signature>void OnRecordMouseEvent (TestAutomationFX.UI.MouseData)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.UI.MouseData)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoMouseEvent</Name>
                  <Signature>static void DoMouseEvent (TestAutomationFX.UI.MouseData)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static void b (TestAutomationFX.UI.MouseData)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RecordMouseEvent</Name>
                  <Signature>void RecordMouseEvent (TestAutomationFX.UI.MouseData)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (TestAutomationFX.UI.MouseData)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HandeExceptionDuringRecording</Name>
                  <Signature>void HandeExceptionDuringRecording ([mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetUIMapObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject GetUIMapObject (TestAutomationFX.UI.MouseData)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>TestAutomationFX.UI.UIObject d (TestAutomationFX.UI.MouseData)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateAndAddRecordedMouseAction</Name>
                  <Signature>void CreateAndAddRecordedMouseAction (TestAutomationFX.UI.MouseData)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e (TestAutomationFX.UI.MouseData)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetTimingInfo</Name>
                  <Signature>static void GetTimingInfo ([out] string&amp;, [System] System.Diagnostics.Stopwatch)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a ([out] string&amp;, [System] System.Diagnostics.Stopwatch)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateMouseAction</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedAction CreateMouseAction (TestAutomationFX.UI.MouseData)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedAction f (TestAutomationFX.UI.MouseData)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMethodName</Name>
                  <Signature>string GetMethodName ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a ([System.Windows.Forms] System.Windows.Forms.MouseButtons)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddToRecorderLog</Name>
                  <Signature>void AddToRecorderLog (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddToRecorderLog</Name>
                  <Signature>void AddToRecorderLog (string, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string, object)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnPauseButtonClick</Name>
                  <Signature>void OnPauseButtonClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>PauseRecording</Name>
                  <Signature>void PauseRecording ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>void g ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CopyCodeToClipboard</Name>
                  <Signature>void CopyCodeToClipboard ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>void h ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnRecordButtonClick</Name>
                  <Signature>void OnRecordButtonClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnStopButtonClick</Name>
                  <Signature>void OnStopButtonClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnFormClosed</Name>
                  <Signature>void OnFormClosed ([System.Windows.Forms] System.Windows.Forms.FormClosedEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnFormClosed</Name>
                  <Signature>void OnFormClosed ([System.Windows.Forms] System.Windows.Forms.FormClosedEventArgs)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StartRecording</Name>
                  <Signature>void StartRecording ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>StartRecording</Name>
                  <Signature>void StartRecording ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StartAddObjectBatch</Name>
                  <Signature>void StartAddObjectBatch ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>void i ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StopAddObjectBatch</Name>
                  <Signature>void StopAddObjectBatch ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>void j ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>StopRecording</Name>
                  <Signature>void StopRecording ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>StopRecording</Name>
                  <Signature>void StopRecording ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddCodeToVS</Name>
                  <Signature>void AddCodeToVS ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>void k ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SiteAllRecorderObjects</Name>
                  <Signature>void SiteAllRecorderObjects ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>l</Name>
                  <Signature>void l ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnRecordingFormFormClosing</Name>
                  <Signature>void OnRecordingFormFormClosing (object, [System.Windows.Forms] System.Windows.Forms.FormClosingEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.FormClosingEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RecordingForm_Shown</Name>
                  <Signature>void RecordingForm_Shown (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnVerifyButtonClick</Name>
                  <Signature>void OnVerifyButtonClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddRecordedAction</Name>
                  <Signature>void AddRecordedAction (TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.Recording.RecordedAction)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnToolStripMouseEnter</Name>
                  <Signature>void OnToolStripMouseEnter (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>void g (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnStartApplicationDropDownButtonOpening</Name>
                  <Signature>void OnStartApplicationDropDownButtonOpening (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>void h (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnStartApplicationDropDownButtonItemClicked</Name>
                  <Signature>void OnStartApplicationDropDownButtonItemClicked (object, [System.Windows.Forms] System.Windows.Forms.ToolStripItemClickedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.ToolStripItemClickedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAddComment</Name>
                  <Signature>void OnAddComment (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>i</Name>
                  <Signature>void i (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnDeleteButtonClick</Name>
                  <Signature>void OnDeleteButtonClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>j</Name>
                  <Signature>void j (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DeleteSelectedRecordedEvent</Name>
                  <Signature>void DeleteSelectedRecordedEvent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m</Name>
                  <Signature>void m ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnRecordedEventsListBoxSelectedIndexChanged</Name>
                  <Signature>void OnRecordedEventsListBoxSelectedIndexChanged (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>k</Name>
                  <Signature>void k (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnRecordedEventsListBoxKeyDown</Name>
                  <Signature>void OnRecordedEventsListBoxKeyDown (object, [System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>n</Name>
                  <Signature>void n ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView</Signature>
                </Original>
                <Obfuscated>
                  <Name>UIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView UIMapDesignerView</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIMapSite</Name>
                  <Signature>[System] System.ComponentModel.ISite</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[System] System.ComponentModel.ISite</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CurrentStatusText</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>RecordMouseEventDelegate</Name>
                <NewName>a</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke (TestAutomationFX.UI.MouseData)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke (TestAutomationFX.UI.MouseData)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (TestAutomationFX.UI.MouseData, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke (TestAutomationFX.UI.MouseData, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.RemapObjectForm</Name>
              <NewName>Q</NewName>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.Design.UIMapDesignerView)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetObjectName</Name>
                  <Signature>void SetObjectName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.UI.Scrollable</Name>
              <NewName>TestAutomationFX.Core.UI.Scrollable</NewName>
              <Field>
                <Original>
                  <Name>&lt;WrappedMsaaObject&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;NearestMsaaObjectWindow&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_WrappedMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_WrappedMsaaObject ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_WrappedMsaaObject</Name>
                  <Signature>void set_WrappedMsaaObject (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_NearestMsaaObjectWindow</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_NearestMsaaObjectWindow ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_NearestMsaaObjectWindow</Name>
                  <Signature>void set_NearestMsaaObjectWindow (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupNearestMsaaObjectWindow</Name>
                  <Signature>void SetupNearestMsaaObjectWindow ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Scroll</Name>
                  <Signature>void Scroll (TestAutomationFX.Core.UI.Scrollable/Direction, TestAutomationFX.Core.UI.Scrollable/ScrollSize)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Scroll</Name>
                  <Signature>void Scroll (TestAutomationFX.Core.UI.Scrollable/Direction, TestAutomationFX.Core.UI.Scrollable/ScrollSize)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ScrollUp</Name>
                  <Signature>void ScrollUp (TestAutomationFX.Core.UI.Scrollable/ScrollSize)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ScrollUp</Name>
                  <Signature>void ScrollUp (TestAutomationFX.Core.UI.Scrollable/ScrollSize)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ScrollDown</Name>
                  <Signature>void ScrollDown (TestAutomationFX.Core.UI.Scrollable/ScrollSize)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ScrollDown</Name>
                  <Signature>void ScrollDown (TestAutomationFX.Core.UI.Scrollable/ScrollSize)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ScrollLeft</Name>
                  <Signature>void ScrollLeft (TestAutomationFX.Core.UI.Scrollable/ScrollSize)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ScrollLeft</Name>
                  <Signature>void ScrollLeft (TestAutomationFX.Core.UI.Scrollable/ScrollSize)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ScrollRight</Name>
                  <Signature>void ScrollRight (TestAutomationFX.Core.UI.Scrollable/ScrollSize)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ScrollRight</Name>
                  <Signature>void ScrollRight (TestAutomationFX.Core.UI.Scrollable/ScrollSize)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Click</Name>
                  <Signature>void Click (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScrollRowDownButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ScrollRowDownButton ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScrollPageDownButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ScrollPageDownButton ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ScrollPageDownButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ScrollPageDownButton ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScrollRowUpButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ScrollRowUpButton ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScrollPageUpButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ScrollPageUpButton ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ScrollPageUpButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ScrollPageUpButton ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_VerticalScrollBar</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_VerticalScrollBar ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScrollRowRightButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ScrollRowRightButton ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject f ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScrollPageRightButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ScrollPageRightButton ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ScrollPageRightButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ScrollPageRightButton ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScrollRowLeftButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ScrollRowLeftButton ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>g</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject g ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScrollPageLeftButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ScrollPageLeftButton ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ScrollPageLeftButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_ScrollPageLeftButton ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_HorizontalScrollBar</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject get_HorizontalScrollBar ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>h</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject h ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetScrollBarButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetScrollBarButton (TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UI.Scrollable/ScrollBarButtons)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject a (TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UI.Scrollable/ScrollBarButtons)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetScrollBar</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetScrollBar (TestAutomationFX.Core.UI.Scrollable/ScrollBarTypes)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject a (TestAutomationFX.Core.UI.Scrollable/ScrollBarTypes)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScrollBars</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; get_ScrollBars ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt; a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>WrappedMsaaObject</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>NearestMsaaObjectWindow</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ScrollRowDownButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ScrollPageDownButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>ScrollPageDownButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject ScrollPageDownButton</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ScrollRowUpButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ScrollPageUpButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>ScrollPageUpButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject ScrollPageUpButton</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>VerticalScrollBar</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ScrollRowRightButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ScrollPageRightButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>ScrollPageRightButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject ScrollPageRightButton</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ScrollRowLeftButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ScrollPageLeftButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>ScrollPageLeftButton</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject ScrollPageLeftButton</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>HorizontalScrollBar</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ScrollBars</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.MsaaObject &gt;</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>ScrollSize</Name>
                <NewName>ScrollSize</NewName>
                <Field>
                  <Original>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Row</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollSize</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Row</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollSize</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Page</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollSize</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Page</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollSize</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>ScrollBarTypes</Name>
                <NewName>ScrollBarTypes</NewName>
                <Field>
                  <Original>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Unknown</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Unknown</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Vertical</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Vertical</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Horizontal</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Horizontal</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarTypes</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>ScrollBarButtons</Name>
                <NewName>ScrollBarButtons</NewName>
                <Field>
                  <Original>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>RowForward</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarButtons</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>RowForward</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarButtons</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>PageForward</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarButtons</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>PageForward</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarButtons</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Indicator</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarButtons</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Indicator</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarButtons</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>PageBackward</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarButtons</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>PageBackward</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarButtons</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>RowBackward</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarButtons</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>RowBackward</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/ScrollBarButtons</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>Direction</Name>
                <NewName>Direction</NewName>
                <Field>
                  <Original>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>value__</Name>
                    <Signature>int32</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Left</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/Direction</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Left</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/Direction</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Right</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/Direction</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Right</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/Direction</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Up</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/Direction</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Up</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/Direction</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>Down</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/Direction</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Down</Name>
                    <Signature>TestAutomationFX.Core.UI.Scrollable/Direction</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.DelayForm</Name>
              <NewName>TestAutomationFX.UI.DelayForm</NewName>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMap</Name>
              <NewName>TestAutomationFX.UI.UIMap</NewName>
              <Field>
                <Original>
                  <Name>m_RootUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UnmappedObjects</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.UI.UIObject &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.UI.UIObject &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UIMapObjectApplications</Name>
                  <Signature>TestAutomationFX.UI.UIApplicationCollection</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIApplicationCollection</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TechnologySelector</Name>
                  <Signature>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Strategies.IBestTechnologyStrategy</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PropertyBlackList</Name>
                  <Signature>string[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_PropertyChanged</Name>
                  <Signature>[System] System.ComponentModel.PropertyChangedEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.PropertyChangedEventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Attaching</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Attached</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>AttachFailing</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.AttachFailingEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.AttachFailingEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>AttachFailed</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ActionExecuting</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ActionExecuted</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>[mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;SiteObjects&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;PreventSaveImageInternal&gt;k__BackingField</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;TestData&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.TestDataRow</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.TestDataRow</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Settings&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.Settings.TafxSettings</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.Settings.TafxSettings</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>add_m_PropertyChanged</Name>
                  <Signature>void add_m_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_m_PropertyChanged</Name>
                  <Signature>void remove_m_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_Attaching</Name>
                  <Signature>void add_Attaching ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_Attaching</Name>
                  <Signature>void add_Attaching ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_Attaching</Name>
                  <Signature>void remove_Attaching ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_Attaching</Name>
                  <Signature>void remove_Attaching ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_Attached</Name>
                  <Signature>void add_Attached ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_Attached</Name>
                  <Signature>void add_Attached ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_Attached</Name>
                  <Signature>void remove_Attached ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_Attached</Name>
                  <Signature>void remove_Attached ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_AttachFailing</Name>
                  <Signature>void add_AttachFailing ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.AttachFailingEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_AttachFailing</Name>
                  <Signature>void add_AttachFailing ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.AttachFailingEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_AttachFailing</Name>
                  <Signature>void remove_AttachFailing ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.AttachFailingEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_AttachFailing</Name>
                  <Signature>void remove_AttachFailing ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.AttachFailingEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_AttachFailed</Name>
                  <Signature>void add_AttachFailed ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_AttachFailed</Name>
                  <Signature>void add_AttachFailed ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_AttachFailed</Name>
                  <Signature>void remove_AttachFailed ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_AttachFailed</Name>
                  <Signature>void remove_AttachFailed ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_ActionExecuting</Name>
                  <Signature>void add_ActionExecuting ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_ActionExecuting</Name>
                  <Signature>void add_ActionExecuting ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_ActionExecuting</Name>
                  <Signature>void remove_ActionExecuting ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_ActionExecuting</Name>
                  <Signature>void remove_ActionExecuting ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_ActionExecuted</Name>
                  <Signature>void add_ActionExecuted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_ActionExecuted</Name>
                  <Signature>void add_ActionExecuted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_ActionExecuted</Name>
                  <Signature>void remove_ActionExecuted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_ActionExecuted</Name>
                  <Signature>void remove_ActionExecuted ([mscorlib] System.EventHandler`1&lt; TestAutomationFX.UI.UIObjectEventArgs &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SiteObjects</Name>
                  <Signature>static bool get_SiteObjects ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SiteObjects</Name>
                  <Signature>static bool get_SiteObjects ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_SiteObjects</Name>
                  <Signature>static void set_SiteObjects (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_SiteObjects</Name>
                  <Signature>static void set_SiteObjects (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PreventSaveImage</Name>
                  <Signature>bool get_PreventSaveImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_PreventSaveImage</Name>
                  <Signature>bool get_PreventSaveImage ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_PreventSaveImage</Name>
                  <Signature>void set_PreventSaveImage (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_PreventSaveImage</Name>
                  <Signature>void set_PreventSaveImage (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PreventSaveImageInternal</Name>
                  <Signature>static bool get_PreventSaveImageInternal ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_PreventSaveImageInternal</Name>
                  <Signature>static void set_PreventSaveImageInternal (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (bool)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.IContainer)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.IContainer)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UnmappedObjects</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.UI.UIObject &gt; get_UnmappedObjects ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UnmappedObjects</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.UI.UIObject &gt; get_UnmappedObjects ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_TestData</Name>
                  <Signature>TestAutomationFX.Core.TestDataRow get_TestData ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_TestData</Name>
                  <Signature>TestAutomationFX.Core.TestDataRow get_TestData ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_TestData</Name>
                  <Signature>void set_TestData (TestAutomationFX.Core.TestDataRow)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_TestData</Name>
                  <Signature>void set_TestData (TestAutomationFX.Core.TestDataRow)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIMapObjectApplications</Name>
                  <Signature>TestAutomationFX.UI.UIApplicationCollection get_UIMapObjectApplications ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UIMapObjectApplications</Name>
                  <Signature>TestAutomationFX.UI.UIApplicationCollection get_UIMapObjectApplications ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetUIMapApplication</Name>
                  <Signature>TestAutomationFX.UI.UIApplication GetUIMapApplication (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIApplication a (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetUIMapApplication</Name>
                  <Signature>TestAutomationFX.UI.UIApplication GetUIMapApplication (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIApplication a (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Delete</Name>
                  <Signature>void Delete (TestAutomationFX.UI.UIApplication)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.UI.UIApplication)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnUIMapObjectApplicationsListChanged</Name>
                  <Signature>void OnUIMapObjectApplicationsListChanged (object, [System] System.ComponentModel.ListChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.ListChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsPropertyDescriptorForConcealedProperty</Name>
                  <Signature>bool IsPropertyDescriptorForConcealedProperty ([System] System.ComponentModel.PropertyDescriptor)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ([System] System.ComponentModel.PropertyDescriptor)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnUnmappedObjectsListChanged</Name>
                  <Signature>void OnUnmappedObjectsListChanged (object, [System] System.ComponentModel.ListChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [System] System.ComponentModel.ListChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RootUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_RootUIObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RootUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_RootUIObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_RootUIObject</Name>
                  <Signature>void set_RootUIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_RootUIObject</Name>
                  <Signature>void set_RootUIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FirePropertyChanged</Name>
                  <Signature>void FirePropertyChanged (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FirePropertyChanged</Name>
                  <Signature>void FirePropertyChanged (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RunTest</Name>
                  <Signature>void RunTest ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RunTest</Name>
                  <Signature>void RunTest ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_PropertyChanged</Name>
                  <Signature>void add_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_PropertyChanged</Name>
                  <Signature>void add_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_PropertyChanged</Name>
                  <Signature>void remove_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_PropertyChanged</Name>
                  <Signature>void remove_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Wait</Name>
                  <Signature>static void Wait (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Wait</Name>
                  <Signature>static void Wait (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddObjectRaw</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddObjectRaw (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject a (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddObject (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.UI.UIObject b (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddControlPart</Name>
                  <Signature>static TestAutomationFX.UI.UIObject AddControlPart ([TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo, TestAutomationFX.UI.UIWindow)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static TestAutomationFX.UI.UIObject a ([TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo, TestAutomationFX.UI.UIWindow)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsDelphiSupportEnabled</Name>
                  <Signature>bool get_IsDelphiSupportEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsDelphiSupportEnabled</Name>
                  <Signature>bool get_IsDelphiSupportEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_IsDelphiSupportEnabled</Name>
                  <Signature>void set_IsDelphiSupportEnabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_IsDelphiSupportEnabled</Name>
                  <Signature>void set_IsDelphiSupportEnabled (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Settings</Name>
                  <Signature>TestAutomationFX.Core.Settings.TafxSettings get_Settings ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Settings</Name>
                  <Signature>TestAutomationFX.Core.Settings.TafxSettings get_Settings ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Settings</Name>
                  <Signature>void set_Settings (TestAutomationFX.Core.Settings.TafxSettings)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.Core.Settings.TafxSettings)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MakeSettingsCurrent</Name>
                  <Signature>void MakeSettingsCurrent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MakeSettingsCurrent</Name>
                  <Signature>void MakeSettingsCurrent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TestAutomationFX.Core.ITestable.RunTest</Name>
                  <Signature>void TestAutomationFX.Core.ITestable.RunTest ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TestAutomationFX.Core.ITestable.RunTest</Name>
                  <Signature>void TestAutomationFX.Core.ITestable.RunTest ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged</Name>
                  <Signature>void System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged ([System] System.ComponentModel.PropertyChangedEventHandler)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAttaching</Name>
                  <Signature>void OnAttaching (TestAutomationFX.UI.UIObjectEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnAttaching</Name>
                  <Signature>void OnAttaching (TestAutomationFX.UI.UIObjectEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAttached</Name>
                  <Signature>void OnAttached (TestAutomationFX.UI.UIObjectEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnAttached</Name>
                  <Signature>void OnAttached (TestAutomationFX.UI.UIObjectEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAttachFailing</Name>
                  <Signature>void OnAttachFailing (TestAutomationFX.UI.AttachFailingEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnAttachFailing</Name>
                  <Signature>void OnAttachFailing (TestAutomationFX.UI.AttachFailingEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnAttachFailed</Name>
                  <Signature>void OnAttachFailed (TestAutomationFX.UI.UIObjectEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnAttachFailed</Name>
                  <Signature>void OnAttachFailed (TestAutomationFX.UI.UIObjectEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnActionExecuting</Name>
                  <Signature>void OnActionExecuting (TestAutomationFX.UI.UIObjectEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnActionExecuting</Name>
                  <Signature>void OnActionExecuting (TestAutomationFX.UI.UIObjectEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnActionExecuted</Name>
                  <Signature>void OnActionExecuted (TestAutomationFX.UI.UIObjectEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnActionExecuted</Name>
                  <Signature>void OnActionExecuted (TestAutomationFX.UI.UIObjectEventArgs)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RecordTest</Name>
                  <Signature>void RecordTest (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RecordTest</Name>
                  <Signature>void RecordTest (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ShowMethod</Name>
                  <Signature>void ShowMethod (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ShowMethod</Name>
                  <Signature>void ShowMethod (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMethods</Name>
                  <Signature>string[] GetMethods ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetMethods</Name>
                  <Signature>string[] GetMethods ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetUIMapDesignerView</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView GetUIMapDesignerView ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.UI.Design.UIMapDesignerView b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BeginInit</Name>
                  <Signature>void BeginInit ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>BeginInit</Name>
                  <Signature>void BeginInit ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EndInit</Name>
                  <Signature>void EndInit ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>EndInit</Name>
                  <Signature>void EndInit ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.ISupportInitialize.BeginInit</Name>
                  <Signature>void System.ComponentModel.ISupportInitialize.BeginInit ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.ISupportInitialize.BeginInit</Name>
                  <Signature>void System.ComponentModel.ISupportInitialize.BeginInit ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>System.ComponentModel.ISupportInitialize.EndInit</Name>
                  <Signature>void System.ComponentModel.ISupportInitialize.EndInit ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.ISupportInitialize.EndInit</Name>
                  <Signature>void System.ComponentModel.ISupportInitialize.EndInit ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>SiteObjects</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>SiteObjects</Name>
                  <Signature>bool SiteObjects</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PreventSaveImage</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>PreventSaveImage</Name>
                  <Signature>bool PreventSaveImage</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PreventSaveImageInternal</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UnmappedObjects</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.UI.UIObject &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>UnmappedObjects</Name>
                  <Signature>[System] System.ComponentModel.BindingList`1&lt; TestAutomationFX.UI.UIObject &gt; UnmappedObjects</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>TestData</Name>
                  <Signature>TestAutomationFX.Core.TestDataRow</Signature>
                </Original>
                <Obfuscated>
                  <Name>TestData</Name>
                  <Signature>TestAutomationFX.Core.TestDataRow TestData</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIMapObjectApplications</Name>
                  <Signature>TestAutomationFX.UI.UIApplicationCollection</Signature>
                </Original>
                <Obfuscated>
                  <Name>UIMapObjectApplications</Name>
                  <Signature>TestAutomationFX.UI.UIApplicationCollection UIMapObjectApplications</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RootUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>RootUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject RootUIObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsDelphiSupportEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsDelphiSupportEnabled</Name>
                  <Signature>bool IsDelphiSupportEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Settings</Name>
                  <Signature>TestAutomationFX.Core.Settings.TafxSettings</Signature>
                </Original>
                <Obfuscated>
                  <Name>Settings</Name>
                  <Signature>TestAutomationFX.Core.Settings.TafxSettings Settings</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>m_PropertyChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>Attaching</Name>
                </Original>
                <Obfuscated>
                  <Name>Attaching</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>Attached</Name>
                </Original>
                <Obfuscated>
                  <Name>Attached</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>AttachFailing</Name>
                </Original>
                <Obfuscated>
                  <Name>AttachFailing</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>AttachFailed</Name>
                </Original>
                <Obfuscated>
                  <Name>AttachFailed</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>ActionExecuting</Name>
                </Original>
                <Obfuscated>
                  <Name>ActionExecuting</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>ActionExecuted</Name>
                </Original>
                <Obfuscated>
                  <Name>ActionExecuted</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>PropertyChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>PropertyChanged</Name>
                </Obfuscated>
              </Event>
              <Event>
                <Original>
                  <Name>System.ComponentModel.INotifyPropertyChanged.PropertyChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>System.ComponentModel.INotifyPropertyChanged.PropertyChanged</Name>
                </Obfuscated>
              </Event>
              <NestedType>
                <Name>&lt;&gt;c__DisplayClass1</Name>
                <NewName>&lt;&gt;c__DisplayClass1</NewName>
                <Field>
                  <Original>
                    <Name>propertyDescriptor</Name>
                    <Signature>[System] System.ComponentModel.PropertyDescriptor</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>propertyDescriptor</Name>
                    <Signature>[System] System.ComponentModel.PropertyDescriptor</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;IsPropertyDescriptorForConcealedProperty&gt;b__0</Name>
                    <Signature>bool &lt;IsPropertyDescriptorForConcealedProperty&gt;b__0 (string)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;IsPropertyDescriptorForConcealedProperty&gt;b__0</Name>
                    <Signature>bool &lt;IsPropertyDescriptorForConcealedProperty&gt;b__0 (string)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.UI.TestFixtureSmart</Name>
              <NewName>TestAutomationFX.Core.UI.TestFixtureSmart</NewName>
              <Field>
                <Original>
                  <Name>m_SmartAutVersion</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_SmartAutName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CloseApplicationProcesses</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;MethodArguments&gt;k__BackingField</Name>
                  <Signature>string[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.IContainer)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.IContainer)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SmartAutVersion</Name>
                  <Signature>string get_SmartAutVersion ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SmartAutVersion</Name>
                  <Signature>string get_SmartAutVersion ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_SmartAutVersion</Name>
                  <Signature>void set_SmartAutVersion (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_SmartAutVersion</Name>
                  <Signature>void set_SmartAutVersion (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SmartAutName</Name>
                  <Signature>string get_SmartAutName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SmartAutName</Name>
                  <Signature>string get_SmartAutName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_SmartAutName</Name>
                  <Signature>void set_SmartAutName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_SmartAutName</Name>
                  <Signature>void set_SmartAutName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CloseApplicationProcesses</Name>
                  <Signature>bool get_CloseApplicationProcesses ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CloseApplicationProcesses</Name>
                  <Signature>bool get_CloseApplicationProcesses ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_CloseApplicationProcesses</Name>
                  <Signature>void set_CloseApplicationProcesses (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_CloseApplicationProcesses</Name>
                  <Signature>void set_CloseApplicationProcesses (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MethodArguments</Name>
                  <Signature>string[] get_MethodArguments ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MethodArguments</Name>
                  <Signature>string[] get_MethodArguments ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MethodArguments</Name>
                  <Signature>void set_MethodArguments (string[])</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string[])</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Reset</Name>
                  <Signature>void Reset ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Reset</Name>
                  <Signature>void Reset ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CloseUIApplications</Name>
                  <Signature>void CloseUIApplications ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CloseUIApplications</Name>
                  <Signature>void CloseUIApplications ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetInfo</Name>
                  <Signature>string GetInfo ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetInfo</Name>
                  <Signature>string GetInfo ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MethodMissing</Name>
                  <Signature>string MethodMissing (string, string[])</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MethodMissing</Name>
                  <Signature>string MethodMissing (string, string[])</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ReportException</Name>
                  <Signature>static string ReportException ([mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a ([mscorlib] System.Exception)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>TryGetMethod</Name>
                  <Signature>bool TryGetMethod (string, [out] object&amp;, [out] [mscorlib] System.Reflection.MethodInfo&amp;)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TryGetMethod</Name>
                  <Signature>bool TryGetMethod (string, [out] object&amp;, [out] [mscorlib] System.Reflection.MethodInfo&amp;)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>SmartAutVersion</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>SmartAutVersion</Name>
                  <Signature>string SmartAutVersion</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SmartAutName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>SmartAutName</Name>
                  <Signature>string SmartAutName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CloseApplicationProcesses</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>CloseApplicationProcesses</Name>
                  <Signature>bool CloseApplicationProcesses</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MethodArguments</Name>
                  <Signature>string[]</Signature>
                </Original>
                <Obfuscated>
                  <Name>MethodArguments</Name>
                  <Signature>string[] MethodArguments</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIApplicationCollection</Name>
              <NewName>TestAutomationFX.UI.UIApplicationCollection</NewName>
              <Field>
                <Original>
                  <Name>m_UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIMap</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIMap)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIMap)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InsertItem</Name>
                  <Signature>void InsertItem (int32, TestAutomationFX.UI.UIApplication)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>InsertItem</Name>
                  <Signature>void InsertItem (int32, TestAutomationFX.UI.UIApplication)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIDelphiControl</Name>
              <NewName>TestAutomationFX.UI.UIDelphiControl</NewName>
              <Method>
                <Original>
                  <Name>GetProperty</Name>
                  <Signature>object GetProperty (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetProperty</Name>
                  <Signature>object GetProperty (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetProperty</Name>
                  <Signature>void SetProperty (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetProperty</Name>
                  <Signature>void SetProperty (string, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InvokeDelphiMethod</Name>
                  <Signature>void InvokeDelphiMethod (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>InvokeDelphiMethod</Name>
                  <Signature>void InvokeDelphiMethod (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>VerifyBaseProperty</Name>
                  <Signature>bool VerifyBaseProperty (string, object, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VerifyBaseProperty</Name>
                  <Signature>bool VerifyBaseProperty (string, object, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoVerifyProperty</Name>
                  <Signature>void DoVerifyProperty (string, object, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoVerifyProperty</Name>
                  <Signature>void DoVerifyProperty (string, object, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>VerifyDelphiControlProperty</Name>
                  <Signature>void VerifyDelphiControlProperty (string, object, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VerifyDelphiControlProperty</Name>
                  <Signature>void VerifyDelphiControlProperty (string, object, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMenuItem</Name>
              <NewName>TestAutomationFX.UI.UIMenuItem</NewName>
              <Method>
                <Original>
                  <Name>GetObjectReadyForMouseAction</Name>
                  <Signature>bool GetObjectReadyForMouseAction ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetObjectReadyForMouseAction</Name>
                  <Signature>bool GetObjectReadyForMouseAction ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EnsureParentMenuItemIsAvailable</Name>
                  <Signature>void EnsureParentMenuItemIsAvailable ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsAvailable</Name>
                  <Signature>bool IsAvailable ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsAvailable</Name>
                  <Signature>bool IsAvailable ([System.Drawing] System.Drawing.Point)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIAutomationElement</Name>
              <NewName>TestAutomationFX.UI.UIAutomationElement</NewName>
              <Field>
                <Original>
                  <Name>m_AutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AutomationId</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AutomationIdRegEx</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AutomationName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AutomationNameRegEx</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ClassName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ItemType</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Index</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_AutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper get_AutomationElementWrapper ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper get_AutomationElementWrapper ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AutomationElementWrapper</Name>
                  <Signature>void set_AutomationElementWrapper (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AutomationElementWrapper</Name>
                  <Signature>void set_AutomationElementWrapper (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetUIObjectType</Name>
                  <Signature>void SetUIObjectType ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetUIObjectType</Name>
                  <Signature>bool SetUIObjectType (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Detach</Name>
                  <Signature>void Detach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Detach</Name>
                  <Signature>void Detach ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsAutomationIdValid</Name>
                  <Signature>bool IsAutomationIdValid (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsAutomationIdValid</Name>
                  <Signature>bool IsAutomationIdValid (string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindChild</Name>
                  <Signature>void FindChild (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindChild</Name>
                  <Signature>void FindChild (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetFindAutomationElementInfo</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo GetFindAutomationElementInfo ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutomationId</Name>
                  <Signature>string get_AutomationId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutomationId</Name>
                  <Signature>string get_AutomationId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AutomationId</Name>
                  <Signature>void set_AutomationId (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AutomationId</Name>
                  <Signature>void set_AutomationId (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutomationIdRegEx</Name>
                  <Signature>string get_AutomationIdRegEx ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutomationIdRegEx</Name>
                  <Signature>string get_AutomationIdRegEx ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AutomationIdRegEx</Name>
                  <Signature>void set_AutomationIdRegEx (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AutomationIdRegEx</Name>
                  <Signature>void set_AutomationIdRegEx (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutomationName</Name>
                  <Signature>string get_AutomationName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutomationName</Name>
                  <Signature>string get_AutomationName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AutomationName</Name>
                  <Signature>void set_AutomationName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AutomationName</Name>
                  <Signature>void set_AutomationName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutomationNameRegEx</Name>
                  <Signature>string get_AutomationNameRegEx ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutomationNameRegEx</Name>
                  <Signature>string get_AutomationNameRegEx ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AutomationNameRegEx</Name>
                  <Signature>void set_AutomationNameRegEx (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AutomationNameRegEx</Name>
                  <Signature>void set_AutomationNameRegEx (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ClassName</Name>
                  <Signature>string get_ClassName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ClassName</Name>
                  <Signature>string get_ClassName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ClassName</Name>
                  <Signature>void set_ClassName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ClassName</Name>
                  <Signature>void set_ClassName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ItemType</Name>
                  <Signature>string get_ItemType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ItemType</Name>
                  <Signature>string get_ItemType ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ItemType</Name>
                  <Signature>void set_ItemType (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ItemType</Name>
                  <Signature>void set_ItemType (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Index</Name>
                  <Signature>void set_Index (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Index</Name>
                  <Signature>void set_Index (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsValid</Name>
                  <Signature>bool get_IsValid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsValid</Name>
                  <Signature>bool get_IsValid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int get_ScrollBarOwnerWindowHandle ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int get_ScrollBarOwnerWindowHandle ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsAutomationElementMatch</Name>
                  <Signature>bool IsAutomationElementMatch (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupMatchedProperties</Name>
                  <Signature>void SetupMatchedProperties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetupMatchedProperties</Name>
                  <Signature>void SetupMatchedProperties ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupMatchedIndex</Name>
                  <Signature>void SetupMatchedIndex (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMatchedIndex</Name>
                  <Signature>int32 GetMatchedIndex (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32 a (TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, TestAutomationFX.Core.UIAutomationSupport.FindAutomationElementInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMatchToObject</Name>
                  <Signature>bool IsMatchToObject (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsMatchToObject</Name>
                  <Signature>bool IsMatchToObject (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Value</Name>
                  <Signature>string get_Value ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Value</Name>
                  <Signature>string get_Value ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsEnabled</Name>
                  <Signature>bool get_IsEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsEnabled</Name>
                  <Signature>bool get_IsEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsFocused</Name>
                  <Signature>bool get_IsFocused ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsFocused</Name>
                  <Signature>bool get_IsFocused ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsChecked</Name>
                  <Signature>bool get_IsChecked ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsChecked</Name>
                  <Signature>bool get_IsChecked ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsSelected</Name>
                  <Signature>bool get_IsSelected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsSelected</Name>
                  <Signature>bool get_IsSelected ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>AutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutomationElementWrapper</Name>
                  <Signature>TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper AutomationElementWrapper</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutomationId</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutomationId</Name>
                  <Signature>string AutomationId</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutomationIdRegEx</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutomationIdRegEx</Name>
                  <Signature>string AutomationIdRegEx</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutomationName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutomationName</Name>
                  <Signature>string AutomationName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutomationNameRegEx</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutomationNameRegEx</Name>
                  <Signature>string AutomationNameRegEx</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ClassName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ClassName</Name>
                  <Signature>string ClassName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ItemType</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>ItemType</Name>
                  <Signature>string ItemType</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Index</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Index</Name>
                  <Signature>int32 Index</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle Bounds</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsValid</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsValid</Name>
                  <Signature>bool IsValid</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>ScrollBarOwnerWindowHandle</Name>
                  <Signature>native int ScrollBarOwnerWindowHandle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Text</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Text</Name>
                  <Signature>string Text</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Value</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Value</Name>
                  <Signature>string Value</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsEnabled</Name>
                  <Signature>bool IsEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsFocused</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsFocused</Name>
                  <Signature>bool IsFocused</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsChecked</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsChecked</Name>
                  <Signature>bool IsChecked</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsSelected</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsSelected</Name>
                  <Signature>bool IsSelected</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMapObjectAutomationElement</Name>
              <NewName>TestAutomationFX.UI.UIMapObjectAutomationElement</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIControlPart</Name>
              <NewName>TestAutomationFX.UI.UIControlPart</NewName>
              <Field>
                <Original>
                  <Name>STR_ControlPart</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_BoundsInParent</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>BoundsInParentChanged</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ControlPartProvider&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Type</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Type</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ControlPartInfoName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Path&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>add_BoundsInParentChanged</Name>
                  <Signature>void add_BoundsInParentChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_BoundsInParentChanged</Name>
                  <Signature>void add_BoundsInParentChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_BoundsInParentChanged</Name>
                  <Signature>void remove_BoundsInParentChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_BoundsInParentChanged</Name>
                  <Signature>void remove_BoundsInParentChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_BoundsInParent</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_BoundsInParent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_BoundsInParent</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_BoundsInParent ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_BoundsInParent</Name>
                  <Signature>void set_BoundsInParent ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_BoundsInParent</Name>
                  <Signature>void set_BoundsInParent ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ControlPartProvider</Name>
                  <Signature>[mscorlib] System.Type get_ControlPartProvider ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ControlPartProvider</Name>
                  <Signature>[mscorlib] System.Type get_ControlPartProvider ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ControlPartProvider</Name>
                  <Signature>void set_ControlPartProvider ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ControlPartProvider</Name>
                  <Signature>void set_ControlPartProvider ([mscorlib] System.Type)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ControlPartInfoName</Name>
                  <Signature>string get_ControlPartInfoName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ControlPartInfoName</Name>
                  <Signature>void set_ControlPartInfoName (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateBoundsInParentFromControlPart</Name>
                  <Signature>void UpdateBoundsInParentFromControlPart ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>UpdateBoundsInParentFromControlPart</Name>
                  <Signature>void UpdateBoundsInParentFromControlPart ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetUIWindowParent</Name>
                  <Signature>TestAutomationFX.UI.UIWindow GetUIWindowParent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.UI.UIWindow b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ParentName</Name>
                  <Signature>string get_ParentName ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsHighlightMovable</Name>
                  <Signature>bool get_IsHighlightMovable ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsHighlightMovable</Name>
                  <Signature>bool get_IsHighlightMovable ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnBoundsChanged</Name>
                  <Signature>void OnBoundsChanged ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnBoundsChanged</Name>
                  <Signature>void OnBoundsChanged ([System.Drawing] System.Drawing.Rectangle)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Path</Name>
                  <Signature>string get_Path ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Path</Name>
                  <Signature>string get_Path ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Path</Name>
                  <Signature>void set_Path (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Path</Name>
                  <Signature>void set_Path (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsMatchToObject</Name>
                  <Signature>bool IsMatchToObject (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsMatchToObject</Name>
                  <Signature>bool IsMatchToObject (object)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>BoundsInParent</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>BoundsInParent</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle BoundsInParent</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ControlPartProvider</Name>
                  <Signature>[mscorlib] System.Type</Signature>
                </Original>
                <Obfuscated>
                  <Name>ControlPartProvider</Name>
                  <Signature>[mscorlib] System.Type ControlPartProvider</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ControlPartInfoName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle Bounds</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ParentName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsHighlightMovable</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsHighlightMovable</Name>
                  <Signature>bool IsHighlightMovable</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Path</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Path</Name>
                  <Signature>string Path</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>BoundsInParentChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>BoundsInParentChanged</Name>
                </Obfuscated>
              </Event>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMapObjectControlPart</Name>
              <NewName>TestAutomationFX.UI.UIMapObjectControlPart</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMainWindow</Name>
              <NewName>TestAutomationFX.UI.UIMainWindow</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>DoAttach</Name>
                  <Signature>void DoAttach ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetComponentName</Name>
                  <Signature>string GetComponentName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMapObjectMainWindow</Name>
              <NewName>TestAutomationFX.UI.UIMapObjectMainWindow</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMapObjectMsaa</Name>
              <NewName>TestAutomationFX.UI.UIMapObjectMsaa</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIObjectEventArgs</Name>
              <NewName>TestAutomationFX.UI.UIObjectEventArgs</NewName>
              <Field>
                <Original>
                  <Name>&lt;UIObject&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_UIObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_UIObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UIObject</Name>
                  <Signature>void set_UIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UIObject</Name>
                  <Signature>void set_UIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>UIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>UIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject UIObject</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIObjectFactory</Name>
              <NewName>TestAutomationFX.UI.UIObjectFactory</NewName>
              <Method>
                <Original>
                  <Name>CreateUIObject</Name>
                  <Signature>static TestAutomationFX.UI.UIMsaa CreateUIObject (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateUIObject</Name>
                  <Signature>static TestAutomationFX.UI.UIMsaa CreateUIObject (TestAutomationFX.Core.MsaaObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.UI.UIObjectFactoryManager</Name>
              <NewName>TestAutomationFX.Core.UI.UIObjectFactoryManager</NewName>
              <Field>
                <Original>
                  <Name>m_Site</Name>
                  <Signature>[System] System.ComponentModel.ISite</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.ISite</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UIObjectProviders</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UI.IUIObjectProvider &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.UI.IUIObjectProvider &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Provider&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.UI.IUIObjectProvider</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.UI.IUIObjectProvider</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>Initialize</Name>
                  <Signature>static void Initialize ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Initialize</Name>
                  <Signature>static void Initialize ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Provider</Name>
                  <Signature>static TestAutomationFX.Core.UI.IUIObjectProvider get_Provider ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Provider</Name>
                  <Signature>static TestAutomationFX.Core.UI.IUIObjectProvider get_Provider ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Provider</Name>
                  <Signature>static void set_Provider (TestAutomationFX.Core.UI.IUIObjectProvider)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (TestAutomationFX.Core.UI.IUIObjectProvider)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupUIObjectProviders</Name>
                  <Signature>void SetupUIObjectProviders ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetupUIObjectProviders</Name>
                  <Signature>void SetupUIObjectProviders ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject CreateUIObject (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject CreateUIObject (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.MsaaObject, TestAutomationFX.Core.UIAutomationSupport.AutomationElementWrapper, [TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlPartInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddingUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddingUIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddingUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddingUIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddedUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddedUIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AddedUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject AddedUIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Provider</Name>
                  <Signature>TestAutomationFX.Core.UI.IUIObjectProvider</Signature>
                </Original>
                <Obfuscated>
                  <Name>Provider</Name>
                  <Signature>TestAutomationFX.Core.UI.IUIObjectProvider Provider</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIUltraExpandableGroupBox</Name>
              <NewName>TestAutomationFX.UI.UIUltraExpandableGroupBox</NewName>
              <Method>
                <Original>
                  <Name>get_Expanded</Name>
                  <Signature>bool get_Expanded ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Expanded</Name>
                  <Signature>bool get_Expanded ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Expanded</Name>
                  <Signature>void set_Expanded (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Expanded</Name>
                  <Signature>void set_Expanded (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsExpanded</Name>
                  <Signature>bool IsExpanded ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetExpanded</Name>
                  <Signature>void SetExpanded (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (bool)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Expanded</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>Expanded</Name>
                  <Signature>bool Expanded</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIUltraGrid</Name>
              <NewName>TestAutomationFX.UI.UIUltraGrid</NewName>
              <Field>
                <Original>
                  <Name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</Name>
                  <Signature>TestAutomationFX.UI.UIWindow/ExecuteRemoteControlDelegate</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIWindow/ExecuteRemoteControlDelegate</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</Name>
                  <Signature>TestAutomationFX.UI.UIWindow/ExecuteRemoteControlDelegate</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.UI.UIWindow/ExecuteRemoteControlDelegate</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_RowCount</Name>
                  <Signature>int32 get_RowCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RowCount</Name>
                  <Signature>int32 get_RowCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ColumnCount</Name>
                  <Signature>int32 get_ColumnCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ColumnCount</Name>
                  <Signature>int32 get_ColumnCount ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRowsCollection</Name>
                  <Signature>static [mscorlib] System.Collections.ICollection GetRowsCollection ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRowsCollection</Name>
                  <Signature>static [mscorlib] System.Collections.ICollection GetRowsCollection ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetProperty</Name>
                  <Signature>static object GetProperty (object, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetProperty</Name>
                  <Signature>static object GetProperty (object, string)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetColumnHeadersMsaa</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetColumnHeadersMsaa ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetColumnHeadersMsaa</Name>
                  <Signature>TestAutomationFX.Core.MsaaObject GetColumnHeadersMsaa ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRowIndexFromCellValue</Name>
                  <Signature>int32 GetRowIndexFromCellValue (int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRowIndexFromCellValue</Name>
                  <Signature>int32 GetRowIndexFromCellValue (int32, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>&lt;get_RowCount&gt;b__0</Name>
                  <Signature>static object &lt;get_RowCount&gt;b__0 ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static object a ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>&lt;get_ColumnCount&gt;b__2</Name>
                  <Signature>static object &lt;get_ColumnCount&gt;b__2 ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static object b ([System.Windows.Forms] System.Windows.Forms.Control)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>RowCount</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>RowCount</Name>
                  <Signature>int32 RowCount</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ColumnCount</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>ColumnCount</Name>
                  <Signature>int32 ColumnCount</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIUltraTextEditor</Name>
              <NewName>TestAutomationFX.UI.UIUltraTextEditor</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIUltraTree</Name>
              <NewName>TestAutomationFX.UI.UIUltraTree</NewName>
              <Field>
                <Original>
                  <Name>m_Nodes</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNodes</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNodes</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Nodes</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNodes get_Nodes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Nodes</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNodes get_Nodes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Nodes</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNodes</Signature>
                </Original>
                <Obfuscated>
                  <Name>Nodes</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNodes Nodes</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIUltraTreeNode</Name>
              <NewName>TestAutomationFX.UI.UIUltraTreeNode</NewName>
              <Field>
                <Original>
                  <Name>m_UIUltraTree</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTree</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTree</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ParentNode</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNode</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNode</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Nodes</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNodes</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNodes</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIUltraTree, TestAutomationFX.UI.UIUltraTreeNode)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIUltraTree, TestAutomationFX.UI.UIUltraTreeNode)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Nodes</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNodes get_Nodes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Nodes</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNodes get_Nodes ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Nodes</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNodes</Signature>
                </Original>
                <Obfuscated>
                  <Name>Nodes</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNodes Nodes</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIUltraTreeNodes</Name>
              <NewName>TestAutomationFX.UI.UIUltraTreeNodes</NewName>
              <Field>
                <Original>
                  <Name>m_UIUltraTree</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTree</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTree</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ParentNode</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNode</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNode</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIUltraTree, TestAutomationFX.UI.UIUltraTreeNode)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIUltraTree, TestAutomationFX.UI.UIUltraTreeNode)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Item</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNode get_Item (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Item</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNode get_Item (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Item</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNode (int32)</Signature>
                </Original>
                <Obfuscated>
                  <Name>Item</Name>
                  <Signature>TestAutomationFX.UI.UIUltraTreeNode Item (int32)</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMapObjectWindow</Name>
              <NewName>TestAutomationFX.UI.UIMapObjectWindow</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMapTreeNode</Name>
              <NewName>TestAutomationFX.UI.UIMapTreeNode</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObject, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIObject, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIMap, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (TestAutomationFX.UI.UIMap, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetName</Name>
                  <Signature>static string GetName (TestAutomationFX.UI.UIMap)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a (TestAutomationFX.UI.UIMap)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetName</Name>
                  <Signature>static string GetName ([System] System.ComponentModel.Component)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static string a ([System] System.ComponentModel.Component)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetDisplayName</Name>
                  <Signature>string GetDisplayName ([System] System.ComponentModel.Component)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string b ([System] System.ComponentModel.Component)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateDisplayText</Name>
                  <Signature>void UpdateDisplayText ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>UpdateDisplayText</Name>
                  <Signature>void UpdateDisplayText ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ShowDescription</Name>
                  <Signature>bool get_ShowDescription ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ShowName</Name>
                  <Signature>bool get_ShowName ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIMapTreeView</Name>
                  <Signature>TestAutomationFX.UI.UIMapTreeView get_UIMapTreeView ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>TestAutomationFX.UI.UIMapTreeView c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>ShowDescription</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ShowName</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIMapTreeView</Name>
                  <Signature>TestAutomationFX.UI.UIMapTreeView</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.UI.UIMapTreeView</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIMapTreeView</Name>
              <NewName>TestAutomationFX.UI.UIMapTreeView</NewName>
              <Field>
                <Original>
                  <Name>m_UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIMap</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_RootTreeNode</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeNode</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeNode</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ShowDescription</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ShowName</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_HighlightSelectedObject</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>SelectedObjectChanged</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.EventHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UIMapObjectImageList</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ImageList</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ImageList</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_TreeView</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeView</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>m_TreeView</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeView</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UpdateHighlightTimer</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_StateImageList</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ImageList</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ImageList</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_HighlightSelectedObject</Name>
                  <Signature>bool get_HighlightSelectedObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_HighlightSelectedObject</Name>
                  <Signature>bool get_HighlightSelectedObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_HighlightSelectedObject</Name>
                  <Signature>void set_HighlightSelectedObject (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_HighlightSelectedObject</Name>
                  <Signature>void set_HighlightSelectedObject (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap get_UIMap ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap get_UIMap ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_UIMap</Name>
                  <Signature>void set_UIMap (TestAutomationFX.UI.UIMap)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_UIMap</Name>
                  <Signature>void set_UIMap (TestAutomationFX.UI.UIMap)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FillTree</Name>
                  <Signature>void FillTree ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FillTree</Name>
                  <Signature>void FillTree ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ClearTree</Name>
                  <Signature>void ClearTree ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateTreeNodeTexts</Name>
                  <Signature>void UpdateTreeNodeTexts ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateTreeNodeText</Name>
                  <Signature>void UpdateTreeNodeText ([System.Windows.Forms] System.Windows.Forms.TreeNode, [out] bool&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Windows.Forms] System.Windows.Forms.TreeNode, [out] bool&amp;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IterateAllTreeNodes</Name>
                  <Signature>void IterateAllTreeNodes ([System.Windows.Forms] System.Windows.Forms.TreeNode, TestAutomationFX.UI.UIMapTreeView/TreeNodeIteratorDelegate)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Windows.Forms] System.Windows.Forms.TreeNode, TestAutomationFX.UI.UIMapTreeView/a)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddUIMapToTree</Name>
                  <Signature>void AddUIMapToTree (TestAutomationFX.UI.UIMap)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.UI.UIMap)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddUIObjectToTree</Name>
                  <Signature>void AddUIObjectToTree ([System.Windows.Forms] System.Windows.Forms.TreeNode, TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Windows.Forms] System.Windows.Forms.TreeNode, TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetImageIndex</Name>
                  <Signature>int32 GetImageIndex (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32 a (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetImageIndexFromName</Name>
                  <Signature>int32 GetImageIndexFromName (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32 a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddImageFromUIApplication</Name>
                  <Signature>void AddImageFromUIApplication (TestAutomationFX.UI.UIApplication)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (TestAutomationFX.UI.UIApplication)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UnHookNotifyPropertyChanged</Name>
                  <Signature>void UnHookNotifyPropertyChanged ([System.Windows.Forms] System.Windows.Forms.TreeNode)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ([System.Windows.Forms] System.Windows.Forms.TreeNode)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UnHookNotifyPropertyChanged</Name>
                  <Signature>void UnHookNotifyPropertyChanged (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HookNotifyPropertyChanged</Name>
                  <Signature>void HookNotifyPropertyChanged (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>HookComponentChangedEvents</Name>
                  <Signature>void HookComponentChangedEvents ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnComponentRemoved</Name>
                  <Signature>void OnComponentRemoved (object, [System] System.ComponentModel.Design.ComponentEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.Design.ComponentEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UnhookComponentChangedEvents</Name>
                  <Signature>void UnhookComponentChangedEvents ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnUIMapObjectPropertyChanged</Name>
                  <Signature>void OnUIMapObjectPropertyChanged (object, [System] System.ComponentModel.PropertyChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.PropertyChangedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetCurrentStateImage</Name>
                  <Signature>void SetCurrentStateImage (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>void d (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnComponentRename</Name>
                  <Signature>void OnComponentRename (object, [System] System.ComponentModel.Design.ComponentRenameEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System] System.ComponentModel.Design.ComponentRenameEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetNodeFromTag</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeNode GetNodeFromTag ([System.Windows.Forms] System.Windows.Forms.TreeNode, [System] System.ComponentModel.Component)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TreeNode a ([System.Windows.Forms] System.Windows.Forms.TreeNode, [System] System.ComponentModel.Component)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnTreeViewAfterSelect</Name>
                  <Signature>void OnTreeViewAfterSelect (object, [System.Windows.Forms] System.Windows.Forms.TreeViewEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.TreeViewEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnSelectedObjectChanged</Name>
                  <Signature>void OnSelectedObjectChanged ()</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>OnSelectedObjectChanged</Name>
                  <Signature>void OnSelectedObjectChanged ()</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SelectedObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_SelectedObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SelectedObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_SelectedObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_SelectedObject</Name>
                  <Signature>void set_SelectedObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_SelectedObject</Name>
                  <Signature>void set_SelectedObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ShowName</Name>
                  <Signature>bool get_ShowName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ShowName</Name>
                  <Signature>bool get_ShowName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ShowName</Name>
                  <Signature>void set_ShowName (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ShowName</Name>
                  <Signature>void set_ShowName (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ShowDescription</Name>
                  <Signature>bool get_ShowDescription ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ShowDescription</Name>
                  <Signature>bool get_ShowDescription ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ShowDescription</Name>
                  <Signature>void set_ShowDescription (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ShowDescription</Name>
                  <Signature>void set_ShowDescription (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>add_SelectedObjectChanged</Name>
                  <Signature>void add_SelectedObjectChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>add_SelectedObjectChanged</Name>
                  <Signature>void add_SelectedObjectChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>remove_SelectedObjectChanged</Name>
                  <Signature>void remove_SelectedObjectChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>remove_SelectedObjectChanged</Name>
                  <Signature>void remove_SelectedObjectChanged ([mscorlib] System.EventHandler)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnTreeViewMouseDown</Name>
                  <Signature>void OnTreeViewMouseDown (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnTreeViewLeave</Name>
                  <Signature>void OnTreeViewLeave (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnTreeViewEnter</Name>
                  <Signature>void OnTreeViewEnter (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>DoHighlightSelectedObject</Name>
                  <Signature>void DoHighlightSelectedObject ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>void e ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnKeyUp</Name>
                  <Signature>void OnKeyUp (object, [System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.KeyEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>m_UpdateHighlightTimer_Tick</Name>
                  <Signature>void m_UpdateHighlightTimer_Tick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>void f ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>HighlightSelectedObject</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>HighlightSelectedObject</Name>
                  <Signature>bool HighlightSelectedObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap</Signature>
                </Original>
                <Obfuscated>
                  <Name>UIMap</Name>
                  <Signature>TestAutomationFX.UI.UIMap UIMap</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SelectedObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>SelectedObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject SelectedObject</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ShowName</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ShowName</Name>
                  <Signature>bool ShowName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ShowDescription</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>ShowDescription</Name>
                  <Signature>bool ShowDescription</Signature>
                </Obfuscated>
              </Property>
              <Event>
                <Original>
                  <Name>SelectedObjectChanged</Name>
                </Original>
                <Obfuscated>
                  <Name>SelectedObjectChanged</Name>
                </Obfuscated>
              </Event>
              <NestedType>
                <Name>TreeNodeIteratorDelegate</Name>
                <NewName>a</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ([System.Windows.Forms] System.Windows.Forms.TreeNode, [out] bool&amp;)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>void Invoke ([System.Windows.Forms] System.Windows.Forms.TreeNode, [out] bool&amp;)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([System.Windows.Forms] System.Windows.Forms.TreeNode, [out] bool&amp;, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([System.Windows.Forms] System.Windows.Forms.TreeNode, [out] bool&amp;, [mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([out] bool&amp;, [mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>void EndInvoke ([out] bool&amp;, [mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIObjectTypes</Name>
              <NewName>TestAutomationFX.UI.UIObjectTypes</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Unknown</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Unknown</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Application</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Application</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MainWindow</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MainWindow</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Window</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Window</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>MenuItem</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MenuItem</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Button</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Button</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Checkbox</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Checkbox</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>RadioButton</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RadioButton</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TextBox</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TextBox</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Label</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Label</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Listbox</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Listbox</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ComboBox</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ComboBox</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TreeView</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TreeView</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Grid</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Grid</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>TabControl</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>TabControl</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Toolbox</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Toolbox</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>ControlPart</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ControlPart</Name>
                  <Signature>TestAutomationFX.UI.UIObjectTypes</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UIWindowProviderFactory</Name>
              <NewName>R</NewName>
              <Method>
                <Original>
                  <Name>CreateUIWindow</Name>
                  <Signature>TestAutomationFX.UI.UIWindow CreateUIWindow (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIWindow a (TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UnderTestInfoForm</Name>
              <NewName>TestAutomationFX.UI.UnderTestInfoForm</NewName>
              <Field>
                <Original>
                  <Name>m_Instance</Name>
                  <Signature>TestAutomationFX.UI.UnderTestInfoForm</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UnderTestInfoForm</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>panel1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Panel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UnderTestInfo</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_LabelBlinkTimer</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Timer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Instance</Name>
                  <Signature>static TestAutomationFX.UI.UnderTestInfoForm get_Instance ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Instance</Name>
                  <Signature>static TestAutomationFX.UI.UnderTestInfoForm get_Instance ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnLabelBlinkTimerTick</Name>
                  <Signature>void OnLabelBlinkTimerTick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Instance</Name>
                  <Signature>TestAutomationFX.UI.UnderTestInfoForm</Signature>
                </Original>
                <Obfuscated>
                  <Name>Instance</Name>
                  <Signature>TestAutomationFX.UI.UnderTestInfoForm Instance</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UpdateCheckerForm</Name>
              <NewName>TestAutomationFX.UI.UpdateCheckerForm</NewName>
              <Field>
                <Original>
                  <Name>UpdateInfoXmlDocumentUrl</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_UpdateInfo</Name>
                  <Signature>TestAutomationFX.UI.UpdateInfo</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UpdateInfo</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Owner</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.IWin32Window</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.IWin32Window</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_StatusLabel</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_CurrentVersion</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AvailableVersion</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>pictureBox1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.PictureBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>button2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Download</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ([System.Windows.Forms] System.Windows.Forms.IWin32Window)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CheckForUpdate</Name>
                  <Signature>void CheckForUpdate (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CheckForUpdate</Name>
                  <Signature>void CheckForUpdate (bool)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetNoUpdateAvailableInfo</Name>
                  <Signature>void SetNoUpdateAvailableInfo ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetStatus</Name>
                  <Signature>void SetStatus (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GotoDownloadPage</Name>
                  <Signature>void GotoDownloadPage ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnDownloadClick</Name>
                  <Signature>void OnDownloadClick (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [mscorlib] System.EventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>void c ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.UpdateInfo</Name>
              <NewName>TestAutomationFX.UI.UpdateInfo</NewName>
              <Field>
                <Original>
                  <Name>LastUpdateCheckDateRegistryKeyName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Log</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.ITAFXLog</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_AvailableVersion</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_DownloadURL</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_RegistryKeyHandler</Name>
                  <Signature>TestAutomationFX.Core.RegistryKeyHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.RegistryKeyHandler</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Request</Name>
                  <Signature>[System] System.Net.HttpWebRequest</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.Net.HttpWebRequest</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_Response</Name>
                  <Signature>[System] System.Net.HttpWebResponse</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.Net.HttpWebResponse</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_XmlDocument</Name>
                  <Signature>[System.Xml] System.Xml.XmlDocument</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Xml] System.Xml.XmlDocument</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_AvailableVersion</Name>
                  <Signature>string get_AvailableVersion ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AvailableVersion</Name>
                  <Signature>string get_AvailableVersion ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_CurrentVersion</Name>
                  <Signature>string get_CurrentVersion ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_CurrentVersion</Name>
                  <Signature>string get_CurrentVersion ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetCurrentVersion</Name>
                  <Signature>static [mscorlib] System.Version GetCurrentVersion ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.Version a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsNewVersionAvailable</Name>
                  <Signature>bool get_IsNewVersionAvailable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsNewVersionAvailable</Name>
                  <Signature>bool get_IsNewVersionAvailable ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DownloadUrl</Name>
                  <Signature>string get_DownloadUrl ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DownloadUrl</Name>
                  <Signature>string get_DownloadUrl ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetUpdateInfo</Name>
                  <Signature>bool GetUpdateInfo (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetUpdateInfo</Name>
                  <Signature>bool GetUpdateInfo (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>CreateUpdateInfoXmlFile</Name>
                  <Signature>static void CreateUpdateInfoXmlFile (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>CreateUpdateInfoXmlFile</Name>
                  <Signature>static void CreateUpdateInfoXmlFile (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SaveLastUpdateCheckDate</Name>
                  <Signature>void SaveLastUpdateCheckDate ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLastUpdateCheckDate</Name>
                  <Signature>[mscorlib] System.DateTime GetLastUpdateCheckDate ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.DateTime a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetLastUpdateRegistryKey</Name>
                  <Signature>static [mscorlib] Microsoft.Win32.RegistryKey GetLastUpdateRegistryKey ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] Microsoft.Win32.RegistryKey a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsTimeForNewUpdateCheck</Name>
                  <Signature>bool get_IsTimeForNewUpdateCheck ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsTimeForNewUpdateCheck</Name>
                  <Signature>bool get_IsTimeForNewUpdateCheck ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>AvailableVersion</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>AvailableVersion</Name>
                  <Signature>string AvailableVersion</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>CurrentVersion</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>CurrentVersion</Name>
                  <Signature>string CurrentVersion</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsNewVersionAvailable</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsNewVersionAvailable</Name>
                  <Signature>bool IsNewVersionAvailable</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DownloadUrl</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>DownloadUrl</Name>
                  <Signature>string DownloadUrl</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsTimeForNewUpdateCheck</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsTimeForNewUpdateCheck</Name>
                  <Signature>bool IsTimeForNewUpdateCheck</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.VerifyPropertyAdapter</Name>
              <NewName>S</NewName>
              <Field>
                <Original>
                  <Name>m_ControlProperties</Name>
                  <Signature>TestAutomationFX.Core.ControlProperties</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.ControlProperties</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;PropertyOwner&gt;k__BackingField</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;PropertyName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Info&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object, string, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (object, string, string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PropertyOwner</Name>
                  <Signature>object get_PropertyOwner ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_PropertyOwner</Name>
                  <Signature>void set_PropertyOwner (object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PropertyName</Name>
                  <Signature>string get_PropertyName ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_PropertyName</Name>
                  <Signature>void set_PropertyName (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Info</Name>
                  <Signature>string get_Info ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string b ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Info</Name>
                  <Signature>void set_Info (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_PropertyValue</Name>
                  <Signature>object get_PropertyValue ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>object b ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_PropertyValue</Name>
                  <Signature>void set_PropertyValue (object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b (object)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ConvertFromString</Name>
                  <Signature>object ConvertFromString (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>object a (string)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPropertyType</Name>
                  <Signature>[mscorlib] System.Type GetPropertyType ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Type a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ControlProperties</Name>
                  <Signature>TestAutomationFX.Core.ControlProperties get_ControlProperties ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.ControlProperties a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetValueFromObject</Name>
                  <Signature>object GetValueFromObject (string, object)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetValueFromObject</Name>
                  <Signature>object GetValueFromObject (string, object)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetValueFromObject</Name>
                  <Signature>void SetValueFromObject (string, object, object)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetValueFromObject</Name>
                  <Signature>void SetValueFromObject (string, object, object)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>PropertyOwner</Name>
                  <Signature>object</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>object</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PropertyName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Info</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>PropertyValue</Name>
                  <Signature>object</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>object</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ControlProperties</Name>
                  <Signature>TestAutomationFX.Core.ControlProperties</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>TestAutomationFX.Core.ControlProperties</Signature>
                </Obfuscated>
              </Property>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.VerifyPropertyAttribute</Name>
              <NewName>TestAutomationFX.UI.VerifyPropertyAttribute</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.VerifyPropertyAdapterFactory</Name>
              <NewName>T</NewName>
              <Method>
                <Original>
                  <Name>GetPropertiesForUIObject</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; string, TestAutomationFX.UI.VerifyPropertyAdapter &gt; GetPropertiesForUIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.Dictionary`2&lt; string, S &gt; a (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddPropertiesForUIObject</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.Dictionary`2&lt; string, TestAutomationFX.UI.VerifyPropertyAdapter &gt; AddPropertiesForUIObject (TestAutomationFX.UI.UIObject, [mscorlib] System.Collections.Generic.Dictionary`2&lt; string, TestAutomationFX.UI.VerifyPropertyAdapter &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.Dictionary`2&lt; string, S &gt; a (TestAutomationFX.UI.UIObject, [mscorlib] System.Collections.Generic.Dictionary`2&lt; string, S &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AddPropertiesForDotNetControl</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.Dictionary`2&lt; string, TestAutomationFX.UI.VerifyPropertyAdapter &gt; AddPropertiesForDotNetControl (TestAutomationFX.UI.UIObject, [mscorlib] System.Collections.Generic.Dictionary`2&lt; string, TestAutomationFX.UI.VerifyPropertyAdapter &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.Dictionary`2&lt; string, S &gt; b (TestAutomationFX.UI.UIObject, [mscorlib] System.Collections.Generic.Dictionary`2&lt; string, S &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.UI.WindowInfoForm</Name>
              <NewName>TestAutomationFX.UI.WindowInfoForm</NewName>
              <Field>
                <Original>
                  <Name>m_WindowHandle</Name>
                  <Signature>native int</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>native int</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_WindowController</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>components</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System] System.ComponentModel.IContainer</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_WindowHandleTextbox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label2</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ChildWindowsListBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label3</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_WindowTextTextbox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_OwnedWindowsListbox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.ListBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>label4</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Label</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_ParentWindowTextBox</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.TextBox</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>linkLabel1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.LinkLabel</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.LinkLabel</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>button1</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[System.Windows.Forms] System.Windows.Forms.Button</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_WindowHandle</Name>
                  <Signature>native int get_WindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_WindowHandle</Name>
                  <Signature>native int get_WindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_WindowHandle</Name>
                  <Signature>void set_WindowHandle (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_WindowHandle</Name>
                  <Signature>void set_WindowHandle (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_WindowController</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_WindowController ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_WindowController</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_WindowController ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UpdateInfo</Name>
                  <Signature>void UpdateInfo ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnWindowsListBoxMouseDoubleClick</Name>
                  <Signature>void OnWindowsListBoxMouseDoubleClick (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.MouseEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>OnLinkLabelLinkClicked</Name>
                  <Signature>void OnLinkLabelLinkClicked (object, [System.Windows.Forms] System.Windows.Forms.LinkLabelLinkClickedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (object, [System.Windows.Forms] System.Windows.Forms.LinkLabelLinkClickedEventArgs)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Dispose</Name>
                  <Signature>void Dispose (bool)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>InitializeComponent</Name>
                  <Signature>void InitializeComponent ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>WindowHandle</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>WindowHandle</Name>
                  <Signature>native int WindowHandle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>WindowController</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                </Original>
                <Obfuscated>
                  <Name>WindowController</Name>
                  <Signature>TestAutomationFX.Core.WindowController WindowController</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.Verify</Name>
              <NewName>TestAutomationFX.Core.Verify</NewName>
              <Method>
                <Original>
                  <Name>FileExists</Name>
                  <Signature>static void FileExists (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FileExists</Name>
                  <Signature>static void FileExists (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FileExists</Name>
                  <Signature>static void FileExists (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FileExists</Name>
                  <Signature>static void FileExists (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FileExists</Name>
                  <Signature>static void FileExists (string, [mscorlib] System.Environment/SpecialFolder)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FileExists</Name>
                  <Signature>static void FileExists (string, [mscorlib] System.Environment/SpecialFolder)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FileExists</Name>
                  <Signature>static void FileExists (string, [mscorlib] System.Environment/SpecialFolder, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FileExists</Name>
                  <Signature>static void FileExists (string, [mscorlib] System.Environment/SpecialFolder, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FailTest</Name>
                  <Signature>static void FailTest (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FailTest</Name>
                  <Signature>static void FailTest (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FailTest</Name>
                  <Signature>static void FailTest (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FailTest</Name>
                  <Signature>static void FailTest (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>VerifyFileExists</Name>
                  <Signature>static void VerifyFileExists (string, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static void a (string, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AreEqual</Name>
                  <Signature>static void AreEqual (object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AreEqual</Name>
                  <Signature>static void AreEqual (object, object)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>AreEqual</Name>
                  <Signature>static void AreEqual (object, object, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>AreEqual</Name>
                  <Signature>static void AreEqual (object, object, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UserAcknowledge</Name>
                  <Signature>static void UserAcknowledge (string, [System.Windows.Forms] System.Windows.Forms.MessageBoxButtons, [System.Windows.Forms] System.Windows.Forms.DialogResult)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>UserAcknowledge</Name>
                  <Signature>static void UserAcknowledge (string, [System.Windows.Forms] System.Windows.Forms.MessageBoxButtons, [System.Windows.Forms] System.Windows.Forms.DialogResult)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>UserAcknowledge</Name>
                  <Signature>static void UserAcknowledge (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>UserAcknowledge</Name>
                  <Signature>static void UserAcknowledge (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.CustomVerifier</Name>
              <NewName>TestAutomationFX.Core.CustomVerifier</NewName>
              <Field>
                <Original>
                  <Name>m_UIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_DisplayName</Name>
                  <Signature>string get_DisplayName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DisplayName</Name>
                  <Signature>string get_DisplayName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_StaticVerifyMethodName</Name>
                  <Signature>string get_StaticVerifyMethodName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_StaticVerifyMethodName</Name>
                  <Signature>string get_StaticVerifyMethodName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetRecordedAction</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedAction GetRecordedAction ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetRecordedAction</Name>
                  <Signature>TestAutomationFX.Core.Recording.RecordedAction GetRecordedAction ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetParameters</Name>
                  <Signature>object[] GetParameters ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetParameters</Name>
                  <Signature>object[] GetParameters ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_SelectedUIObject</Name>
                  <Signature>void set_SelectedUIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_SelectedUIObject</Name>
                  <Signature>void set_SelectedUIObject (TestAutomationFX.UI.UIObject)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_SelectedUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_SelectedUIObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_SelectedUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject get_SelectedUIObject ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Validate</Name>
                  <Signature>bool Validate ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Validate</Name>
                  <Signature>bool Validate ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>DisplayName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>DisplayName</Name>
                  <Signature>string DisplayName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>StaticVerifyMethodName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>StaticVerifyMethodName</Name>
                  <Signature>string StaticVerifyMethodName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>SelectedUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject</Signature>
                </Original>
                <Obfuscated>
                  <Name>SelectedUIObject</Name>
                  <Signature>TestAutomationFX.UI.UIObject SelectedUIObject</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.VerifyException</Name>
              <NewName>TestAutomationFX.Core.VerifyException</NewName>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, TestAutomationFX.Core.Logging.LogData)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.VirtualKeys</Name>
              <NewName>TestAutomationFX.Core.VirtualKeys</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_0</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_0</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_1</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_1</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_2</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_2</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_3</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_3</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_4</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_4</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_5</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_5</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_6</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_6</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_7</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_7</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_8</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_8</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_9</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_9</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_A</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_A</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_ADD</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_ADD</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_ALT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_ALT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_APOSTROPHE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_APOSTROPHE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_APPSPOPUP</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_APPSPOPUP</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_B</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_B</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_BACKSLASH</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_BACKSLASH</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_BACKSPACE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_BACKSPACE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_C</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_C</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_CAPSLOCK</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_CAPSLOCK</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_CONTROL</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_CONTROL</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_CTRLBREAK</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_CTRLBREAK</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_D</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_D</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_DELETE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_DELETE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_DOWN</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_DOWN</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_E</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_E</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_END</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_END</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_ENTER</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_ENTER</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_EQUAL</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_EQUAL</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_ESC</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_ESC</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_F</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_F</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_F1</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_F1</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_F10</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_F10</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_F11</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_F11</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_F12</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_F12</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_F2</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_F2</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_F3</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_F3</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_F4</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_F4</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_F5</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_F5</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_F6</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_F6</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_F7</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_F7</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_F8</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_F8</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_F9</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_F9</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_G</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_G</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_H</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_H</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_HOME</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_HOME</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_I</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_I</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_INSERT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_INSERT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_J</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_J</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_K</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_K</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_L</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_L</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_LALT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_LALT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_LBUTTON</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_LBUTTON</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_LCONTROL</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_LCONTROL</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_LEFT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_LEFT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_LEFTBRACKET</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_LEFTBRACKET</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_LSHIFT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_LSHIFT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_LWINDOWS</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_LWINDOWS</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_M</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_M</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_MBUTTON</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_MBUTTON</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_MINUS</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_MINUS</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_N</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_N</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMLOCK</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMLOCK</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_0</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_0</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_1</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_1</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_2</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_2</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_3</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_3</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_4</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_4</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_5</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_5</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_6</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_6</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_7</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_7</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_8</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_8</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_9</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_9</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_ADD</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_ADD</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_DECIMAL</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_DECIMAL</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_DIVIDE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_DIVIDE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_MINUS</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_MINUS</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_MOINS</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_MOINS</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_MULTIPLY</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_MULTIPLY</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_PLUS</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_PLUS</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_POINT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_POINT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_NUMPAD_SUBTRACT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_NUMPAD_SUBTRACT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_O</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_O</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_P</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_P</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_PAGEDOWN</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_PAGEDOWN</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_PAGEUP</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_PAGEUP</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_PAUSE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_PAUSE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_PLUS</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_PLUS</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_POINT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_POINT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_POINTVIRGULE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_POINTVIRGULE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_PRINTSCREEN</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_PRINTSCREEN</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_Q</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_Q</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_QUOTE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_QUOTE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_R</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_R</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_RALT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_RALT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_RBUTTON</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_RBUTTON</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_RCONTROL</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_RCONTROL</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_RIGHT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_RIGHT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_RIGHTBRACKET</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_RIGHTBRACKET</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_RSHIFT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_RSHIFT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_RWINDOWS</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_RWINDOWS</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_S</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_S</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_SCROLL</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_SCROLL</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_SHIFT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_SHIFT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_SLASH</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_SLASH</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_SPACE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_SPACE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_SUBTRACT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_SUBTRACT</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_T</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_T</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_TAB</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_TAB</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_TILDE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_TILDE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_U</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_U</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_UNDERLINE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_UNDERLINE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_UP</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_UP</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_V</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_V</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_W</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_W</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_VIRGULE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_VIRGULE</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_X</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_X</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_Y</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_Y</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>VK_Z</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>VK_Z</Name>
                  <Signature>TestAutomationFX.Core.VirtualKeys</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.VisualStudio.VisualStudioHelper</Name>
              <NewName>TestAutomationFX.Core.VisualStudio.VisualStudioHelper</NewName>
              <Field>
                <Original>
                  <Name>m_VisualStudioWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_VisualStudioProcessNames</Name>
                  <Signature>string[]</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string[]</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_VisualStudioWindow</Name>
                  <Signature>static TestAutomationFX.Core.WindowController get_VisualStudioWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_VisualStudioWindow</Name>
                  <Signature>static TestAutomationFX.Core.WindowController get_VisualStudioWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SendVisualStudioToBack</Name>
                  <Signature>static void SendVisualStudioToBack ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SendVisualStudioToBack</Name>
                  <Signature>static void SendVisualStudioToBack ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BringVisualStudioToFront</Name>
                  <Signature>static void BringVisualStudioToFront ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>BringVisualStudioToFront</Name>
                  <Signature>static void BringVisualStudioToFront ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsInVisualStudio</Name>
                  <Signature>static bool get_IsInVisualStudio ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsInVisualStudio</Name>
                  <Signature>static bool get_IsInVisualStudio ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetAvailableTypes</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Type &gt; GetAvailableTypes ([mscorlib] System.Type, [System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetAvailableTypes</Name>
                  <Signature>static [mscorlib] System.Collections.Generic.List`1&lt; [mscorlib] System.Type &gt; GetAvailableTypes ([mscorlib] System.Type, [System] System.ComponentModel.ISite)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.cctor</Name>
                  <Signature>static void .cctor ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>VisualStudioWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                </Original>
                <Obfuscated>
                  <Name>VisualStudioWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController VisualStudioWindow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsInVisualStudio</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsInVisualStudio</Name>
                  <Signature>bool IsInVisualStudio</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo</Name>
              <NewName>TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo</NewName>
              <Field>
                <Original>
                  <Name>&lt;Relation&gt;k__BackingField</Name>
                  <Signature>TestAutomationFX.Core.WindowsAPISupport.WindowRelation</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.WindowsAPISupport.WindowRelation</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Text&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;RegExText&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Class&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;InstanceName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ControlId&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;Index&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;MatchedIndex&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>c</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;ProcessId&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>d</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;MsaaRole&gt;k__BackingField</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt;</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;MsaaName&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>e</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>&lt;AutomationID&gt;k__BackingField</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>f</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>get_Relation</Name>
                  <Signature>TestAutomationFX.Core.WindowsAPISupport.WindowRelation get_Relation ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Relation</Name>
                  <Signature>TestAutomationFX.Core.WindowsAPISupport.WindowRelation get_Relation ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Relation</Name>
                  <Signature>void set_Relation (TestAutomationFX.Core.WindowsAPISupport.WindowRelation)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Relation</Name>
                  <Signature>void set_Relation (TestAutomationFX.Core.WindowsAPISupport.WindowRelation)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Text</Name>
                  <Signature>void set_Text (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Text</Name>
                  <Signature>void set_Text (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RegExText</Name>
                  <Signature>string get_RegExText ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RegExText</Name>
                  <Signature>string get_RegExText ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_RegExText</Name>
                  <Signature>void set_RegExText (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_RegExText</Name>
                  <Signature>void set_RegExText (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Class</Name>
                  <Signature>string get_Class ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Class</Name>
                  <Signature>string get_Class ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Class</Name>
                  <Signature>void set_Class (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Class</Name>
                  <Signature>void set_Class (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_InstanceName</Name>
                  <Signature>string get_InstanceName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_InstanceName</Name>
                  <Signature>string get_InstanceName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_InstanceName</Name>
                  <Signature>void set_InstanceName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_InstanceName</Name>
                  <Signature>void set_InstanceName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ControlId</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_ControlId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ControlId</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_ControlId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ControlId</Name>
                  <Signature>void set_ControlId ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ControlId</Name>
                  <Signature>void set_ControlId ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Index</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Index</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Index</Name>
                  <Signature>void set_Index ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Index</Name>
                  <Signature>void set_Index ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_MatchedIndex ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_MatchedIndex ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MatchedIndex</Name>
                  <Signature>void set_MatchedIndex ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MatchedIndex</Name>
                  <Signature>void set_MatchedIndex ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ProcessId</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_ProcessId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ProcessId</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; get_ProcessId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_ProcessId</Name>
                  <Signature>void set_ProcessId ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_ProcessId</Name>
                  <Signature>void set_ProcessId ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MsaaRole</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt; get_MsaaRole ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MsaaRole</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt; get_MsaaRole ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MsaaRole</Name>
                  <Signature>void set_MsaaRole ([mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MsaaRole</Name>
                  <Signature>void set_MsaaRole ([mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_MsaaName</Name>
                  <Signature>string get_MsaaName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_MsaaName</Name>
                  <Signature>string get_MsaaName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_MsaaName</Name>
                  <Signature>void set_MsaaName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_MsaaName</Name>
                  <Signature>void set_MsaaName (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_AutomationID</Name>
                  <Signature>string get_AutomationID ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_AutomationID</Name>
                  <Signature>string get_AutomationID ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_AutomationID</Name>
                  <Signature>void set_AutomationID (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_AutomationID</Name>
                  <Signature>void set_AutomationID (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Description</Name>
                  <Signature>string get_Description ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>Relation</Name>
                  <Signature>TestAutomationFX.Core.WindowsAPISupport.WindowRelation</Signature>
                </Original>
                <Obfuscated>
                  <Name>Relation</Name>
                  <Signature>TestAutomationFX.Core.WindowsAPISupport.WindowRelation Relation</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Text</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Text</Name>
                  <Signature>string Text</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RegExText</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>RegExText</Name>
                  <Signature>string RegExText</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Class</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Class</Name>
                  <Signature>string Class</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>InstanceName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>InstanceName</Name>
                  <Signature>string InstanceName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ControlId</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>ControlId</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; ControlId</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Index</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>Index</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; Index</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>MatchedIndex</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; MatchedIndex</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ProcessId</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>ProcessId</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt; ProcessId</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MsaaRole</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>MsaaRole</Name>
                  <Signature>[mscorlib] System.Nullable`1&lt; [System.Windows.Forms] System.Windows.Forms.AccessibleRole &gt; MsaaRole</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>MsaaName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>MsaaName</Name>
                  <Signature>string MsaaName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>AutomationID</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>AutomationID</Name>
                  <Signature>string AutomationID</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Description</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Description</Name>
                  <Signature>string Description</Signature>
                </Obfuscated>
              </Property>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.WindowController</Name>
              <NewName>TestAutomationFX.Core.WindowController</NewName>
              <Field>
                <Original>
                  <Name>m_WindowHandle</Name>
                  <Signature>native int</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>native int</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_IsBadControlProxy</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>m_DotNetName</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Field>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (native int, native int, string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (native int, native int, string, string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (native int, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (native int, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetupWindowFromPoint</Name>
                  <Signature>void SetupWindowFromPoint (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (int32, int32)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RealWindowFromPoint</Name>
                  <Signature>static native int RealWindowFromPoint (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RealWindowFromPoint</Name>
                  <Signature>static native int RealWindowFromPoint (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsValid</Name>
                  <Signature>bool get_IsValid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsValid</Name>
                  <Signature>bool get_IsValid ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsBadControlProxy</Name>
                  <Signature>bool get_IsBadControlProxy ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsBadControlProxy</Name>
                  <Signature>bool get_IsBadControlProxy ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetText</Name>
                  <Signature>void SetText (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetText</Name>
                  <Signature>void SetText (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_WindowHandle</Name>
                  <Signature>native int get_WindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_WindowHandle</Name>
                  <Signature>native int get_WindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindChild</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindChild (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindChild</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindChild (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindChildInternal</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindChildInternal (string, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.WindowController a (string, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_WindowIdentification</Name>
                  <Signature>string get_WindowIdentification ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>string a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindChild</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindChild (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindChild</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindChild (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindChildInternal</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindChildInternal (int32, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>TestAutomationFX.Core.WindowController a (int32, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindChildByIndex</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindChildByIndex (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindChildByIndex</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindChildByIndex (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindChildByIndexInternal</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindChildByIndexInternal (int32, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>TestAutomationFX.Core.WindowController b (int32, int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindChildByDotNetName</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindChildByDotNetName (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindChildByDotNetName</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindChildByDotNetName (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindOwnedWindowByDotNetName</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindOwnedWindowByDotNetName (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindOwnedWindowByDotNetName</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindOwnedWindowByDotNetName (string, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindOwnedWindowByIndex</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindOwnedWindowByIndex (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindOwnedWindowByIndex</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindOwnedWindowByIndex (int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindWindowByIndex</Name>
                  <Signature>native int FindWindowByIndex (int32, [mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt;)</Signature>
                  <Accessibility>family</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindWindowByIndex</Name>
                  <Signature>native int FindWindowByIndex (int32, [mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt;)</Signature>
                  <Accessibility>family</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetPopupWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController GetPopupWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetPopupWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController GetPopupWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>EnsureValid</Name>
                  <Signature>void EnsureValid ()</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a ()</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SetFocus</Name>
                  <Signature>void SetFocus ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SetFocus</Name>
                  <Signature>void SetFocus ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle get_Bounds ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_HasCaption</Name>
                  <Signature>bool get_HasCaption ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_HasCaption</Name>
                  <Signature>bool get_HasCaption ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Text</Name>
                  <Signature>string get_Text ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>set_Text</Name>
                  <Signature>void set_Text (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>set_Text</Name>
                  <Signature>void set_Text (string)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_OwningProcess</Name>
                  <Signature>[System] System.Diagnostics.Process get_OwningProcess ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_OwningProcess</Name>
                  <Signature>[System] System.Diagnostics.Process get_OwningProcess ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetWindowText</Name>
                  <Signature>string GetWindowText ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetWindowText</Name>
                  <Signature>string GetWindowText ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_OwnedWindowHandles</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; native int &gt; get_OwnedWindowHandles ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_OwnedWindowHandles</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; native int &gt; get_OwnedWindowHandles ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetOwnedWindowHandles</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; native int &gt; GetOwnedWindowHandles ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; native int &gt; a ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_OwnedWindows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt; get_OwnedWindows ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_OwnedWindows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt; get_OwnedWindows ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetOwnedWindows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt; GetOwnedWindows ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt; a ([mscorlib] System.Nullable`1&lt; int32 &gt;)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SortByScreenLocation</Name>
                  <Signature>int32 SortByScreenLocation (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>int32 a (TestAutomationFX.Core.WindowController, TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ChildWindowHandles</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; native int &gt; get_ChildWindowHandles ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ChildWindowHandles</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; native int &gt; get_ChildWindowHandles ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ChildWindows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt; get_ChildWindows ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ChildWindows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt; get_ChildWindows ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetWindowControllers</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt; GetWindowControllers ([mscorlib] System.Collections.Generic.List`1&lt; native int &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetWindowControllers</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt; GetWindowControllers ([mscorlib] System.Collections.Generic.List`1&lt; native int &gt;)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ParentWindowHandle</Name>
                  <Signature>native int get_ParentWindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ParentWindowHandle</Name>
                  <Signature>native int get_ParentWindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ParentWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_ParentWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ParentWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_ParentWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RealParentWindowHandle</Name>
                  <Signature>native int get_RealParentWindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RealParentWindowHandle</Name>
                  <Signature>native int get_RealParentWindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RealParentWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_RealParentWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RealParentWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_RealParentWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RootParentWindowHandle</Name>
                  <Signature>native int get_RootParentWindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RootParentWindowHandle</Name>
                  <Signature>native int get_RootParentWindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RootParentWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_RootParentWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RootParentWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_RootParentWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RootOwnerWindowHandle</Name>
                  <Signature>native int get_RootOwnerWindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RootOwnerWindowHandle</Name>
                  <Signature>native int get_RootOwnerWindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_RootOwnerWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_RootOwnerWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_RootOwnerWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_RootOwnerWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>ToString</Name>
                  <Signature>string ToString ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_WindowClass</Name>
                  <Signature>string get_WindowClass ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_WindowClass</Name>
                  <Signature>string get_WindowClass ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_ControlId</Name>
                  <Signature>int32 get_ControlId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_ControlId</Name>
                  <Signature>int32 get_ControlId ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>BringToFront</Name>
                  <Signature>void BringToFront ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>BringToFront</Name>
                  <Signature>void BringToFront ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_OwnerWindowHandle</Name>
                  <Signature>native int get_OwnerWindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_OwnerWindowHandle</Name>
                  <Signature>native int get_OwnerWindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsOwnedWindow</Name>
                  <Signature>bool get_IsOwnedWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsOwnedWindow</Name>
                  <Signature>bool get_IsOwnedWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_OwnerWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_OwnerWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_OwnerWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController get_OwnerWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindOwnedWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindOwnedWindow (string, string, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindOwnedWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindOwnedWindow (string, string, int32, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindWindow (TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindWindow (TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo, int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindWindows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt; FindWindows (TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindWindows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt; FindWindows (TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetIndexOfWindowHandle</Name>
                  <Signature>static int32 GetIndexOfWindowHandle ([mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt;, native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetIndexOfWindowHandle</Name>
                  <Signature>static int32 GetIndexOfWindowHandle ([mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt;, native int)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetMatchedIndex</Name>
                  <Signature>int32 GetMatchedIndex (TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetMatchedIndex</Name>
                  <Signature>int32 GetMatchedIndex (TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>FindWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindWindow (TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo, int32, TestAutomationFX.Core.WindowController/IsSearchValidDelegate)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>FindWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController FindWindow (TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo, int32, TestAutomationFX.Core.WindowController/IsSearchValidDelegate)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetWindowsToSearch</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt; GetWindowsToSearch (TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt; a (TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MatchFindWindowInfo</Name>
                  <Signature>static bool MatchFindWindowInfo (TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo, TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>MatchFindWindowInfo</Name>
                  <Signature>static bool MatchFindWindowInfo (TestAutomationFX.Core.WindowsAPISupport.FindWindowInfo, TestAutomationFX.Core.WindowController)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>MatchWindowTextFromRegularExpression</Name>
                  <Signature>static bool MatchWindowTextFromRegularExpression (TestAutomationFX.Core.WindowController, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static bool a (TestAutomationFX.Core.WindowController, string)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>SendToBack</Name>
                  <Signature>void SendToBack ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>SendToBack</Name>
                  <Signature>void SendToBack ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DotNetControl</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlProxy get_DotNetControl ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DotNetControl</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlProxy get_DotNetControl ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DotNetName</Name>
                  <Signature>string get_DotNetName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DotNetName</Name>
                  <Signature>string get_DotNetName ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_Index</Name>
                  <Signature>int32 get_Index ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsWPFContainer</Name>
                  <Signature>bool get_IsWPFContainer ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsWPFContainer</Name>
                  <Signature>bool get_IsWPFContainer ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsSilverlightContainer</Name>
                  <Signature>bool get_IsSilverlightContainer ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>bool a ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsEnabled</Name>
                  <Signature>bool get_IsEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsEnabled</Name>
                  <Signature>bool get_IsEnabled ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsFocused</Name>
                  <Signature>bool get_IsFocused ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsFocused</Name>
                  <Signature>bool get_IsFocused ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsVisible</Name>
                  <Signature>bool get_IsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsVisible</Name>
                  <Signature>bool get_IsVisible ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>GetFocusedWindow</Name>
                  <Signature>static native int GetFocusedWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>GetFocusedWindow</Name>
                  <Signature>static native int GetFocusedWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsProcessingMessages</Name>
                  <Signature>bool IsProcessingMessages ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsProcessingMessages</Name>
                  <Signature>bool IsProcessingMessages ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>IsProcessingMessages</Name>
                  <Signature>bool IsProcessingMessages (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>IsProcessingMessages</Name>
                  <Signature>bool IsProcessingMessages (int32)</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>WaitForResponding</Name>
                  <Signature>void WaitForResponding (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>void a (int32)</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsDesktopWindow</Name>
                  <Signature>bool get_IsDesktopWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsDesktopWindow</Name>
                  <Signature>bool get_IsDesktopWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsRootParentWindow</Name>
                  <Signature>bool get_IsRootParentWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsRootParentWindow</Name>
                  <Signature>bool get_IsRootParentWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsRootOwnerWindow</Name>
                  <Signature>bool get_IsRootOwnerWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsRootOwnerWindow</Name>
                  <Signature>bool get_IsRootOwnerWindow ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_DesktopWindowHandle</Name>
                  <Signature>static native int get_DesktopWindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_DesktopWindowHandle</Name>
                  <Signature>static native int get_DesktopWindowHandle ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>RestoreIfMinimized</Name>
                  <Signature>void RestoreIfMinimized ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>RestoreIfMinimized</Name>
                  <Signature>void RestoreIfMinimized ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsMinimized</Name>
                  <Signature>bool get_IsMinimized ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsMinimized</Name>
                  <Signature>bool get_IsMinimized ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>get_IsMaximized</Name>
                  <Signature>bool get_IsMaximized ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>get_IsMaximized</Name>
                  <Signature>bool get_IsMaximized ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Maximize</Name>
                  <Signature>void Maximize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Maximize</Name>
                  <Signature>void Maximize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Minimize</Name>
                  <Signature>void Minimize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Minimize</Name>
                  <Signature>void Minimize ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Restore</Name>
                  <Signature>void Restore ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Restore</Name>
                  <Signature>void Restore ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>Close</Name>
                  <Signature>void Close ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>b</Name>
                  <Signature>void b ()</Signature>
                  <Accessibility>assembly</Accessibility>
                </Obfuscated>
              </Method>
              <Property>
                <Original>
                  <Name>IsValid</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsValid</Name>
                  <Signature>bool IsValid</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsBadControlProxy</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsBadControlProxy</Name>
                  <Signature>bool IsBadControlProxy</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>WindowHandle</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>WindowHandle</Name>
                  <Signature>native int WindowHandle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>WindowIdentification</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>string</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle</Signature>
                </Original>
                <Obfuscated>
                  <Name>Bounds</Name>
                  <Signature>[System.Drawing] System.Drawing.Rectangle Bounds</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>HasCaption</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>HasCaption</Name>
                  <Signature>bool HasCaption</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Text</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>Text</Name>
                  <Signature>string Text</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>OwningProcess</Name>
                  <Signature>[System] System.Diagnostics.Process</Signature>
                </Original>
                <Obfuscated>
                  <Name>OwningProcess</Name>
                  <Signature>[System] System.Diagnostics.Process OwningProcess</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>OwnedWindowHandles</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; native int &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>OwnedWindowHandles</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; native int &gt; OwnedWindowHandles</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>OwnedWindows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>OwnedWindows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt; OwnedWindows</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ChildWindowHandles</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; native int &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>ChildWindowHandles</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; native int &gt; ChildWindowHandles</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ChildWindows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt;</Signature>
                </Original>
                <Obfuscated>
                  <Name>ChildWindows</Name>
                  <Signature>[mscorlib] System.Collections.Generic.List`1&lt; TestAutomationFX.Core.WindowController &gt; ChildWindows</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ParentWindowHandle</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>ParentWindowHandle</Name>
                  <Signature>native int ParentWindowHandle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ParentWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                </Original>
                <Obfuscated>
                  <Name>ParentWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController ParentWindow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RealParentWindowHandle</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>RealParentWindowHandle</Name>
                  <Signature>native int RealParentWindowHandle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RealParentWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                </Original>
                <Obfuscated>
                  <Name>RealParentWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController RealParentWindow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RootParentWindowHandle</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>RootParentWindowHandle</Name>
                  <Signature>native int RootParentWindowHandle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RootParentWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                </Original>
                <Obfuscated>
                  <Name>RootParentWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController RootParentWindow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RootOwnerWindowHandle</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>RootOwnerWindowHandle</Name>
                  <Signature>native int RootOwnerWindowHandle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>RootOwnerWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                </Original>
                <Obfuscated>
                  <Name>RootOwnerWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController RootOwnerWindow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>WindowClass</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>WindowClass</Name>
                  <Signature>string WindowClass</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>ControlId</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>ControlId</Name>
                  <Signature>int32 ControlId</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>OwnerWindowHandle</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>OwnerWindowHandle</Name>
                  <Signature>native int OwnerWindowHandle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsOwnedWindow</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsOwnedWindow</Name>
                  <Signature>bool IsOwnedWindow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>OwnerWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController</Signature>
                </Original>
                <Obfuscated>
                  <Name>OwnerWindow</Name>
                  <Signature>TestAutomationFX.Core.WindowController OwnerWindow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DotNetControl</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlProxy</Signature>
                </Original>
                <Obfuscated>
                  <Name>DotNetControl</Name>
                  <Signature>[TestAutomationFX.NetInjector] TestAutomationFX.NetInjector.ControlProxy DotNetControl</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DotNetName</Name>
                  <Signature>string</Signature>
                </Original>
                <Obfuscated>
                  <Name>DotNetName</Name>
                  <Signature>string DotNetName</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>Index</Name>
                  <Signature>int32</Signature>
                </Original>
                <Obfuscated>
                  <Name>Index</Name>
                  <Signature>int32 Index</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsWPFContainer</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsWPFContainer</Name>
                  <Signature>bool IsWPFContainer</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsSilverlightContainer</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>_Deleted</Name>
                  <Signature>bool</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsEnabled</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsEnabled</Name>
                  <Signature>bool IsEnabled</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsFocused</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsFocused</Name>
                  <Signature>bool IsFocused</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsVisible</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsVisible</Name>
                  <Signature>bool IsVisible</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsDesktopWindow</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsDesktopWindow</Name>
                  <Signature>bool IsDesktopWindow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsRootParentWindow</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsRootParentWindow</Name>
                  <Signature>bool IsRootParentWindow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsRootOwnerWindow</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsRootOwnerWindow</Name>
                  <Signature>bool IsRootOwnerWindow</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>DesktopWindowHandle</Name>
                  <Signature>native int</Signature>
                </Original>
                <Obfuscated>
                  <Name>DesktopWindowHandle</Name>
                  <Signature>native int DesktopWindowHandle</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsMinimized</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsMinimized</Name>
                  <Signature>bool IsMinimized</Signature>
                </Obfuscated>
              </Property>
              <Property>
                <Original>
                  <Name>IsMaximized</Name>
                  <Signature>bool</Signature>
                </Original>
                <Obfuscated>
                  <Name>IsMaximized</Name>
                  <Signature>bool IsMaximized</Signature>
                </Obfuscated>
              </Property>
              <NestedType>
                <Name>IsSearchValidDelegate</Name>
                <NewName>IsSearchValidDelegate</NewName>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor (object, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>Invoke</Name>
                    <Signature>bool Invoke ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>Invoke</Name>
                    <Signature>bool Invoke ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>BeginInvoke</Name>
                    <Signature>[mscorlib] System.IAsyncResult BeginInvoke ([mscorlib] System.AsyncCallback, object)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>EndInvoke</Name>
                    <Signature>bool EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>EndInvoke</Name>
                    <Signature>bool EndInvoke ([mscorlib] System.IAsyncResult)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested public</Accessibility>
              </NestedType>
              <NestedType>
                <Name>&lt;&gt;c__DisplayClass1</Name>
                <NewName>&lt;&gt;c__DisplayClass1</NewName>
                <Field>
                  <Original>
                    <Name>ownedWindowHandles</Name>
                    <Signature>[mscorlib] System.Collections.Generic.List`1&lt; native int &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>ownedWindowHandles</Name>
                    <Signature>[mscorlib] System.Collections.Generic.List`1&lt; native int &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Core.WindowController</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Core.WindowController</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>processId</Name>
                    <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>processId</Name>
                    <Signature>[mscorlib] System.Nullable`1&lt; int32 &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;GetOwnedWindowHandles&gt;b__0</Name>
                    <Signature>bool &lt;GetOwnedWindowHandles&gt;b__0 (native int, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;GetOwnedWindowHandles&gt;b__0</Name>
                    <Signature>bool &lt;GetOwnedWindowHandles&gt;b__0 (native int, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <NestedType>
                <Name>&lt;&gt;c__DisplayClass4</Name>
                <NewName>&lt;&gt;c__DisplayClass4</NewName>
                <Field>
                  <Original>
                    <Name>childWindowHandles</Name>
                    <Signature>[mscorlib] System.Collections.Generic.List`1&lt; native int &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>childWindowHandles</Name>
                    <Signature>[mscorlib] System.Collections.Generic.List`1&lt; native int &gt;</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Field>
                  <Original>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Core.WindowController</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;&gt;4__this</Name>
                    <Signature>TestAutomationFX.Core.WindowController</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Field>
                <Method>
                  <Original>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>.ctor</Name>
                    <Signature>void .ctor ()</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Method>
                  <Original>
                    <Name>&lt;get_ChildWindowHandles&gt;b__3</Name>
                    <Signature>bool &lt;get_ChildWindowHandles&gt;b__3 (native int, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Original>
                  <Obfuscated>
                    <Name>&lt;get_ChildWindowHandles&gt;b__3</Name>
                    <Signature>bool &lt;get_ChildWindowHandles&gt;b__3 (native int, native int)</Signature>
                    <Accessibility>public</Accessibility>
                  </Obfuscated>
                </Method>
                <Accessibility>nested private</Accessibility>
              </NestedType>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.WindowsAPISupport.WindowRelation</Name>
              <NewName>TestAutomationFX.Core.WindowsAPISupport.WindowRelation</NewName>
              <Field>
                <Original>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>value__</Name>
                  <Signature>int32</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Child</Name>
                  <Signature>TestAutomationFX.Core.WindowsAPISupport.WindowRelation</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Child</Name>
                  <Signature>TestAutomationFX.Core.WindowsAPISupport.WindowRelation</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Owned</Name>
                  <Signature>TestAutomationFX.Core.WindowsAPISupport.WindowRelation</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Owned</Name>
                  <Signature>TestAutomationFX.Core.WindowsAPISupport.WindowRelation</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Field>
                <Original>
                  <Name>Unknown</Name>
                  <Signature>TestAutomationFX.Core.WindowsAPISupport.WindowRelation</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>Unknown</Name>
                  <Signature>TestAutomationFX.Core.WindowsAPISupport.WindowRelation</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Field>
              <Visibility>public</Visibility>
            </TopLevelType>
            <TopLevelType>
              <Name>TestAutomationFX.Core.WPFSupport.WPFObjectWrapper</Name>
              <NewName>U</NewName>
              <Method>
                <Original>
                  <Name>FromWindowHandle</Name>
                  <Signature>static TestAutomationFX.Core.WPFSupport.WPFObjectWrapper FromWindowHandle (native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>a</Name>
                  <Signature>static U a (native int)</Signature>
                  <Accessibility>private</Accessibility>
                </Obfuscated>
              </Method>
              <Method>
                <Original>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Original>
                <Obfuscated>
                  <Name>.ctor</Name>
                  <Signature>void .ctor ()</Signature>
                  <Accessibility>public</Accessibility>
                </Obfuscated>
              </Method>
              <Visibility>notpublic</Visibility>
            </TopLevelType>
          </TypeMappings>
          <ManagedResources>
            <Resource>
              <Original>TestAutomationFX.UI.Design.UIMapDesignerView.resources</Original>
              <Obfuscated>TestAutomationFX.UI.Design.UIMapDesignerView.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.ExceptionInfoForm.resources</Original>
              <Obfuscated>TestAutomationFX.Core.ExceptionInfoForm.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Logging.LogDataMessageForm.resources</Original>
              <Obfuscated>TestAutomationFX.Core.Logging.LogDataMessageForm.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Properties.Resources.resources</Original>
              <Obfuscated>TestAutomationFX.Core.Properties.Resources.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.TestRunner.TestMethodInfosControl.resources</Original>
              <Obfuscated>TestAutomationFX.UI.TestRunner.TestMethodInfosControl.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.TestRunner.TestRunnerForm.resources</Original>
              <Obfuscated>TestAutomationFX.UI.TestRunner.TestRunnerForm.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.TestRunner.TestStatusLogControl.resources</Original>
              <Obfuscated>TestAutomationFX.UI.TestRunner.TestStatusLogControl.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.TestRunner.TestStatusReporter.resources</Original>
              <Obfuscated>TestAutomationFX.UI.TestRunner.TestStatusReporter.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.TestRunner.TestSuiteControl.resources</Original>
              <Obfuscated>TestAutomationFX.UI.TestRunner.TestSuiteControl.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.TestRunner.TestSuiteListControl.resources</Original>
              <Obfuscated>TestAutomationFX.UI.TestRunner.TestSuiteListControl.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.AddObjectForm.resources</Original>
              <Obfuscated>TestAutomationFX.UI.AddObjectForm.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.AddUIMapChildForm.resources</Original>
              <Obfuscated>TestAutomationFX.UI.AddUIMapChildForm.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.AddVerificationForm.resources</Original>
              <Obfuscated>TestAutomationFX.UI.AddVerificationForm.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.AutomationElementInfoForm.resources</Original>
              <Obfuscated>TestAutomationFX.UI.AutomationElementInfoForm.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.ClickThroughForm.resources</Original>
              <Obfuscated>TestAutomationFX.UI.ClickThroughForm.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.CrossHairControl.resources</Original>
              <Obfuscated>TestAutomationFX.UI.CrossHairControl.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.InsertRecordedCodeForm.resources</Original>
              <Obfuscated>O.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.RecordingForm.resources</Original>
              <Obfuscated>TestAutomationFX.UI.RecordingForm.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.UIMapTreeView.resources</Original>
              <Obfuscated>TestAutomationFX.UI.UIMapTreeView.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.UnderTestInfoForm.resources</Original>
              <Obfuscated>TestAutomationFX.UI.UnderTestInfoForm.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.UpdateCheckerForm.resources</Original>
              <Obfuscated>TestAutomationFX.UI.UpdateCheckerForm.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.WindowInfoForm.resources</Original>
              <Obfuscated>TestAutomationFX.UI.WindowInfoForm.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.BetaProgram.BetaInformation.resources</Original>
              <Obfuscated>TestAutomationFX.Core.BetaProgram.BetaInformation.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Design.MatchedPropertiesEditor.resources</Original>
              <Obfuscated>TestAutomationFX.Core.Design.MatchedPropertiesEditor.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Forms.AboutForm.resources</Original>
              <Obfuscated>n.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.FileBrowseControl.resources</Original>
              <Obfuscated>TestAutomationFX.Core.FileBrowseControl.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.ImageDiffViewer.resources</Original>
              <Obfuscated>TestAutomationFX.Core.ImageDiffViewer.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.ImageViewerControl.resources</Original>
              <Obfuscated>TestAutomationFX.Core.ImageViewerControl.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Recording.AddCommentForm.resources</Original>
              <Obfuscated>TestAutomationFX.Core.Recording.AddCommentForm.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.EnterLicenseKeyForm.resources</Original>
              <Obfuscated>TestAutomationFX.UI.EnterLicenseKeyForm.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.FindObjectBaseForm.resources</Original>
              <Obfuscated>TestAutomationFX.UI.FindObjectBaseForm.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.ObjectInfoControl.resources</Original>
              <Obfuscated>TestAutomationFX.UI.ObjectInfoControl.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.UI.RemapObjectForm.resources</Original>
              <Obfuscated>Q.resources</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Delphi.DelphiDll.dll</Original>
              <Obfuscated>TestAutomationFX.Core.Delphi.DelphiDll.dll</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Resources.NetInjector32.TestAutomationFX.NetInjector.dll</Original>
              <Obfuscated>TestAutomationFX.Core.Resources.NetInjector32.TestAutomationFX.NetInjector.dll</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Resources.NetInjector64.TestAutomationFX.NetInjector.dll</Original>
              <Obfuscated>TestAutomationFX.Core.Resources.NetInjector64.TestAutomationFX.NetInjector.dll</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Resources.NetInjector32_40.TestAutomationFX.NetInjector.dll</Original>
              <Obfuscated>TestAutomationFX.Core.Resources.NetInjector32_40.TestAutomationFX.NetInjector.dll</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Resources.NetInjector64_40.TestAutomationFX.NetInjector.dll</Original>
              <Obfuscated>TestAutomationFX.Core.Resources.NetInjector64_40.TestAutomationFX.NetInjector.dll</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Resources.NetInjector32.TestAutomationFX.NetInjectorLoader.exe</Original>
              <Obfuscated>TestAutomationFX.Core.Resources.NetInjector32.TestAutomationFX.NetInjectorLoader.exe</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Resources.NetInjector64_40.TestAutomationFX.NetInjectorLoader64_40.exe</Original>
              <Obfuscated>TestAutomationFX.Core.Resources.NetInjector64_40.TestAutomationFX.NetInjectorLoader64_40.exe</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Resources.NetInjector32_40.TestAutomationFX.NetInjectorLoader_40.exe</Original>
              <Obfuscated>TestAutomationFX.Core.Resources.NetInjector32_40.TestAutomationFX.NetInjectorLoader_40.exe</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Resources.NetInjector64.TestAutomationFX.NetInjectorLoader64.exe</Original>
              <Obfuscated>TestAutomationFX.Core.Resources.NetInjector64.TestAutomationFX.NetInjectorLoader64.exe</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Logging.TAFXLog.xsl</Original>
              <Obfuscated>TestAutomationFX.Core.Logging.TAFXLog.xsl</Obfuscated>
            </Resource>
            <Resource>
              <Original>TestAutomationFX.Core.Resources.CrosshairsCursor.cur</Original>
              <Obfuscated>TestAutomationFX.Core.Resources.CrosshairsCursor.cur</Obfuscated>
            </Resource>
          </ManagedResources>
        </Module>
      </Modules>
    </Assembly>
  </Assemblies>
</DemeanorReport>